---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "Syscoin API"
host: "localhost:8001"
basePath: "/"
tags:
- name: "General"
  description: "All general wallet operations."
- name: "Aliases"
  description: "Operations related to aliases."
- name: "Messaging"
  description: "Operations related to messaging."
- name: "Offers"
  description: "Operations related to offers and the decentralized marketplace functionality."
- name: "Escrow"
  description: "Operations related to escrow."
- name: "Certificates"
  description: "Operations related to digital certificates."
schemes:
- "http"
- "https"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /addmultisigaddress:
    post:
      tags:
      - "General"
      description: "Add a nrequired-to-sign multisignature address to the wallet.\
        \ Each key is a Syscoin address or hex-encoded public key. If 'account' is\
        \ specified (DEPRECATED), assign address to that account."
      operationId: "addmultisigaddress"
      parameters:
      - in: "body"
        name: "request"
        required: true
        schema:
          $ref: "#/definitions/AddMultisigAddressRequest"
      responses:
        200:
          description: "A syscoin address associated with the keys."
          schema:
            type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /aliasaffiliates:
    get:
      tags:
      - "Aliases"
      description: "list affiliations with merchant offers."
      operationId: "aliasaffiliates"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Aliases"
    x-swagger-router-controller: "rpc"
  /aliasstats:
    get:
      tags:
      - "Aliases"
      description: "Show statistics for all non-expired aliases. Only aliases created or updated after unixtime are returned."
      operationId: "aliasstats"
      parameters:
      - name: "unixtime"
        in: "query"
        description: "Only aliases created or updated after unixtime are returned. Timestamp in seconds after epoc. Leave empty to get all non-expired aliases"
        required: false
        type: "number"
      responses:
        200:
          description: "Success"
          schema:
            items:
              $ref: "#/definitions/Alias"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Aliases"
    x-swagger-router-controller: "rpc"    
  /aliasfilter:
    get:
      tags:
      - "Aliases"
      description: "Filter aliases"
      operationId: "aliasfilter"
      parameters:
      - name: "regexp"
        in: "query"
        description: "apply [regexp] on aliases, empty means all aliases"
        required: true
        type: "string"
      - name: "from"
        in: "query"
        description: "show results from this GUID [from], empty means first"
        required: false
        type: "string"
      - name: "safesearch"
        in: "query"
        description: "shows all aliases that are safe to display (not on the ban list)"
        required: false
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AliasListEntry"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Aliases"
    x-swagger-router-controller: "rpc"
  /aliashistory:
    get:
      tags:
      - "Aliases"
      description: "List all stored values of an alias."
      operationId: "aliashistory"
      parameters:
      - name: "aliasname"
        in: "query"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AliasHistoryEntry"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Aliases"
    x-swagger-router-controller: "rpc"
  /aliasinfo:
    get:
      tags:
      - "Aliases"
      description: "Show values of an alias."
      operationId: "aliasinfo"
      parameters:
      - name: "aliasname"
        in: "query"
        required: true
        type: "string"
      - name: "walletless"
        in: "query"
        description: "If this call is happening via a walletless interface where decryption of private information happens by the caller set to true"
        required: false
        type: "boolean"        
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Alias"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Aliases"
    x-swagger-router-controller: "rpc"
  /aliaslist:
    get:
      tags:
      - "Aliases"
      description: "List my own aliases."
      operationId: "aliaslist"
      parameters:
      - name: "aliasname"
        in: "query"
        description: "Alias name to use as filter."
        required: false
        type: "string"
      - name: "walletless"
        in: "query"
        description: "If this call is happening via a walletless interface where decryption of private information happens by the caller set to true"
        required: false
        type: "boolean"          
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AliasListEntry"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Aliases"
    x-swagger-router-controller: "rpc"
  /aliasnew:
    post:
      tags:
      - "Aliases"
      description: "Creates a new Syscoin Alias. If caller is running a wallet requires wallet passphrase to be\
        \ set with walletpassphrase call."
      operationId: "aliasnew"
      parameters:
      - in: "body"
        name: "request"
        required: true
        schema:
          $ref: "#/definitions/AliasNewRequest"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Aliases"
    x-swagger-router-controller: "rpc"
  /aliasupdate:
    post:
      tags:
      - "Aliases"
      description: "Update and possibly transfer an alias."
      operationId: "aliasupdate"
      parameters:
      - in: "body"
        name: "request"
        required: true
        schema:
          $ref: "#/definitions/AliasUpdateRequest"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Aliases"
    x-swagger-router-controller: "rpc"
  /certfilter:
    get:
      tags:
      - "Certificates"
      description: "scan and filter certs"
      operationId: "certfilter"
      parameters:
      - name: "regexp"
        in: "query"
        description: "apply [regexp] on certes, empty means all certes"
        required: false
        type: "string"
      - name: "maxage"
        in: "query"
        description: "look in last [maxage] blocks"
        required: false
        type: "string"
      - name: "from"
        in: "query"
        description: "show results from number [from]"
        required: false
        type: "string"
      - name: "nb"
        in: "query"
        description: "show [nb] results, 0 means all"
        required: false
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CertListEntry"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Certificates"
    x-swagger-router-controller: "rpc"
  /certhistory:
    get:
      tags:
      - "Certificates"
      description: "List all stored values of an cert."
      operationId: "certhistory"
      parameters:
      - name: "certname"
        in: "query"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CertHistoryEntry"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Certificates"
    x-swagger-router-controller: "rpc"
  /certinfo:
    get:
      tags:
      - "Certificates"
      description: "Show stored values of a single certificate."
      operationId: "certinfo"
      parameters:
      - name: "certname"
        in: "query"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Cert"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Certificates"
    x-swagger-router-controller: "rpc"
  /certlist:
    get:
      tags:
      - "Certificates"
      description: "Show stored values of a single certificate."
      operationId: "certlist"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CertListEntry"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Certificates"
    x-swagger-router-controller: "rpc"
  /certnew:
    post:
      tags:
      - "Certificates"
      description: "Create a new Syscoin Certificate. Requires wallet passphrase to\
        \ be set with walletpassphrase call."
      operationId: "certnew"
      parameters:
      - in: "body"
        name: "request"
        required: true
        schema:
          $ref: "#/definitions/CertNewRequest"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Certificates"
    x-swagger-router-controller: "rpc"
  /certscan:
    get:
      tags:
      - "Certificates"
      description: "scan all certs, starting at start-cert and returning a maximum\
        \ number of entries (default 500)"
      operationId: "certscan"
      parameters:
      - name: "start-cert"
        in: "query"
        required: false
        type: "string"
      - name: "max-returned"
        in: "query"
        required: false
        type: "number"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Certificates"
    x-swagger-router-controller: "rpc"
  /certtransfer:
    post:
      tags:
      - "Certificates"
      description: "Transfer certificate from one user to another. Requires wallet\
        \ passphrase to be set with walletpassphrase call."
      operationId: "certtransfer"
      parameters:
      - in: "body"
        name: "request"
        required: true
        schema:
          $ref: "#/definitions/CertTransferRequest"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Certificates"
    x-swagger-router-controller: "rpc"
  /certupdate:
    post:
      tags:
      - "Certificates"
      description: "Perform an update on an certificate you control. Requires wallet\
        \ passphrase to be set with walletpassphrase call."
      operationId: "certupdate"
      parameters:
      - in: "body"
        name: "request"
        required: true
        schema:
          $ref: "#/definitions/CertUpdateRequest"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Certificates"
    x-swagger-router-controller: "rpc"
  /dumpprivkey:
    get:
      tags:
      - "General"
      description: "Reveals the private key corresponding to 'syscoinaddress'. Then\
        \ the importprivkey can be used with this output."
      operationId: "dumpprivkey"
      parameters:
      - name: "address"
        in: "query"
        description: "The syscoin address for the private key"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /dumpwallet:
    get:
      tags:
      - "General"
      description: "Dumps all wallet keys in a human-readable format."
      operationId: "dumpwallet"
      parameters:
      - name: "filename"
        in: "query"
        description: "The filename"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /escrowclaimrefund:
    post:
      tags:
      - "Escrow"
      description: "Claim escrow funds released from seller or arbiter using escrowrefund.\
        \ Requires wallet passphrase to be set with walletpassphrase call."
      operationId: "escrowclaimrefund"
      parameters:
      - in: "body"
        name: "request"
        required: true
        schema:
          $ref: "#/definitions/EscrowClaimRefundRequest"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Escrow"
    x-swagger-router-controller: "rpc"
  /escrowclaimrelease:
    post:
      tags:
      - "Escrow"
      description: "Claim escrow funds released from buyer or arbiter using escrowrelease.\
        \ Requires wallet passphrase to be set with walletpassphrase call."
      operationId: "escrowclaimrelease"
      parameters:
      - in: "body"
        name: "request"
        required: true
        schema:
          $ref: "#/definitions/EscrowClaimReleaseRequest"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Escrow"
    x-swagger-router-controller: "rpc"
  /escrowcomplete:
    post:
      tags:
      - "Escrow"
      description: "Accepts an offer that's in escrow, to complete the escrow process.\
        \ Requires wallet passphrase to be set with walletpassphrase call."
      operationId: "escrowcomplete"
      parameters:
      - in: "body"
        name: "request"
        required: true
        schema:
          $ref: "#/definitions/EscrowCompleteRequest"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Escrow"
    x-swagger-router-controller: "rpc"
  /escrowfilter:
    get:
      tags:
      - "Escrow"
      description: "scan and filter escrows"
      operationId: "escrowfilter"
      parameters:
      - name: "search"
        in: "query"
        description: "Find arbiter or seller via alias name or an escrow GUID, empty\
          \ means all escrows"
        required: true
        type: "string"
      - name: "maxage"
        in: "query"
        description: "look in last [maxage] blocks"
        required: false
        type: "number"
      - name: "from"
        in: "query"
        description: "show results from number [from]"
        required: false
        type: "number"
      - name: "nb"
        in: "query"
        description: "show [nb] results, 0 means all"
        required: false
        type: "number"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/EscrowListEntry"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Escrow"
    x-swagger-router-controller: "rpc"
  /escrowhistory:
    get:
      tags:
      - "Escrow"
      description: "List all stored values of an escrow."
      operationId: "escrowhistory"
      parameters:
      - name: "escrow"
        in: "query"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/EscrowHistoryEntry"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Escrow"
    x-swagger-router-controller: "rpc"
  /escrowinfo:
    get:
      tags:
      - "Escrow"
      description: "Show stored values of a single escrow"
      operationId: "escrowinfo"
      parameters:
      - name: "escrow"
        in: "query"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Escrow"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Escrow"
    x-swagger-router-controller: "rpc"
  /escrowlist:
    get:
      tags:
      - "Escrow"
      description: "list my own escrows"
      operationId: "escrowlist"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/EscrowListEntry"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Escrow"
    x-swagger-router-controller: "rpc"
  /escrownew:
    post:
      tags:
      - "Escrow"
      description: "Create new arbitrated Syscoin escrow."
      operationId: "escrownew"
      parameters:
      - in: "body"
        name: "request"
        required: true
        schema:
          $ref: "#/definitions/EscrowNewRequest"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Escrow"
    x-swagger-router-controller: "rpc"
  /escrowscan:
    get:
      tags:
      - "Escrow"
      description: "scan all escrows, starting at start-escrow and returning a maximum\
        \ number of entries (default 500)"
      operationId: "escrowscan"
      parameters:
      - name: "start-escrow"
        in: "query"
        required: false
        type: "string"
      - name: "max-returned"
        in: "query"
        required: false
        type: "number"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Escrow"
    x-swagger-router-controller: "rpc"
  /getaccount:
    get:
      tags:
      - "General"
      description: "DEPRECATED. Returns the account associated with the given address."
      operationId: "getaccount"
      parameters:
      - name: "syscoinaddress"
        in: "query"
        description: "The syscoin address for account lookup."
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /getaccountaddress:
    get:
      tags:
      - "General"
      description: "DEPRECATED. Returns the current Syscoin address for receiving\
        \ payments to this account."
      operationId: "getaccountaddress"
      parameters:
      - name: "account"
        in: "query"
        description: "The account name for the address. It can also be set to the\
          \ empty string \"\" to represent the default account. The account does not\
          \ need to exist, it will be created and a new address created  if there\
          \ is no account by the given name."
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /getaddressesbyaccount:
    get:
      tags:
      - "General"
      description: "DEPRECATED. Returns the list of addresses for the given account."
      operationId: "getaddressesbyaccount"
      parameters:
      - name: "account"
        in: "query"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /getbalance:
    get:
      tags:
      - "General"
      description: "If account is not specified, returns the server's total available\
        \ balance. If account is specified (DEPRECATED), returns the balance in the\
        \ account. Note that the account \"\" is not the same as leaving the parameter\
        \ out. The server total may be different to the balance in the default \"\"\
        \ account."
      operationId: "getbalance"
      parameters:
      - name: "account"
        in: "query"
        description: "DEPRECATED. The selected account, or \"*\" for entire wallet.\
          \ It may be the default account using \"\"."
        required: false
        type: "string"
      - name: "minconf"
        in: "query"
        description: "Only include transactions confirmed at least this many times."
        required: false
        type: "number"
      - name: "includeWatchonly"
        in: "query"
        description: "Also include balance in watchonly addresses (see 'importaddress')"
        required: false
        type: "boolean"
      responses:
        200:
          description: "Success"
          schema:
            type: "number"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /getinfo:
    get:
      tags:
      - "General"
      description: "Returns an object containing various state info."
      operationId: "getinfo"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Info"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security: []
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /getmininginfo:
    get:
      tags:
      - "General"
      description: "Returns a json object containing mining-related information."
      operationId: "getmininginfo"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/MiningInfo"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /getnewaddress:
    post:
      tags:
      - "General"
      description: "Returns a new Syscoin address for receiving payments. If 'account'\
        \ is specified (DEPRECATED), it is added to the address book so payments received\
        \ with the address will be credited to 'account'."
      operationId: "getnewaddress"
      parameters:
      - in: "body"
        name: "request"
        required: false
        schema:
          $ref: "#/definitions/GetNewAddressRequest"
      responses:
        200:
          description: "Success"
          schema:
            type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /getpeerinfo:
    get:
      tags:
      - "General"
      description: "Returns data about each connected network node as a json array\
        \ of objects."
      operationId: "getpeerinfo"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/PeerInfoResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /getreceivedbyaccount:
    get:
      tags:
      - "General"
      description: "DEPRECATED. Returns the total amount received by addresses with\
        \ <account> in transactions with at least [minconf] confirmations."
      operationId: "getreceivedbyaccount"
      parameters:
      - name: "account"
        in: "query"
        description: "The selected account, may be the default account using \"\"."
        required: true
        type: "string"
      - name: "minconf"
        in: "query"
        description: "Only include transactions confirmed at least this many times."
        required: false
        type: "number"
      responses:
        200:
          description: "Success"
          schema:
            type: "number"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /getreceivedbyaddress:
    get:
      tags:
      - "General"
      description: "Returns the total amount received by the given syscoinaddress\
        \ in transactions with at least minconf confirmations."
      operationId: "getreceivedbyaddress"
      parameters:
      - name: "syscoinaddress"
        in: "query"
        description: "The syscoin address for transactions."
        required: true
        type: "string"
      - name: "minconf"
        in: "query"
        description: "Only include transactions confirmed at least this many times."
        required: false
        type: "number"
      responses:
        200:
          description: "Success"
          schema:
            type: "number"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /gettransaction:
    get:
      tags:
      - "General"
      description: "Get detailed information about in-wallet transaction <txid>"
      operationId: "gettransaction"
      parameters:
      - name: "txid"
        in: "query"
        description: "The transaction id"
        required: true
        type: "string"
      - name: "includeWatchonly"
        in: "query"
        description: "Whether to include watchonly addresses in balance calculation\
          \ and details[]"
        required: false
        type: "boolean"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Transaction"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /getunconfirmedbalance:
    get:
      tags:
      - "General"
      description: "Returns the server's total unconfirmed balance"
      operationId: "getunconfirmedbalance"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            type: "number"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /getv2address:
    get:
      tags:
      - "General"
      description: "Returns a new Syscoin (starts with 1) address for receiving payments.\
        \ If 'account' is specified (DEPRECATED), it is added to the address book\
        \ so payments received with the address will be credited to 'account'."
      operationId: "getv2address"
      parameters:
      - name: "account"
        in: "query"
        description: "DEPRECATED. The account name for the address to be linked to.\
          \ If not provided, the default account \"\" is used. It can also be set\
          \ to the empty string \"\" to represent the default account. The account\
          \ does not need to exist, it will be created if there is no account by the\
          \ given name."
        required: false
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /getwalletinfo:
    get:
      tags:
      - "General"
      description: "Returns an object containing various wallet state info."
      operationId: "getwalletinfo"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/WalletInfo"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /importaddress:
    get:
      tags:
      - "General"
      description: "Adds a script (in hex) or address that can be watched as if it\
        \ were in your wallet but cannot be used to spend."
      operationId: "importaddress"
      parameters:
      - in: "body"
        name: "request"
        required: true
        schema:
          $ref: "#/definitions/ImportAddressRequest"
      responses:
        200:
          description: "Success"
          schema:
            type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /importprivkey:
    get:
      tags:
      - "General"
      description: "Adds a private key (as returned by dumpprivkey) to your wallet."
      operationId: "importprivkey"
      parameters:
      - in: "body"
        name: "request"
        required: true
        schema:
          $ref: "#/definitions/ImportPrivKeyRequest"
      responses:
        200:
          description: "Success"
          schema:
            type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /importpubkey:
    get:
      tags:
      - "General"
      description: "Adds a public key (in hex) that can be watched as if it were in\
        \ your wallet but cannot be used to spend."
      operationId: "importpubkey"
      parameters:
      - in: "body"
        name: "request"
        required: true
        schema:
          $ref: "#/definitions/ImportPubKeyRequest"
      responses:
        200:
          description: "Success"
          schema:
            type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /importwallet:
    get:
      tags:
      - "General"
      description: "Imports keys from a wallet dump file (see dumpwallet)."
      operationId: "importwallet"
      parameters:
      - in: "body"
        name: "request"
        required: true
        schema:
          $ref: "#/definitions/ImportWalletRequest"
      responses:
        200:
          description: "Success"
          schema:
            type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /listaccounts:
    get:
      tags:
      - "General"
      description: "DEPRECATED. Returns Object that has account names as keys, account\
        \ balances as values."
      operationId: "listaccounts"
      parameters:
      - name: "minconf"
        in: "query"
        description: "Only include transactions with at least this many confirmations"
        required: false
        type: "number"
      - name: "includeWatchonly"
        in: "query"
        description: "Include balances in watchonly addresses (see 'importaddress')"
        required: false
        type: "boolean"
      responses:
        200:
          description: "Success"
          schema:
            type: "object"
            properties: {}
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /listaddressgroupings:
    get:
      tags:
      - "General"
      description: "Lists groups of addresses which have had their common ownership\
        \ made public by common use as inputs or as the resulting change in past transactions"
      operationId: "listaddressgroupings"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              type: "array"
              items:
                $ref: "#/definitions/AddressGrouping"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /listreceivedbyaccount:
    get:
      tags:
      - "General"
      description: "DEPRECATED. List balances by account."
      operationId: "listreceivedbyaccount"
      parameters:
      - name: "minconf"
        in: "query"
        description: "Only include transactions confirmed at least this many times."
        required: false
        type: "number"
      - name: "includeempty"
        in: "query"
        description: "Whether to include accounts that haven't received any payments."
        required: false
        type: "boolean"
      - name: "includeWatchonly"
        in: "query"
        description: "Whether to include watchonly addresses (see 'importaddress')."
        required: false
        type: "boolean"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Account"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /listreceivedbyaddress:
    get:
      tags:
      - "General"
      description: "List balances by receiving address."
      operationId: "listreceivedbyaddress"
      parameters:
      - name: "minconf"
        in: "query"
        description: "Only include transactions confirmed at least this many times."
        required: false
        type: "number"
      - name: "includeempty"
        in: "query"
        description: "Whether to include accounts that haven't received any payments."
        required: false
        type: "boolean"
      - name: "includeWatchonly"
        in: "query"
        description: "Whether to include watchonly addresses (see 'importaddress')."
        required: false
        type: "boolean"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Account"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /listsinceblock:
    get:
      tags:
      - "General"
      description: "Get all transactions in blocks since block [blockhash], or all\
        \ transactions if omitted"
      operationId: "listsinceblock"
      parameters:
      - name: "blockhash"
        in: "query"
        description: "The block hash to list transactions since"
        required: false
        type: "string"
      - name: "includeWatchonly"
        in: "query"
        description: "Whether to include watchonly addresses (see 'importaddress')."
        required: false
        type: "boolean"
      - name: "target-confirmations"
        in: "query"
        required: false
        type: "number"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ListSinceBlockResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /listtransactions:
    get:
      tags:
      - "General"
      description: "Returns up to 'count' most recent transactions skipping the first\
        \ 'from' transactions for account 'account'."
      operationId: "listtransactions"
      parameters:
      - name: "account"
        in: "query"
        description: "DEPRECATED. The account name. Should be \"*\"."
        required: false
        type: "string"
      - name: "count"
        in: "query"
        description: "The number of transactions to return"
        required: false
        type: "number"
      - name: "from"
        in: "query"
        description: "The number of transactions to skip"
        required: false
        type: "number"
      - name: "includeWatchonly"
        in: "query"
        description: "Include transactions to watchonly addresses (see 'importaddress')"
        required: false
        type: "boolean"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TransactionListEntry"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /login:
    get:
      tags:
      - "Blockmarket"
      description: "Returns a session token for use with subsquent protected calls."
      operationId: "login"
      parameters:
      - name: "auth"
        in: "query"
        description: "MD5 hash of the user's authentication information- username:password."
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security: []
      x-swagger-router-controller: "Blockmarket"
    x-swagger-router-controller: "rpc"
  /messagehistory:
    get:
      tags:
      - "Messaging"
      description: "List all stored values of a message."
      operationId: "messagehistory"
      parameters:
      - name: "message"
        in: "query"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MessageHistoryEntry"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Messaging"
    x-swagger-router-controller: "rpc"
  /messageinfo:
    get:
      tags:
      - "Messaging"
      description: "Show stored values of a single message."
      operationId: "messageinfo"
      parameters:
      - name: "guid"
        in: "query"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Message"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Messaging"
    x-swagger-router-controller: "rpc"
  /messagelist:
    get:
      tags:
      - "Messaging"
      description: "List my own messages"
      operationId: "messagelist"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MessageListEntry"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Messaging"
    x-swagger-router-controller: "rpc"
  /messagenew:
    post:
      tags:
      - "Messaging"
      description: "Create a new Syscoin encrypted message."
      operationId: "messagenew"
      parameters:
      - in: "body"
        name: "request"
        required: true
        schema:
          $ref: "#/definitions/MessageNewRequest"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Messaging"
    x-swagger-router-controller: "rpc"
  /messagesentlist:
    get:
      tags:
      - "Messaging"
      description: "list my sent messages"
      operationId: "messagesentlist"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MessageListEntry"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Messaging"
    x-swagger-router-controller: "rpc"
  /move:
    post:
      tags:
      - "General"
      description: "DEPRECATED. Move a specified amount from one account in your wallet\
        \ to another."
      operationId: "move"
      parameters:
      - in: "body"
        name: "request"
        required: true
        schema:
          $ref: "#/definitions/MoveRequest"
      responses:
        200:
          description: "Success"
          schema:
            type: "boolean"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /offeraccept:
    post:
      tags:
      - "Offers"
      description: "Accept&Pay for a confirmed offer."
      operationId: "offeraccept"
      parameters:
      - in: "body"
        name: "request"
        required: true
        schema:
          $ref: "#/definitions/OfferAcceptRequest"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Offers"
    x-swagger-router-controller: "rpc"
  /offeracceptlist:
    get:
      tags:
      - "Offers"
      description: "list my offer accepts"
      operationId: "offeracceptlist"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/OfferAccept"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Offers"
    x-swagger-router-controller: "rpc"
  /offeraddwhitelist:
    post:
      tags:
      - "Offers"
      description: "Add to the affiliate list of your offer(controls who can resell).\
        \ Requires wallet passphrase to be set with walletpassphrase call."
      operationId: "offeraddwhitelist"
      parameters:
      - in: "body"
        name: "request"
        required: true
        schema:
          $ref: "#/definitions/OfferAddWhitelistRequest"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Offers"
    x-swagger-router-controller: "rpc"
  /offerclearwhitelist:
    post:
      tags:
      - "Offers"
      description: "Clear the affiliate list of your offer(controls who can resell).\
        \ Requires wallet passphrase to be set with walletpassphrase call."
      operationId: "offerclearwhitelist"
      parameters:
      - in: "body"
        name: "request"
        required: true
        schema:
          $ref: "#/definitions/OfferClearWhitelistRequest"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Offers"
    x-swagger-router-controller: "rpc"
  /offerfilter:
    get:
      tags:
      - "Offers"
      description: "scan and filter offeres"
      operationId: "offerfilter"
      parameters:
      - name: "regexp"
        in: "query"
        description: "apply [regexp] on offeres, empty means all offeres"
        required: true
        type: "string"
      - name: "maxage"
        in: "query"
        description: "look in last [maxage] blocks"
        required: false
        type: "number"
      - name: "from"
        in: "query"
        description: "show results from number [from]"
        required: false
        type: "number"
      - name: "nb"
        in: "query"
        description: "show [nb] results, 0 means all"
        required: false
        type: "number"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/OfferListEntry"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Offers"
    x-swagger-router-controller: "rpc"
  /offerhistory:
    get:
      tags:
      - "Offers"
      description: "List all stored values of an offer."
      operationId: "offerhistory"
      parameters:
      - name: "offer"
        in: "query"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/OfferHistoryEntry"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Offers"
    x-swagger-router-controller: "rpc"
  /offerinfo:
    get:
      tags:
      - "Offers"
      description: "Show values of an offer."
      operationId: "offerinfo"
      parameters:
      - name: "guid"
        in: "query"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Offer"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Offers"
    x-swagger-router-controller: "rpc"
  /offerlink:
    post:
      tags:
      - "Offers"
      description: "Requires wallet passphrase to be set with walletpassphrase call."
      operationId: "offerlink"
      parameters:
      - in: "body"
        name: "request"
        required: true
        schema:
          $ref: "#/definitions/OfferLinkRequest"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Offers"
    x-swagger-router-controller: "rpc"
  /offerlist:
    get:
      tags:
      - "Offers"
      description: "list my own offers"
      operationId: "offerlist"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/OfferListEntry"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Offers"
    x-swagger-router-controller: "rpc"
  /offernew:
    post:
      tags:
      - "Offers"
      description: "Create a new offer on the Syscoin decentralized marketplace. Requires\
        \ wallet passphrase to be set with walletpassphrase call."
      operationId: "offernew"
      parameters:
      - in: "body"
        name: "request"
        required: true
        schema:
          $ref: "#/definitions/OfferNewRequest"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Offers"
    x-swagger-router-controller: "rpc"
  /offerremovewhitelist:
    post:
      tags:
      - "Offers"
      description: "Remove from the affiliate list of your offer(controls who can\
        \ resell). Requires wallet passphrase to be set with walletpassphrase call."
      operationId: "offerremovewhitelist"
      parameters:
      - in: "body"
        name: "request"
        required: true
        schema:
          $ref: "#/definitions/OfferRemoveWhitelistRequest"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Offers"
    x-swagger-router-controller: "rpc"
  /offerscan:
    get:
      tags:
      - "Offers"
      description: "scan all offers, starting at start-offer and returning a maximum\
        \ number of entries (default 500)"
      operationId: "offerscan"
      parameters:
      - name: "start-offer"
        in: "query"
        required: false
        type: "string"
      - name: "max-returned"
        in: "query"
        required: false
        type: "number"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Offers"
    x-swagger-router-controller: "rpc"
  /offerupdate:
    post:
      tags:
      - "Offers"
      description: "Perform an update on an offer you control. Requires wallet passphrase\
        \ to be set with walletpassphrase call."
      operationId: "offerupdate"
      parameters:
      - in: "body"
        name: "request"
        required: true
        schema:
          $ref: "#/definitions/OfferUpdateRequest"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Offers"
    x-swagger-router-controller: "rpc"
  /offerwhitelist:
    get:
      tags:
      - "Offers"
      description: "List all affiliates for this offer."
      operationId: "offerwhitelist"
      parameters:
      - name: "offerguid"
        in: "query"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/OfferWhitelistEntry"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Offers"
    x-swagger-router-controller: "rpc"
  /sendfrom:
    post:
      tags:
      - "General"
      description: "DEPRECATED (use sendtoaddress). Sent an amount from an account\
        \ to a syscoin address. The amount is a real and is rounded to the nearest\
        \ 0.00000001. Requires wallet passphrase to be set with walletpassphrase call."
      operationId: "sendfrom"
      parameters:
      - in: "body"
        name: "request"
        required: true
        schema:
          $ref: "#/definitions/SendFromRequest"
      responses:
        200:
          description: "Success"
          schema:
            type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /sendmany:
    post:
      tags:
      - "General"
      description: "Send multiple times. Amounts are double-precision floating point\
        \ numbers. Requires wallet passphrase to be set with walletpassphrase call."
      operationId: "sendmany"
      parameters:
      - in: "body"
        name: "request"
        required: true
        schema:
          $ref: "#/definitions/SendManyRequest"
      responses:
        200:
          description: "Success"
          schema:
            type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /sendtoaddress:
    post:
      tags:
      - "General"
      description: "Send an amount to a given address. The amount is a real and is\
        \ rounded to the nearest 0.00000001. Requires wallet passphrase to be set\
        \ with walletpassphrase call."
      operationId: "sendtoaddress"
      parameters:
      - in: "body"
        name: "request"
        required: true
        schema:
          $ref: "#/definitions/SendToAddressRequest"
      responses:
        200:
          description: "Success"
          schema:
            type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /signmessage:
    post:
      tags:
      - "General"
      description: "Sign a message with the private key of an address. Requires wallet\
        \ passphrase to be set with walletpassphrase call."
      operationId: "signmessage"
      parameters:
      - in: "body"
        name: "request"
        required: true
        schema:
          $ref: "#/definitions/SignMessageRequest"
      responses:
        200:
          description: "Success"
          schema:
            type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /validateaddress:
    get:
      tags:
      - "General"
      description: "Return information about the given syscoin address."
      operationId: "validateaddress"
      parameters:
      - name: "syscoinaddress"
        in: "query"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/ValidateAddressResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /verifymessage:
    get:
      tags:
      - "General"
      description: "Verify a signed message"
      operationId: "verifymessage"
      parameters:
      - name: "syscoinaddress"
        in: "query"
        description: "The syscoin address to use for the signature."
        required: true
        type: "string"
      - name: "signature"
        in: "query"
        description: "The signature provided by the signer in base 64 encoding (see\
          \ signmessage)."
        required: true
        type: "string"
      - name: "message"
        in: "query"
        description: "The message that was signed."
        required: true
        type: "string"
      responses:
        200:
          description: "If the signature is verified or not."
          schema:
            type: "boolean"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /walletlock:
    post:
      tags:
      - "General"
      description: "Removes the wallet encryption key from memory, locking the wallet.\
        \ After calling this method, you will need to call walletpassphrase again\
        \ before being able to call any methods which require the wallet to be unlocked."
      operationId: "walletlock"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /walletpassphrase:
    post:
      tags:
      - "General"
      description: "Stores the wallet decryption key in memory for 'timeout' seconds.\
        \ This is needed prior to performing transactions related to private keys\
        \ such as sending syscoins"
      operationId: "walletpassphrase"
      parameters:
      - in: "body"
        name: "request"
        required: true
        schema:
          $ref: "#/definitions/WalletPassphraseRequest"
      responses:
        200:
          description: "Success"
          schema:
            type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
  /walletpassphrasechange:
    post:
      tags:
      - "General"
      description: "Changes the wallet passphrase from 'oldpassphrase' to 'newpassphrase'."
      operationId: "walletpassphrasechange"
      parameters:
      - in: "body"
        name: "request"
        required: true
        schema:
          $ref: "#/definitions/WalletPassphraseChangeRequest"
      responses:
        200:
          description: "Success"
          schema:
            type: "string"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "General"
    x-swagger-router-controller: "rpc"
securityDefinitions:
  token:
    type: "apiKey"
    name: "token"
    in: "header"
definitions:
  Info:
    required:
    - "balance"
    - "blocks"
    - "connections"
    - "difficulty"
    - "errors"
    - "keypoololdest"
    - "keypoolsize"
    - "paytxfee"
    - "protocolversion"
    - "proxy"
    - "relayfee"
    - "testnet"
    - "timeoffset"
    - "unlocked_until"
    - "version"
    - "walletversion"
    properties:
      version:
        type: "number"
        description: "the server version"
      protocolversion:
        type: "number"
        description: "the protocol version"
      walletversion:
        type: "number"
        description: "the wallet version"
      balance:
        type: "number"
        description: "the total syscoin balance of the wallet"
      blocks:
        type: "number"
        description: "the current number of blocks processed in the server"
      timeoffset:
        type: "number"
        description: "the time offset"
      connections:
        type: "number"
        description: "the number of connections"
      proxy:
        type: "string"
        description: "the proxy used by the server"
      difficulty:
        type: "number"
        description: "the current difficulty"
      testnet:
        type: "boolean"
        description: "if the server is using testnet or not"
      keypoololdest:
        type: "number"
        description: "the timestamp (seconds since GMT epoch) of the oldest pre-generated\
          \ key in the key pool"
      keypoolsize:
        type: "number"
        description: "how many new keys are pre-generated"
      unlocked_until:
        type: "number"
        description: "the timestamp in seconds since epoch (midnight Jan 1 1970 GMT)\
          \ that the wallet is unlocked for transfers, or 0 if the wallet is locked"
      paytxfee:
        type: "number"
        description: "the transaction fee set in SYS/kB"
      relayfee:
        type: "number"
        description: "minimum relay fee for non-free transactions in SYS/kB"
      errors:
        type: "string"
        description: "any error messages"
  MiningInfo:
    required:
    - "blocks"
    - "chain"
    - "currentblocksize"
    - "currentblocktx"
    - "difficulty"
    - "errors"
    - "generate"
    - "genproclimit"
    - "pooledtx"
    - "testnet"
    properties:
      blocks:
        type: "number"
        description: "The current block"
      currentblocksize:
        type: "number"
        description: "The last block size"
      currentblocktx:
        type: "number"
        description: "The last block transaction"
      difficulty:
        type: "number"
        description: "The current difficulty"
      errors:
        type: "string"
        description: "Current errors"
      genproclimit:
        type: "number"
        description: "The processor limit for generation. -1 if no generation."
      networkhashps:
        type: "number"
        description: "Current network hashrate in kbs"
      pooledtx:
        type: "number"
        description: "The size of the mem pool"
      testnet:
        type: "boolean"
        description: "If using testnet or not"
      chain:
        type: "string"
        description: "current network name as defined in BIP70 (main, test, regtest)"
      generate:
        type: "boolean"
        description: "If the generation is on or off (see getgenerate or setgenerate\
          \ calls)"
  PeerInfoResponse:
    type: "array"
    items:
      $ref: "#/definitions/PeerInfo"
  PeerInfo:
    required:
    - "addr"
    - "addrlocal"
    - "banscore"
    - "bytesrecv"
    - "bytesrecv_per_msg"
    - "bytessent"
    - "bytessent_per_msg"
    - "conntime"
    - "id"
    - "inbound"
    - "inflight"
    - "lastrecv"
    - "lastsend"
    - "minping"
    - "pingtime"
    - "relaytxes"
    - "services"
    - "startingheight"
    - "subver"
    - "synced_blocks"
    - "synced_headers"
    - "timeoffset"
    - "version"
    - "whitelisted"
    properties:
      id:
        type: "number"
        description: "Peer index"
      addr:
        type: "string"
        description: "The ip address and port of the peer"
      addrlocal:
        type: "string"
        description: "local address"
      services:
        type: "string"
        description: "The services offered"
      relaytxes:
        type: "boolean"
        description: "Whether peer has asked us to relay transactions to it"
      lastsend:
        type: "number"
        description: "The time in seconds since epoch (Jan 1 1970 GMT) of the last\
          \ send"
      lastrecv:
        type: "number"
        description: "The time in seconds since epoch (Jan 1 1970 GMT) of the last\
          \ receive"
      bytessent:
        type: "number"
        description: "The total bytes sent"
      bytesrecv:
        type: "number"
        description: "The total bytes received"
      conntime:
        type: "number"
        description: "The connection time in seconds since epoch (Jan 1 1970 GMT)"
      timeoffset:
        type: "number"
        description: "The time offset in seconds"
      pingtime:
        type: "number"
        description: "ping time"
      minping:
        type: "number"
        description: "minimum observed ping time"
      version:
        type: "number"
        description: "The peer version, such as 7001"
      subver:
        type: "string"
        description: "The string version"
      inbound:
        type: "boolean"
        description: "Inbound (true) or Outbound (false)"
      startingheight:
        type: "number"
        description: "The starting height (block) of the peer"
      banscore:
        type: "number"
        description: "The ban score"
      synced_headers:
        type: "number"
        description: "The last header we have in common with this peer"
      synced_blocks:
        type: "number"
        description: "The last block we have in common with this peer"
      inflight:
        type: "array"
        description: "The heights of blocks we're currently asking from this peer"
        items:
          type: "number"
      whitelisted:
        type: "boolean"
        description: "If this peer is whitelisted"
      bytessent_per_msg:
        $ref: "#/definitions/ByteMessageInfo"
      bytesrecv_per_msg:
        $ref: "#/definitions/ByteMessageInfo"
  ByteMessageInfo:
    required:
    - "addr"
    - "getheaders"
    - "headers"
    - "inv"
    - "ping"
    - "pong"
    - "sendheaders"
    - "verack"
    - "version"
    properties:
      addr:
        type: "number"
      block:
        type: "number"
      getaddr:
        type: "number"
      getdata:
        type: "number"
      getheaders:
        type: "number"
      headers:
        type: "number"
      inv:
        type: "number"
      ping:
        type: "number"
      pong:
        type: "number"
      sendheaders:
        type: "number"
      tx:
        type: "number"
      verack:
        type: "number"
      version:
        type: "number"
  ValidateAddressResponse:
    properties:
      isvalid:
        type: "boolean"
        description: "If the address is valid or not. If not, this is the only property\
          \ returned."
      address:
        type: "string"
        description: "The syscoin address validated"
      ismine:
        type: "boolean"
        description: "If the address is yours or not"
      iswatchonly:
        type: "boolean"
        description: "If the address is watchonly"
      isscript:
        type: "boolean"
        description: "If the key is a script"
      pubkey:
        type: "string"
        description: "The hex value of the raw public key"
      iscompressed:
        type: "boolean"
        description: "If the address is compressed"
      account:
        type: "string"
        description: "DEPRECATED. The account associated with the address, \"\" is\
          \ the default account"
  ErrorResponse:
    required:
    - "message"
    properties:
      message:
        type: "string"
  Alias:
    properties:
      name:
        type: "string"
      value:
        type: "string"
      privatevalue:
        type: "string"
      txid:
        type: "string"
      address:
        type: "string"
      ismine:
        type: "boolean"
      lastupdate_height:
        type: "number"
      expires_in:
        type: "number"
      expires_on:
        type: "number"
      expired:
        type: "boolean"
  AliasListEntry:
    required:
    - "expired"
    - "expires_in"
    - "expires_on"
    - "name"
    - "pending"
    - "privatevalue"
    - "value"
    properties:
      name:
        type: "string"
      value:
        type: "string"
      privatevalue:
        type: "string"
      expires_in:
        type: "number"
      expires_on:
        type: "number"
      expired:
        type: "boolean"
      pending:
        type: "boolean"
      txid:
        type: "string"
  AliasHistoryEntry:
    properties:
      name:
        type: "string"
      aliastype:
        type: "string"
      value:
        type: "string"
      privatevalue:
        type: "string"
      txid:
        type: "string"
      address:
        type: "string"
      lastupdate_height:
        type: "number"
      expires_in:
        type: "number"
      expires_on:
        type: "number"
      expired:
        type: "boolean"
  CertListEntry:
    properties:
      cert:
        type: "string"
      title:
        type: "string"
      data:
        type: "string"
      private:
        type: "boolean"
      expires_in:
        type: "number"
      expires_on:
        type: "number"
      expired:
        type: "boolean"
      address:
        type: "string"
      alias:
        type: "string"
  Cert:
    properties:
      cert:
        type: "string"
      txid:
        type: "string"
      height:
        type: "number"
      title:
        type: "string"
      data:
        type: "string"
      private:
        type: "boolean"
      ismine:
        type: "boolean"
      address:
        type: "string"
      alias:
        type: "string"
      expires_in:
        type: "number"
      expires_on:
        type: "number"
      expired:
        type: "boolean"
  CertHistoryEntry:
    properties:
      cert:
        type: "string"
      certtype:
        type: "string"
      private:
        type: "boolean"
      data:
        type: "string"
      txid:
        type: "string"
      address:
        type: "string"
      alias:
        type: "string"
      expires_in:
        type: "number"
      expires_on:
        type: "number"
      expired:
        type: "boolean"
  EscrowHistoryEntry:
    properties:
      escrow:
        type: "string"
      escrowtype:
        type: "string"
      txid:
        type: "string"
      seller:
        type: "string"
      arbiter:
        type: "string"
      buyer:
        type: "string"
      offer:
        type: "string"
      offertitle:
        type: "string"
      offeracceptlink:
        type: "string"
      total:
        type: "number"
      expired:
        type: "boolean"
      height:
        type: "number"
  EscrowListEntry:
    properties:
      escrow:
        type: "string"
      time:
        type: "number"
      seller:
        type: "string"
      arbiter:
        type: "string"
      buyer:
        type: "string"
      offer:
        type: "string"
      offertitle:
        type: "string"
      offeracceptlink:
        type: "string"
      total:
        type: "number"
      status:
        type: "string"
      expired:
        type: "boolean"
  Escrow:
    properties:
      escrow:
        type: "string"
      time:
        type: "string"
      seller:
        type: "string"
      arbiter:
        type: "string"
      buyer:
        type: "string"
      offer:
        type: "string"
      offertitle:
        type: "string"
      offeracceptlink:
        type: "string"
      systotal:
        type: "number"
      sysfee:
        type: "number"
      total:
        type: "number"
      txid:
        type: "string"
      height:
        type: "number"
      pay_message:
        type: "string"
  Transaction:
    properties:
      amount:
        type: "string"
        description: "The transaction amount in SYS"
      confirmations:
        type: "number"
        description: "The number of confirmations"
      blockhash:
        type: "string"
        description: "The block hash"
      blockindex:
        type: "number"
        description: "The block index"
      blocktime:
        type: "number"
        description: "The time in seconds since epoch (1 Jan 1970 GMT)"
      txid:
        type: "string"
        description: "The transaction id."
      time:
        type: "number"
        description: "The transaction time in seconds since epoch (1 Jan 1970 GMT)"
      timereceived:
        type: "number"
        description: "The time received in seconds since epoch (1 Jan 1970 GMT)"
      details:
        type: "array"
        items:
          $ref: "#/definitions/TransactionDetailEntry"
      hex:
        type: "string"
        description: "Raw data for transaction"
  TransactionDetailEntry:
    properties:
      account:
        type: "string"
        description: "DEPRECATED. The account name involved in the transaction, can\
          \ be \"\" for the default account."
      address:
        type: "string"
        description: "The syscoin address involved in the transaction"
      category:
        type: "string"
        description: "The category, either 'send' or 'receive'"
      amount:
        type: "number"
        description: "The amount in SYS"
      label:
        type: "string"
        description: "A comment for the address/transaction, if any"
      vout:
        type: "number"
        description: "the vout value"
  WalletInfo:
    properties:
      walletversion:
        type: "number"
        description: "the wallet version"
      balance:
        type: "number"
        description: "the total confirmed balance of the wallet in SYS"
      unconfirmed_balance:
        type: "number"
        description: "the total unconfirmed balance of the wallet in SYS"
      immature_balance:
        type: "number"
        description: "the total immature balance of the wallet in SYS"
      txcount:
        type: "number"
        description: "the total number of transactions in the wallet"
      keypoololdest:
        type: "number"
        description: "the timestamp (seconds since GMT epoch) of the oldest pre-generated\
          \ key in the key pool"
      keypoolsize:
        type: "number"
        description: "how many new keys are pre-generated"
      unlocked_until:
        type: "number"
        description: "the timestamp in seconds since epoch (midnight Jan 1 1970 GMT)\
          \ that the wallet is unlocked for transfers, or 0 if the wallet is locked"
      paytxfee:
        type: "number"
        description: "the transaction fee configuration, set in SYS/kB"
  AddressGrouping:
    properties:
      syscoinaddress:
        type: "string"
        description: "The syscoin address"
      amount:
        type: "number"
        description: "The amount in SYS"
      account:
        type: "string"
        description: "(optional) The account (DEPRECATED)"
  Account:
    properties:
      involvesWatchonly:
        type: "boolean"
        description: "Only returned if imported addresses were involved in transaction"
      account:
        type: "string"
        description: "The account name of the receiving account"
      amount:
        type: "number"
        description: "The total amount received by addresses with this account"
      confirmations:
        type: "number"
        description: "The number of confirmations of the most recent transaction included"
      label:
        type: "string"
        description: "A comment for the address/transaction, if any"
  ListSinceBlockResponse:
    properties:
      transactions:
        type: "array"
        items:
          $ref: "#/definitions/SinceBlockTransactionEntry"
      lastblock:
        type: "string"
        description: "The hash of the last block"
  SinceBlockTransactionEntry:
    properties:
      account:
        type: "string"
        description: "DEPRECATED. The account name associated with the transaction.\
          \ Will be \"\" for the default account."
      address:
        type: "string"
        description: "The syscoin address of the transaction. Not present for move\
          \ transactions (category = move)."
      category:
        type: "string"
        description: "The transaction category. 'send' has negative amounts, 'receive'\
          \ has positive amounts."
      amount:
        type: "number"
        description: "The amount in SYS. This is negative for the 'send' category,\
          \ and for the 'move' category for moves outbound. It is positive for the\
          \ 'receive' category, and for the 'move' category for inbound funds."
      vout:
        type: "number"
        description: "the vout value"
      fee:
        type: "number"
        description: "The amount of the fee in SYS. This is negative and only available\
          \ for the 'send' category of transactions."
      confirmations:
        type: "number"
        description: "The number of confirmations for the transaction. Available for\
          \ 'send' and 'receive' category of transactions."
      blockhash:
        type: "string"
        description: "The block hash containing the transaction. Available for 'send'\
          \ and 'receive' category of transactions."
      blockindex:
        type: "number"
        description: "The block index containing the transaction. Available for 'send'\
          \ and 'receive' category of transactions."
      blocktime:
        type: "number"
        description: "The block time in seconds since epoch (1 Jan 1970 GMT)."
      txid:
        type: "string"
        description: "The transaction id. Available for 'send' and 'receive' category\
          \ of transactions."
      time:
        type: "number"
        description: "The transaction time in seconds since epoch (Jan 1 1970 GMT)."
      timereceived:
        type: "number"
        description: "The time received in seconds since epoch (Jan 1 1970 GMT). Available\
          \ for 'send' and 'receive' category of transactions."
      comment:
        type: "string"
        description: "If a comment is associated with the transaction."
      label:
        type: "string"
        description: "A comment for the address/transaction, if any"
      to:
        type: "string"
        description: "If a comment to is associated with the transaction."
  TransactionListEntry:
    properties:
      account:
        type: "string"
        description: "DEPRECATED. The account name associated with the transaction.\
          \ It will be \"\" for the default account."
      address:
        type: "string"
        description: "The syscoin address of the transaction. Not present for move\
          \ transactions (category = move)."
      category:
        type: "string"
        description: "The transaction category. 'move' is a local (off blockchain)\
          \ transaction between accounts, and not associated with an address, transaction\
          \ id or block. 'send' and 'receive' transactions are associated with an\
          \ address, transaction id and block details"
      amount:
        type: "number"
        description: "The amount in SYS. This is negative for the 'send' category,\
          \ and for the 'move' category for moves outbound. It is positive for the\
          \ 'receive' category, and for the 'move' category for inbound funds."
      vout:
        type: "number"
        description: "the vout value"
      fee:
        type: "number"
        description: "The amount of the fee in SYS. This is negative and only available\
          \ for the 'send' category of transactions."
      confirmations:
        type: "number"
        description: "The number of confirmations for the transaction. Available for\
          \ 'send' and'receive' category of transactions. Negative confirmations indicate\
          \ the transation conflicts with the block chain"
      trusted:
        type: "boolean"
        description: "Whether we consider the outputs of this unconfirmed transaction\
          \ safe to spend."
      blockhash:
        type: "string"
        description: "The block hash containing the transaction. Available for 'send'\
          \ and 'receive' category of transactions."
      blockindex:
        type: "string"
        description: "The block index containing the transaction. Available for 'send'\
          \ and 'receive' category of transactions."
      blocktime:
        type: "number"
        description: "The block time in seconds since epoch (1 Jan 1970 GMT)."
      txid:
        type: "string"
        description: "The transaction id. Available for 'send' and 'receive' category\
          \ of transactions."
      time:
        type: "number"
        description: "The transaction time in seconds since epoch (midnight Jan 1\
          \ 1970 GMT)."
      timereceived:
        type: "number"
        description: "The time received in seconds since epoch (midnight Jan 1 1970\
          \ GMT). Available for 'send' and 'receive' category of transactions."
      comment:
        type: "string"
        description: "If a comment is associated with the transaction."
      label:
        type: "string"
        description: "A comment for the address/transaction, if any"
      otheraccount:
        type: "string"
        description: "For the 'move' category of transactions, the account the funds\
          \ came from (for receiving funds, positive amounts), or went to (for sending\
          \ funds, negative amounts)."
  MessageHistoryEntry:
    properties:
      GUID:
        type: "string"
      messagetype:
        type: "string"
      time:
        type: "number"
      from:
        type: "string"
      to:
        type: "string"
      subject:
        type: "string"
      message:
        type: "string"
  Message:
    properties:
      GUID:
        type: "string"
      time:
        type: "number"
      from:
        type: "string"
      to:
        type: "string"
      subject:
        type: "string"
      message:
        type: "string"
      txid:
        type: "string"
      height:
        type: "number"
  MessageListEntry:
    properties:
      GUID:
        type: "string"
      time:
        type: "number"
      from:
        type: "string"
      to:
        type: "string"
      subject:
        type: "string"
      message:
        type: "string"
  OfferAccept:
    properties:
      offer:
        type: "string"
      title:
        type: "string"
      id:
        type: "string"
      btctxid:
        type: "string"
      alias:
        type: "string"
      buyer:
        type: "string"
      height:
        type: "number"
      quantity:
        type: "number"
      currency:
        type: "string"
      linkofferaccept:
        type: "string"
      offer_discount_percentage:
        type: "number"
      escrowlink:
        type: "string"
      systotal:
        type: "number"
      price:
        type: "number"
      total:
        type: "number"
      ismine:
        type: "boolean"
      status:
        type: "string"
      pay_message:
        type: "string"
  OfferWhitelistEntry:
    properties:
      alias:
        type: "string"
      expiresin:
        type: "number"
      offer_discount_percentage:
        type: "number"
  OfferListEntry:
    properties:
      offer:
        type: "string"
      cert:
        type: "string"
      title:
        type: "string"
      category:
        type: "string"
      description:
        type: "string"
      price:
        type: "number"
      currency:
        type: "string"
      commission:
        type: "number"
      quantity:
        type: "number"
      address:
        type: "string"
      exclusive_resell:
        type: "boolean"
      btconly:
        type: "boolean"
      alias_peg:
        type: "string"
      private:
        type: "boolean"
      alias:
        type: "string"
      expires_in:
        type: "number"
      expires_on:
        type: "number"
      expired:
        type: "boolean"
      pending:
        type: "boolean"
  OfferHistoryEntry:
    properties:
      offer:
        type: "string"
      offertype:
        type: "string"
      cert:
        type: "string"
      title:
        type: "string"
      category:
        type: "string"
      description:
        type: "string"
      price:
        type: "number"
      currency:
        type: "string"
      commission:
        type: "number"
      quantity:
        type: "number"
      txid:
        type: "string"
      alias:
        type: "string"
      expires_in:
        type: "number"
      expires_on:
        type: "number"
      expired:
        type: "boolean"
      height:
        type: "boolean"
  Offer:
    properties:
      offer:
        type: "string"
      cert:
        type: "string"
      txid:
        type: "string"
      expires_in:
        type: "number"
      expired_block:
        type: "number"
      expired:
        type: "boolean"
      height:
        type: "number"
      address:
        type: "string"
      category:
        type: "string"
      title:
        type: "string"
      quantity:
        type: "string"
      currency:
        type: "string"
      sysprice:
        type: "number"
      price:
        type: "number"
      ismine:
        type: "boolean"
      commission:
        type: "number"
      offerlink:
        type: "boolean"
      offerlink_guid:
        type: "string"
      exclusive_resell:
        type: "boolean"
      private:
        type: "boolean"
      btconly:
        type: "boolean"
      alias_peg:
        type: "string"
      description:
        type: "string"
      alias":
        type: "string"
      accepts:
        type: "array"
        items:
          $ref: "#/definitions/OfferAccept"
  AddMultisigAddressRequest:
    required:
    - "keysobject"
    - "nrequired"
    properties:
      nrequired:
        type: "number"
        description: "The number of required signatures out of the n keys or addresses."
      keysobject:
        type: "string"
        description: "A json array of syscoin addresses or hex-encoded public keys.\
          \ [ \"address\"  (string) syscoin address or hex-encoded public key ...\
          \ ]"
      account:
        type: "string"
        description: "DEPRECATED. An account to assign the addresses to."
  AliasNewRequest:
    required:
    - "aliaspeg"
    - "aliasname"
    - "password"
    - "publicvalue"
    properties:
      aliaspeg:
        type: "string"
        description: "Alias peg name"    
      aliasname:
        type: "string"
        description: "Alias name"
      password:
        type: "string"
        description: "Alias password. Set to \"\" for no password."        
      publicvalue:
        type: "string"
        description: "Alias public profile data, 1024 chars max."
      privatevalue:
        type: "string"
        description: "Alias private profile data, 512 chars max. Will be private and readable by owner only.\
        \ Should be encrypted to encryption_publickey."
      safesearch:
        type: "boolean"
        description: "set to false if this alias should only show in the search when safe search is not selected.\
        \ Defaults to true (alias shows with or without safe search selected in search lists)."
      accepttransfers:
        type: "boolean"
        description: "Set to false if this alias should not allow a certificate to be transferred to it. Defaults to true."  
      expire_timestamp:
        type: "number"
        description: "Time in seconds. Future time when to expire alias. It is exponentially more expensive per year,\
        \ calculation is FEERATE*(2.88^years). FEERATE is the dynamic satoshi per byte fee set in the rate peg alias \
        \ used for this alias. Defaults to 1 year."
      nrequired:
        type: "string"
        description: "For multisig aliases only. The number of required signatures out of n aliases for a multisig alias update."
      aliases:
        type: "string"
        description: "For multisig aliases only. A json array of aliases which are used to sign on an update to this alias.\
          \     [\
          \       {\
          \         \"alias\":\"name\",					        (string, required) The alias name\
          \         \"encryptionprivatekey\": \"hex\"		(string, required) Encryption private key (encrypted to alias public key)\
          \       }\
          \      ,...\
          \     ]"
      publickey:
        type: "string"
        description: "Public key for this alias. Hex encoded binary public key data."
      password_salt:
        type: "string"
        description: "Salt used for key derivation if password is set. Hex encoded binary password salt data."        
      encryption_privatekey:
        type: "string"
        description: "Encrypted private key used for encryption/decryption of private data related to this alias. Should be\
        \ encrypted to publickey. Hex encoded private key data." 
      encryption_publickey:
        type: "string"
        description: "Public key used for encryption/decryption of private data related to this alias. Hex encoded public key data."
      walletless:
        type: "boolean"
        description: "Sign and send transaction to network if set to false. If true, then don't sign resulting transaction, just\
        \ return it for signing by external service. Default is false."
  AliasUpdateRequest:
    required:
    - "aliaspeg"
    - "aliasname"
    properties:
      aliaspeg:
        type: "string"
        description: "Alias peg name"    
      aliasname:
        type: "string"
        description: "Alias name"
      publicvalue:
        type: "string"
        description: "Alias public profile data, 1024 chars max."
      privatevalue:
        type: "string"
        description: "Alias private profile data, 512 chars max. Will be private and readable by owner only.\
        \ Should be encrypted to encryption_publickey."
      safesearch:
        type: "boolean"
        description: "set to false if this alias should only show in the search when safe search is not selected.\
        \ Defaults to true (alias shows with or without safe search selected in search lists)."
      alias_pubkey:
        type: "string"
        description: "Alias public key, if transferring alias or changing password. Hex encoded binary public key data"        
      password:
        type: "string"
        description: "Alias password. Set to \"\" for no password."                
      accepttransfers:
        type: "boolean"
        description: "Set to false if this alias should not allow a certificate to be transferred to it. Defaults to true."  
      expire_timestamp:
        type: "number"
        description: "Time in seconds. Future time when to expire alias. It is exponentially more expensive per year,\
        \ calculation is FEERATE*(2.88^years). FEERATE is the dynamic satoshi per byte fee set in the rate peg alias \
        \ used for this alias. Defaults to 1 year."
      nrequired:
        type: "string"
        description: "For multisig aliases only. The number of required signatures out of n aliases for a multisig alias update."
      aliases:
        type: "string"
        description: "For multisig aliases only. A json array of aliases which are used to sign on an update to this alias.\
          \     [\
          \       {\
          \         \"alias\":\"name\",					        (string, required) The alias name\
          \         \"encryptionprivatekey\": \"hex\"		(string, required) Encryption private key (encrypted to alias public key)\
          \       }\
          \      ,...\
          \     ]"
      password_salt:
        type: "string"
        description: "Salt used for key derivation if password is set. Hex encoded binary password salt data."        
      encryption_privatekey:
        type: "string"
        description: "Encrypted private key used for encryption/decryption of private data related to this alias. Should be\
        \ encrypted to publickey. Hex encoded private key data." 
      encryption_publickey:
        type: "string"
        description: "Public key used for encryption/decryption of private data related to this alias. Hex encoded public key data."
      walletless:
        type: "boolean"
        description: "Sign and send transaction to network if set to false. If true, then don't sign resulting transaction, just\
        \ return it for signing by external service. Default is false."
  CertNewRequest:
    required:
    - "alias"
    - "data"
    - "title"
    properties:
      alias:
        type: "string"
        description: "An alias you own."
      title:
        type: "string"
        description: "title, 255 bytes max."
      data:
        type: "string"
        description: "data, 1KB max."
      private:
        type: "boolean"
        description: "set to 1 if you only want to make the cert data private, only\
          \ the owner of the cert can view it. Off by default."
  CertTransferRequest:
    required:
    - "alias"
    - "certkey"
    properties:
      certkey:
        type: "string"
      alias:
        type: "string"
  CertUpdateRequest:
    required:
    - "data"
    - "guid"
    - "private"
    - "title"
    properties:
      guid:
        type: "string"
        description: "certificate guidkey."
      title:
        type: "string"
        description: "certificate title, 255 bytes max."
      data:
        type: "string"
        description: "certificate data, 1KB max."
      private:
        type: "boolean"
        description: "set to 1 if you only want to make the cert data private, only\
          \ the owner of the cert can view it."
  EscrowClaimRefundRequest:
    required:
    - "guid"
    properties:
      guid:
        type: "string"
  EscrowClaimReleaseRequest:
    required:
    - "guid"
    properties:
      guid:
        type: "string"
  EscrowCompleteRequest:
    required:
    - "guid"
    properties:
      guid:
        type: "string"
  EscrowNewRequest:
    required:
    - "alias"
    - "arbiter"
    - "offer"
    - "quantity"
    properties:
      alias:
        type: "string"
      offer:
        type: "string"
      quantity:
        type: "number"
      message:
        type: "string"
      arbiter:
        type: "string"
  GetNewAddressRequest:
    properties:
      account:
        type: "string"
        description: "DEPRECATED. The account name for the address to be linked to.\
          \ If not provided, the default account \"\" is used. It can also be set\
          \ to the empty string \"\" to represent the default account. The account\
          \ does not need to exist, it will be created if there is no account by the\
          \ given name."
  ImportAddressRequest:
    required:
    - "script"
    properties:
      script:
        type: "string"
        description: "The hex-encoded script (or address)"
      label:
        type: "string"
        description: "An optional label"
      rescan:
        type: "boolean"
        description: "Rescan the wallet for transactions"
      p2sh:
        type: "boolean"
        description: "Add the P2SH version of the script as well"
  ImportPrivKeyRequest:
    required:
    - "syscoinprivkey"
    properties:
      syscoinprivkey:
        type: "string"
        description: "The private key (see dumpprivkey)"
      label:
        type: "string"
        description: "An optional label"
      rescan:
        type: "boolean"
        description: "Rescan the wallet for transactions"
  ImportPubKeyRequest:
    required:
    - "pubkey"
    properties:
      pubkey:
        type: "string"
        description: "The hex-encoded public key"
      label:
        type: "string"
        description: "An optional label"
      rescan:
        type: "boolean"
        description: "Rescan the wallet for transactions"
  ImportWalletRequest:
    required:
    - "filename"
    properties:
      filename:
        type: "string"
        description: "The wallet file"
  MessageNewRequest:
    required:
    - "fromalias"
    - "message"
    - "subject"
    - "toalias"
    properties:
      subject:
        type: "string"
        description: "Subject of message."
      message:
        type: "string"
        description: "Message to send to alias."
      fromalias:
        type: "string"
        description: "Alias to send message from."
      toalias:
        type: "string"
        description: "Alias to send message to."
  MoveRequest:
    required:
    - "amount"
    - "fromaccount"
    - "toaccount"
    properties:
      fromaccount:
        type: "string"
        description: "The name of the account to move funds from. May be the default\
          \ account using \"\"."
      toaccount:
        type: "string"
        description: "The name of the account to move funds to. May be the default\
          \ account using \"\"."
      amount:
        type: "number"
        description: "Quantity of SYS to move between accounts."
      minconf:
        type: "string"
        description: "Only use funds with at least this many confirmations."
      comment:
        type: "string"
        description: "An optional comment, stored in the wallet only."
  OfferAcceptRequest:
    required:
    - "alias"
    - "guid"
    - "quantity"
    properties:
      alias:
        type: "string"
        description: "An alias of the buyer."
      guid:
        type: "string"
        description: "guidkey from offer."
      quantity:
        type: "number"
        description: "quantity to buy. Defaults to 1."
      message:
        type: "string"
        description: "payment message to seller, 1KB max."
      btcTxId:
        type: "string"
        description: "If you have paid in Bitcoin and the offer is in Bitcoin, enter\
          \ the transaction ID here. Default is empty."
      linkedacceptguidtxhash:
        type: "string"
        description: "transaction id of the linking offer accept. For internal use\
          \ only, leave blank"
      escrowTxHash:
        type: "string"
        description: "If this offer accept is done by an escrow release. For internal\
          \ use only, leave blank"
  OfferAddWhitelistRequest:
    required:
    - "aliasguid"
    - "discountPercentage"
    - "offerguid"
    properties:
      offerguid:
        type: "string"
        description: "offer guid that you are adding to"
      aliasguid:
        type: "string"
        description: "alias guid representing an alias that you want to add to the\
          \ affiliate list"
      discountPercentage:
        type: "number"
        description: "percentage of discount given to reseller for this offer. Negative\
          \ discount adds on top of offer price, acts as an extra commission. -99\
          \ to 99."
  OfferClearWhitelistRequest:
    required:
    - "offerguid"
    properties:
      offerguid:
        type: "string"
  OfferLinkRequest:
    required:
    - "alias"
    - "comission"
    - "guid"
    properties:
      alias:
        type: "string"
        description: "An alias you own."
      guid:
        type: "string"
        description: "offer guid that you are linking to"
      comission:
        type: "string"
        description: "percentage of profit desired over original offer price, > 0,\
          \ ie 5 for 5%"
      description:
        type: "string"
        description: "description, 1 KB max. Defaults to original description. Leave\
          \ as '' to use default."
  OfferNewRequest:
    required:
    - "alias"
    - "aliaspeg"
    - "category"
    - "currency"
    - "description"
    - "price"
    - "quantity"
    - "title"
    properties:
      aliaspeg:
        type: "string"
        description: "Alias peg you wish to use, leave blank to use SYS_RATES."
      alias:
        type: "string"
        description: "An alias you own."
      category:
        type: "string"
        description: "category, 255 chars max."
      title:
        type: "string"
        description: "title, 255 chars max."
      quantity:
        type: "number"
        description: "quantity, > 0 or -1 for infinite"
      price:
        type: "number"
        description: "price in <currency>, > 0"
      description:
        type: "string"
        description: "description, 1 KB max."
      currency:
        type: "string"
        description: "The currency code that you want your offer to be in ie USD."
      certguid:
        type: "string"
        description: "Set this to the guid of a certificate you wish to sell"
      excelusiveResell:
        type: "boolean"
        description: "set to 1 if you only want those who control the affiliate's\
          \ who are able to resell this offer via offerlink. Defaults to 1."
      acceptBTCOnly:
        type: "boolean"
        description: "set to 1 if you only want accept Bitcoins for payment and your\
          \ currency is set to BTC, note you cannot resell or sell a cert in this\
          \ mode. Defaults to 0."
  OfferRemoveWhitelistRequest:
    required:
    - "aliasguid"
    - "offerguid"
    properties:
      offerguid:
        type: "string"
      aliasguid:
        type: "string"
  OfferUpdateRequest:
    required:
    - "alias"
    - "aliaspeg"
    - "category"
    - "description"
    - "guid"
    - "price"
    - "private"
    - "quantity"
    - "title"
    properties:
      aliaspeg:
        type: "string"
        description: "Alias peg you wish to use, leave blank to use SYS_RATES."
      alias:
        type: "string"
        description: "An alias you own."
      guid:
        type: "string"
        description: "Guid of offer to update"
      category:
        type: "string"
        description: "category, 255 chars max."
      title:
        type: "string"
        description: "title, 255 chars max."
      quantity:
        type: "number"
        description: "quantity, > 0 or -1 for infinite"
      price:
        type: "number"
        description: "price in <currency>, > 0"
      description:
        type: "string"
        description: "description, 1 KB max."
      private:
        type: "boolean"
        description: "Can this offer be seen in public search"
      certguid:
        type: "string"
        description: "Set this to the guid of a certificate you wish to sell"
      excelusiveResell:
        type: "boolean"
        description: "set to 1 if you only want those who control the affiliate's\
          \ who are able to resell this offer via offerlink. Defaults to 1."
  SendFromRequest:
    required:
    - "amount"
    - "fromaccount"
    - "tosyscoinaddress"
    properties:
      fromaccount:
        type: "string"
        description: "The name of the account to send funds from. May be the default\
          \ account using \"\"."
      tosyscoinaddress:
        type: "string"
        description: "The syscoin address to send funds to."
      amount:
        type: "number"
        description: "he amount in SYS (transaction fee is added on top)."
      minconf:
        type: "number"
        description: "Only use funds with at least this many confirmations."
      comment:
        type: "string"
        description: "A comment used to store what the transaction is for. This is\
          \ not part of the transaction, just kept in your wallet."
      commentto:
        type: "string"
        description: "An optional comment to store the name of the person or organization\
          \ to which you're sending the transaction. This is not part of the transaction,\
          \ it is just kept in your wallet."
  SendManyRequest:
    required:
    - "amounts"
    - "fromaccount"
    properties:
      fromaccount:
        type: "string"
        description: "DEPRECATED. The account to send the funds from. Should be \"\
          \" for the default account"
      amounts:
        type: "string"
        description: "A json object with addresses and amounts { \"address\":amount\
          \   (numeric) The syscoin address is the key, the numeric amount in SYS\
          \ is the value,...}"
      minconf:
        type: "number"
        description: "Only use the balance confirmed at least this many times."
      comment:
        type: "string"
        description: "A comment used to store what the transaction is for. This is\
          \ not part of the transaction, just kept in your wallet."
      subtractfeefromamount:
        type: "string"
        description: "A json array with addresses. The fee will be equally deducted\
          \ from the amount of each selected address. Those recipients will receive\
          \ less syscoins than you enter in their corresponding amount field. If no\
          \ addresses are specified here, the sender pays the fee. [ \"address\" Subtract\
          \ fee from this address,... ]"
  SendToAddressRequest:
    required:
    - "amount"
    - "syscoinaddress"
    properties:
      syscoinaddress:
        type: "string"
        description: "The syscoin address to send to."
      amount:
        type: "number"
        description: "The amount in SYS to send. eg 0.1"
      comment:
        type: "string"
        description: "A comment used to store what the transaction is for. This is\
          \ not part of the transaction, just kept in your wallet."
      commentto:
        type: "string"
        description: "An optional comment to store the name of the person or organization\
          \ to which you're sending the transaction. This is not part of the transaction,\
          \ it is just kept in your wallet."
      subtractfeefromamount:
        type: "string"
        description: "The fee will be deducted from the amount being sent. The recipient\
          \ will receive less syscoins than you enter in the amount field."
  SignMessageRequest:
    required:
    - "message"
    - "syscoinaddress"
    properties:
      syscoinaddress:
        type: "string"
        description: "The syscoin address to use for the private key."
      message:
        type: "number"
        description: "The message to create a signature of."
  WalletPassphraseRequest:
    required:
    - "passphrase"
    - "timeout"
    properties:
      passphrase:
        type: "string"
        description: "The wallet passphrase"
      timeout:
        type: "number"
        description: "The time to keep the decryption key in seconds."
  WalletPassphraseChangeRequest:
    required:
    - "newpassphrase"
    - "oldpassphrase"
    properties:
      oldpassphrase:
        type: "string"
        description: "The current passphrase"
      newpassphrase:
        type: "string"
        description: "The new passphrase"
security:
- token: []
