swagger: "2.0"
info:
  version: "1.0.0"
  title: Syscoin API
host: localhost:8000
securityDefinitions:
  token:
    type: apiKey
    in: header
    name: token
basePath: /
schemes:
  # remove http to make production-grade
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
tags:
- name: General
  description: All general wallet operations.
- name: Aliases
  description: Operations related to aliases.
- name: Messaging
  description: Operations related to messaging.
- name: Offers
  description: Operations related to offers and the decentralized marketplace functionality.
- name: Escrow
  description: Operations related to escrow.
- name: Certificates
  description: Operations related to digital certificates.
paths:
  /login:
    x-swagger-router-controller: rpc
    get:
      operationId: login
      description: Returns a session token for use with subsquent protected calls.
      tags:
      - Blockmarket
      parameters:
      - name: auth
        description: MD5 hash of the user's authentication information- username:password.
        in: query
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /getinfo:
    x-swagger-router-controller: rpc
    get:
      operationId: getinfo
      description: Returns an object containing various state info.
      security: []
      tags:
      - General
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Info"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getmininginfo:
      x-swagger-router-controller: rpc
      get:
        operationId: getmininginfo
        description: Returns a json object containing mining-related information.
        security:
          - token: []
        tags:
        - General
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/MiningInfo"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"

  /getpeerinfo:
      x-swagger-router-controller: rpc
      get:
        operationId: getpeerinfo
        description: Returns data about each connected network node as a json array of objects.
        tags:
        - General
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/PeerInfoResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"

  /validateaddress:
      x-swagger-router-controller: rpc
      post:
        operationId: validateaddress
        description: Return information about the given syscoin address.
        tags:
        - General
        parameters:
        - name: syscoinaddress
          in: query
          required: true
          type: string
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/ValidateAddressResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"

  /verifymessage:
    x-swagger-router-controller: rpc
    post:
      operationId: verifymessage
      description: Verify a signed message
      tags:
      - General
      parameters:
      - name: syscoinaddress
        description: The syscoin address to use for the signature.
        in: query
        required: true
        type: string
      - name: signature
        description: The signature provided by the signer in base 64 encoding (see signmessage).
        in: query
        required: true
        type: string
      - name: message
        description: The message that was signed.
        in: query
        required: true
        type: string
      responses:
        "200":
          description: If the signature is verified or not.
          schema:
            type: boolean
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /addmultisigaddress:
    x-swagger-router-controller: rpc
    post:
      operationId: addmultisigaddress
      description: Add a nrequired-to-sign multisignature address to the wallet. Each key is a Syscoin address or hex-encoded public key. If 'account' is specified (DEPRECATED), assign address to that account.
      tags:
      - General
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/AddMultisigAddressRequest"
      responses:
        "200":
          description: A syscoin address associated with the keys.
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /aliasaffiliates:
    x-swagger-router-controller: rpc
    get:
      operationId: aliasaffiliates
      description: list affiliations with merchant offers.
      tags:
      - Aliases
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: object #TODO: define type
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /aliasfilter:
    x-swagger-router-controller: rpc
    get:
      operationId: aliasfilter
      description: "Filter aliases
        [regexp] : apply [regexp] on aliases, empty means all aliases
        [from] : show results from this GUID [from], empty means first.
        [aliasfilter] : shows all aliases that are safe to display (not on the ban list)
        aliasfilter \"\" 5 = list aliases updated in last 5 blocks
        aliasfilter \"^alias\" = list all aliases starting with \"alias\"
        aliasfilter 36000 0 0 stat = display stats (number of aliases) on active aliases"
      tags:
      - Aliases
      parameters:
      - name: regexp
        in: query
        description: apply [regexp] on aliases, empty means all aliases
        required: true
        type: string
      - name: from
        in: query
        description: show results from this GUID [from], empty means first
        required: false
        type: string
      - name: safesearch
        in: query
        description: shows all aliases that are safe to display (not on the ban list)
        required: false
        type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/AliasListEntry"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /aliashistory:
    x-swagger-router-controller: rpc
    get:
      operationId: aliashistory
      description: List all stored values of an alias.
      tags:
      - Aliases
      parameters:
      - name: aliasname
        in: query
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/AliasHistoryEntry"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /aliasinfo:
    x-swagger-router-controller: rpc
    get:
      operationId: aliasinfo
      description: Show values of an alias.
      tags:
      - Aliases
      parameters:
      - name: aliasname
        in: query
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Alias"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /aliaslist:
    x-swagger-router-controller: rpc
    get:
      operationId: aliaslist
      description: List my own aliases.
      tags:
      - Aliases
      parameters:
      - name: aliasname
        description: Alias name to use as filter.
        in: query
        required: false
        type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/AliasListEntry"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /aliasnew:
    x-swagger-router-controller: rpc
    post:
      operationId: aliasnew
      description: Creates a new Syscoin Alias. Requires wallet passphrase to be set with walletpassphrase call.
      tags:
      - Aliases
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/AliasNewRequest"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /aliasupdate:
    x-swagger-router-controller: rpc
    post:
      operationId: aliasupdate
      description: Update and possibly transfer an alias. Requires wallet passphrase to be set with walletpassphrase call.
      tags:
      - Aliases
      parameters:
      - name: request
        in: body
        required: true
        schema:
            $ref: "#/definitions/AliasUpdateRequest"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /certfilter:
    x-swagger-router-controller: rpc
    get:
      operationId: certfilter
      description: "scan and filter certs
        certfilter \"\" 5 = list certs updated in last 5 blocks
        certfilter \"^cert\" = list all certs starting with \"cert\"
        certfilter 36000 0 0 stat = display stats (number of certs) on active certs"
      tags:
      - Certificates
      parameters:
      - name: regexp
        in: query
        description: apply [regexp] on certes, empty means all certes
        required: false
        type: string
      - name: from
        in: query
        description: show results from number [from]
        required: false
        type: string
      - name: certfilter #should be boolean
        in: query
        description: shows all certs that are safe to display (not on the ban list)
        required: false
        type: string
      - name: safesearch #should be boolean
        in: query
        description: shows all certs that are safe to display (not on the ban list)
        required: false
        type: string
      - name: category
        in: query
        description: category you want to search in, empty for all
        required: false
        type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/CertListEntry"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /certhistory:
    x-swagger-router-controller: rpc
    get:
      operationId: certhistory
      description: List all stored values of an cert.
      tags:
      - Certificates
      parameters:
      - name: certname
        in: query
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/CertHistoryEntry"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /certinfo:
    x-swagger-router-controller: rpc
    get:
      operationId: certinfo
      description: Show stored values of a single certificate.
      tags:
      - Certificates
      parameters:
      - name: guid
        in: query
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Cert"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /certlist:
    x-swagger-router-controller: rpc
    get:
      operationId: certlist
      description: List certificates that an array of aliases own. Set of aliases to look up based on alias, and private key to decrypt any data found in certificates.
      tags:
      - Certificates
      parameters:
      - name: aliases
        in: query
        required: false
        type: array
        items:
          type: string
      - name: cert
        in: query
        required: false
        type: string
      - name: privatekey
        in: query
        required: false
        type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/CertListEntry"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /certnew:
    x-swagger-router-controller: rpc
    post:
      operationId: certnew
      description: Create a new Syscoin Certificate. Requires wallet passphrase to be set with walletpassphrase call.
      tags:
      - Certificates
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/CertNewRequest"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /certtransfer:
    x-swagger-router-controller: rpc
    post:
      operationId: certtransfer
      description: Transfer certificate from one user to another. Requires wallet passphrase to be set with walletpassphrase call.
      tags:
      - Certificates
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/CertTransferRequest"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string #TODO: assuming this returns array of txid related strings, check
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /certupdate:
    x-swagger-router-controller: rpc
    post:
      operationId: certupdate
      description: Perform an update on an certificate you control. Requires wallet passphrase to be set with walletpassphrase call.
      tags:
      - Certificates
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/CertUpdateRequest"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /dumpprivkey:
    x-swagger-router-controller: rpc
    get:
      operationId: dumpprivkey
      description: Reveals the private key corresponding to 'syscoinaddress'. Then the importprivkey can be used with this output.
      tags:
      - General
      parameters:
      - name: address
        description: The syscoin address for the private key
        in: query
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /dumpwallet:
    x-swagger-router-controller: rpc
    get:
      operationId: dumpwallet
      description: Dumps all wallet keys in a human-readable format.
      tags:
      - General
      parameters:
      - name: filename
        description: The filename
        in: query
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /escrowclaimrefund:
    x-swagger-router-controller: rpc
    post:
      operationId: escrowclaimrefund
      description: Claim escrow funds released from seller or arbiter using escrowrefund. Requires wallet passphrase to be set with walletpassphrase call.
      tags:
      - Escrow
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/EscrowClaimRefundRequest"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string #TODO: double check
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /escrowclaimrelease:
    x-swagger-router-controller: rpc
    post:
      operationId: escrowclaimrelease
      description: Claim escrow funds released from buyer or arbiter using escrowrelease. Requires wallet passphrase to be set with walletpassphrase call.
      tags:
      - Escrow
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/EscrowClaimReleaseRequest"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string #TODO: double check
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /escrowcomplete:
    x-swagger-router-controller: rpc
    post:
      operationId: escrowcomplete
      description: Accepts an offer that's in escrow, to complete the escrow process. Requires wallet passphrase to be set with walletpassphrase call.
      tags:
      - Escrow
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/EscrowCompleteRequest"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string #TODO: double check
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /escrowfilter:
    x-swagger-router-controller: rpc
    get:
      operationId: escrowfilter
      description: scan and filter escrows
      tags:
      - Escrow
      parameters:
      - name: search
        in: query
        description: Find arbiter or seller via alias name or an escrow GUID, empty means all escrows
        required: true
        type: string
      - name: maxage
        in: query
        description: look in last [maxage] blocks
        required: false
        type: number
      - name: from
        in: query
        description: show results from number [from]
        required: false
        type: number
      - name: nb
        in: query
        description: show [nb] results, 0 means all
        required: false
        type: number
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/EscrowListEntry"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /escrowhistory:
    x-swagger-router-controller: rpc
    get:
      operationId: escrowhistory
      description: List all stored values of an escrow.
      tags:
      - Escrow
      parameters:
      - name: escrow
        in: query
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/EscrowHistoryEntry"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /escrowinfo:
    x-swagger-router-controller: rpc
    get:
      operationId: escrowinfo
      description: Show stored values of a single escrow
      tags:
      - Escrow
      parameters:
      - name: escrow
        in: query
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Escrow"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /escrowlist:
    x-swagger-router-controller: rpc
    get:
      operationId: escrowlist
      description: list my own escrows
      tags:
      - Escrow
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/EscrowListEntry"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /escrownew:
    x-swagger-router-controller: rpc
    post:
      operationId: escrownew
      description: Create new arbitrated Syscoin escrow.
      tags:
      - Escrow
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/EscrowNewRequest"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /escrowscan:
    x-swagger-router-controller: rpc
    get:
      operationId: escrowscan
      description: scan all escrows, starting at start-escrow and returning a maximum number of entries (default 500)
      tags:
      - Escrow
      parameters:
      - name: start-escrow
        in: query
        required: false
        type: string
      - name: max-returned
        in: query
        required: false
        type: number
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string #TODO: could not execute RPC command, error'd
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getaccount: #deprecated- what is the replacement?
    x-swagger-router-controller: rpc
    get:
      operationId: getaccount
      description: DEPRECATED. Returns the account associated with the given address.
      tags:
      - General
      parameters:
      - name: syscoinaddress
        description: The syscoin address for account lookup.
        in: query
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getaccountaddress: #deprecated- what is the replacement?
    x-swagger-router-controller: rpc
    get:
      operationId: getaccountaddress
      description: DEPRECATED. Returns the current Syscoin address for receiving payments to this account.
      tags:
      - General
      parameters:
      - name: account
        description: The account name for the address. It can also be set to the empty string "" to represent the default account. The account does not need to exist, it will be created and a new address created  if there is no account by the given name.
        in: query
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getaddressesbyaccount: #deprecated- what is the replacement?
    x-swagger-router-controller: rpc
    get:
      operationId: getaddressesbyaccount
      description: DEPRECATED. Returns the list of addresses for the given account.
      tags:
      - General
      parameters:
      - name: account
        in: query
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getbalance:
    x-swagger-router-controller: rpc
    get:
      operationId: getbalance
      description: If account is not specified, returns the server's total available balance. If account is specified (DEPRECATED), returns the balance in the account. Note that the account "" is not the same as leaving the parameter out. The server total may be different to the balance in the default "" account.
      tags:
      - General
      parameters:
      - name: account
        in: query
        description: DEPRECATED. The selected account, or "*" for entire wallet. It may be the default account using "".
        required: false
        type: string
      - name: minconf
        in: query
        description: Only include transactions confirmed at least this many times.
        required: false
        type: number
      - name: includeWatchonly
        in: query
        description: Also include balance in watchonly addresses (see 'importaddress')
        required: false
        type: boolean
      responses:
        "200":
          description: Success
          schema:
            type: number
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getnewaddress:
    x-swagger-router-controller: rpc
    post:
      operationId: getnewaddress
      description: Returns a new Syscoin address for receiving payments. If 'account' is specified (DEPRECATED), it is added to the address book so payments received with the address will be credited to 'account'.
      tags:
      - General
      parameters:
      - name: request
        in: body
        required: false
        schema:
          $ref: "#/definitions/GetNewAddressRequest"
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getreceivedbyaccount: #deprecated- what is the replacement?
    x-swagger-router-controller: rpc
    get:
      operationId: getreceivedbyaccount
      description: DEPRECATED. Returns the total amount received by addresses with <account> in transactions with at least [minconf] confirmations.
      tags:
      - General
      parameters:
      - name: account
        in: query
        description: The selected account, may be the default account using "".
        required: true
        type: string
      - name: minconf
        in: query
        description: Only include transactions confirmed at least this many times.
        required: false
        type: number
      responses:
        "200":
          description: Success
          schema:
            type: number
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getreceivedbyaddress:
    x-swagger-router-controller: rpc
    get:
      operationId: getreceivedbyaddress
      description: Returns the total amount received by the given syscoinaddress in transactions with at least minconf confirmations.
      tags:
      - General
      parameters:
      - name: syscoinaddress
        in: query
        description: The syscoin address for transactions.
        required: true
        type: string
      - name: minconf
        in: query
        description: Only include transactions confirmed at least this many times.
        required: false
        type: number
      responses:
        "200":
          description: Success
          schema:
            type: number
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /gettransaction:
    x-swagger-router-controller: rpc
    get:
      operationId: gettransaction
      description: Get detailed information about in-wallet transaction <txid>
      tags:
      - General
      parameters:
      - name: txid
        in: query
        description: The transaction id
        required: true
        type: string
      - name: includeWatchonly
        in: query
        description: Whether to include watchonly addresses in balance calculation and details[]
        required: false
        type: boolean
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Transaction"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getunconfirmedbalance:
    x-swagger-router-controller: rpc
    get:
      operationId: getunconfirmedbalance
      description: Returns the server's total unconfirmed balance
      tags:
      - General
      responses:
        "200":
          description: Success
          schema:
            type: number
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getv2address:
    x-swagger-router-controller: rpc
    get:
      operationId: getv2address
      description: Returns a new Syscoin (starts with 1) address for receiving payments. If 'account' is specified (DEPRECATED), it is added to the address book so payments received with the address will be credited to 'account'.
      tags:
      - General
      parameters:
      - name: account
        in: query
        description: DEPRECATED. The account name for the address to be linked to. If not provided, the default account "" is used. It can also be set to the empty string "" to represent the default account. The account does not need to exist, it will be created if there is no account by the given name.
        required: false
        type: string
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getwalletinfo:
    x-swagger-router-controller: rpc
    get:
      operationId: getwalletinfo
      description: Returns an object containing various wallet state info.
      tags:
      - General
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/WalletInfo"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /importaddress:
    x-swagger-router-controller: rpc
    get:
      operationId: importaddress
      description: Adds a script (in hex) or address that can be watched as if it were in your wallet but cannot be used to spend.
      tags:
      - General
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/ImportAddressRequest"
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /importprivkey:
    x-swagger-router-controller: rpc
    get:
      operationId: importprivkey
      description: Adds a private key (as returned by dumpprivkey) to your wallet.
      tags:
      - General
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/ImportPrivKeyRequest"
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /importpubkey:
    x-swagger-router-controller: rpc
    get:
      operationId: importpubkey
      description: Adds a public key (in hex) that can be watched as if it were in your wallet but cannot be used to spend.
      tags:
      - General
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/ImportPubKeyRequest"
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /importwallet:
    x-swagger-router-controller: rpc
    get:
      operationId: importwallet
      description: Imports keys from a wallet dump file (see dumpwallet).
      tags:
      - General
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/ImportWalletRequest"
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /listaccounts:
    x-swagger-router-controller: rpc
    get:
      operationId: listaccounts
      description: DEPRECATED. Returns Object that has account names as keys, account balances as values.
      tags:
      - General
      parameters:
      - name: minconf
        in: query
        description: Only include transactions with at least this many confirmations
        required: false
        type: number
      - name: includeWatchonly
        in: query
        description: Include balances in watchonly addresses (see 'importaddress')
        required: false
        type: boolean
      responses:
        "200":
          description: Success
          schema:
            type: object #object with accounts as keys and totals as values
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /listaddressgroupings:
    x-swagger-router-controller: rpc
    get:
      operationId: listaddressgroupings
      description: Lists groups of addresses which have had their common ownership made public by common use as inputs or as the resulting change in past transactions
      tags:
      - General
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: array
              items:
                $ref: "#/definitions/AddressGrouping"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /listreceivedbyaccount: #deprecated- what is the replacement?
    x-swagger-router-controller: rpc
    get:
      operationId: listreceivedbyaccount
      description: DEPRECATED. List balances by account.
      tags:
      - General
      parameters:
      - name: minconf
        in: query
        description: Only include transactions confirmed at least this many times.
        required: false
        type: number
      - name: includeempty
        in: query
        description: Whether to include accounts that haven't received any payments.
        required: false
        type: boolean
      - name: includeWatchonly
        in: query
        description: Whether to include watchonly addresses (see 'importaddress').
        required: false
        type: boolean
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Account"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /listreceivedbyaddress:
    x-swagger-router-controller: rpc
    get:
      operationId: listreceivedbyaddress
      description: List balances by receiving address.
      tags:
      - General
      parameters:
      - name: minconf
        in: query
        description: Only include transactions confirmed at least this many times.
        required: false
        type: number
      - name: includeempty
        in: query
        description: Whether to include accounts that haven't received any payments.
        required: false
        type: boolean
      - name: includeWatchonly
        in: query
        description: Whether to include watchonly addresses (see 'importaddress').
        required: false
        type: boolean
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Account"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /listsinceblock:
    x-swagger-router-controller: rpc
    get:
      operationId: listsinceblock
      description: Get all transactions in blocks since block [blockhash], or all transactions if omitted
      tags:
      - General
      parameters:
      - name: blockhash
        in: query
        description: The block hash to list transactions since
        required: false
        type: string
      - name: includeWatchonly
        in: query
        description: Whether to include watchonly addresses (see 'importaddress').
        required: false
        type: boolean
      - name: target-confirmations
        in: query
        required: false
        type: number
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/ListSinceBlockResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /listtransactions:
    x-swagger-router-controller: rpc
    get:
      operationId: listtransactions
      description: Returns up to 'count' most recent transactions skipping the first 'from' transactions for account 'account'.
      tags:
      - General
      parameters:
      - name: account
        in: query
        description: DEPRECATED. The account name. Should be "*".
        required: false
        type: string
      - name: count
        in: query
        description: The number of transactions to return
        required: false
        type: number
      - name: from
        in: query
        description: The number of transactions to skip
        required: false
        type: number
      - name: includeWatchonly
        in: query
        description: Include transactions to watchonly addresses (see 'importaddress')
        type: boolean
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/TransactionListEntry"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /messagehistory:
    x-swagger-router-controller: rpc
    get:
      operationId: messagehistory
      description: List all stored values of a message.
      tags:
      - Messaging
      parameters:
      - name: message
        in: query
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/MessageHistoryEntry"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /messageinfo:
    x-swagger-router-controller: rpc
    get:
      operationId: messageinfo
      description: Show stored values of a single message.
      tags:
      - Messaging
      parameters:
      - name: guid
        in: query
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Message"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /messagelist:
    x-swagger-router-controller: rpc
    get:
      operationId: messagelist
      description: List my own messages
      tags:
      - Messaging
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/MessageListEntry"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /messagenew:
    x-swagger-router-controller: rpc
    post:
      operationId: messagenew
      description: Create a new Syscoin encrypted message.
      tags:
      - Messaging
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/MessageNewRequest"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /messagesentlist:
    x-swagger-router-controller: rpc
    get:
      operationId: messagesentlist
      description: list my sent messages
      tags:
      - Messaging
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/MessageListEntry"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /move:
    x-swagger-router-controller: rpc
    post:
      operationId: move
      description: DEPRECATED. Move a specified amount from one account in your wallet to another.
      tags:
      - General
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/MoveRequest"
      responses:
        "200":
          description: Success
          schema:
            type: boolean
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /offeraccept:
    x-swagger-router-controller: rpc
    post:
      operationId: offeraccept
      description: Accept&Pay for a confirmed offer.
      tags:
      - Offers
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/OfferAcceptRequest"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /offeracceptlist:
    x-swagger-router-controller: rpc
    get:
      operationId: offeracceptlist
      description: list my offer accepts
      tags:
      - Offers
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/OfferAccept"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /offeraddwhitelist:
    x-swagger-router-controller: rpc
    post:
      operationId: offeraddwhitelist
      description: Add to the affiliate list of your offer(controls who can resell). Requires wallet passphrase to be set with walletpassphrase call.
      tags:
      - Offers
      parameters: #TODO: review RPC param names
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/OfferAddWhitelistRequest"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /offerclearwhitelist:
    x-swagger-router-controller: rpc
    post:
      operationId: offerclearwhitelist
      description: Clear the affiliate list of your offer(controls who can resell). Requires wallet passphrase to be set with walletpassphrase call.
      tags:
      - Offers
      parameters: #TODO: review RPC param names
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/OfferClearWhitelistRequest"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /offerfilter:
    x-swagger-router-controller: rpc
    get:
      operationId: offerfilter
      description: scan and filter offeres
      tags:
      - Offers
      parameters:
      - name: regexp
        in: query
        description: apply [regexp] on offeres, empty means all offeres
        required: true
        type: string
      - name: maxage
        in: query
        description: look in last [maxage] blocks
        required: false
        type: number
      - name: from
        in: query
        description: show results from number [from]
        required: false
        type: number
      - name: nb
        in: query
        description: show [nb] results, 0 means all
        required: false
        type: number
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/OfferListEntry"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /offerhistory:
    x-swagger-router-controller: rpc
    get:
      operationId: offerhistory
      description: List all stored values of an offer.
      tags:
      - Offers
      parameters:
      - name: offer
        in: query
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/OfferHistoryEntry"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /offerinfo:
    x-swagger-router-controller: rpc
    get:
      operationId: offerinfo
      description: Show values of an offer.
      tags:
      - Offers
      parameters:
      - name: guid
        in: query
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Offer"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /offerlink:
    x-swagger-router-controller: rpc
    post:
      operationId: offerlink
      description: Requires wallet passphrase to be set with walletpassphrase call.
      tags:
      - Offers
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/OfferLinkRequest"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /offerlist:
    x-swagger-router-controller: rpc
    get:
      operationId: offerlist
      description: list my own offers
      tags:
      - Offers
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/OfferListEntry"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /offernew:
    x-swagger-router-controller: rpc
    post:
      operationId: offernew
      description: Create a new offer on the Syscoin decentralized marketplace. Requires wallet passphrase to be set with walletpassphrase call.
      tags:
      - Offers
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/OfferNewRequest"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /offerremovewhitelist:
    x-swagger-router-controller: rpc
    post:
      operationId: offerremovewhitelist
      description: Remove from the affiliate list of your offer(controls who can resell). Requires wallet passphrase to be set with walletpassphrase call.
      tags:
      - Offers
      parameters: #TODO: review RPC param names
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/OfferRemoveWhitelistRequest"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /offerscan:
    x-swagger-router-controller: rpc
    get:
      operationId: offerscan
      description: scan all offers, starting at start-offer and returning a maximum number of entries (default 500)
      tags:
      - Offers
      parameters:
      - name: start-offer
        in: query
        required: false
        type: string
      - name: max-returned
        in: query
        required: false
        type: number
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string #TODO: could not execute RPC command, error'd
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /offerupdate:
    x-swagger-router-controller: rpc
    post:
      operationId: offerupdate
      description: Perform an update on an offer you control. Requires wallet passphrase to be set with walletpassphrase call.
      tags:
      - Offers
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/OfferUpdateRequest"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /offerwhitelist:
    x-swagger-router-controller: rpc
    get:
      operationId: offerwhitelist
      description: List all affiliates for this offer.
      tags:
      - Offers
      parameters: #TODO: review RPC param names
      - name: offerguid
        in: query
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/OfferWhitelistEntry"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /sendfrom:
    x-swagger-router-controller: rpc
    post:
      operationId: sendfrom
      description: DEPRECATED (use sendtoaddress). Sent an amount from an account to a syscoin address. The amount is a real and is rounded to the nearest 0.00000001. Requires wallet passphrase to be set with walletpassphrase call.
      tags:
      - General
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/SendFromRequest"
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /sendmany:
    x-swagger-router-controller: rpc
    post:
      operationId: sendmany
      description: Send multiple times. Amounts are double-precision floating point numbers. Requires wallet passphrase to be set with walletpassphrase call.
      tags:
      - General
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/SendManyRequest"
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /sendtoaddress:
    x-swagger-router-controller: rpc
    post:
      operationId: sendtoaddress
      description: Send an amount to a given address. The amount is a real and is rounded to the nearest 0.00000001. Requires wallet passphrase to be set with walletpassphrase call.
      tags:
      - General
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/SendToAddressRequest"
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /signmessage:
    x-swagger-router-controller: rpc
    post:
      operationId: signmessage
      description: Sign a message with the private key of an address. Requires wallet passphrase to be set with walletpassphrase call.
      tags:
      - General
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/SignMessageRequest"
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /walletlock:
    x-swagger-router-controller: rpc
    post:
      operationId: walletlock
      description: Removes the wallet encryption key from memory, locking the wallet. After calling this method, you will need to call walletpassphrase again before being able to call any methods which require the wallet to be unlocked.
      tags:
      - General
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /walletpassphrase:
    x-swagger-router-controller: rpc
    post:
      operationId: walletpassphrase
      description: Stores the wallet decryption key in memory for 'timeout' seconds. This is needed prior to performing transactions related to private keys such as sending syscoins
      tags:
      - General
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/WalletPassphraseRequest"
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /walletpassphrasechange:
    x-swagger-router-controller: rpc
    post:
      operationId: walletpassphrasechange
      description: Changes the wallet passphrase from 'oldpassphrase' to 'newpassphrase'.
      tags:
      - General
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/WalletPassphraseChangeRequest"
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

# complex objects have schema definitions
definitions:
  Info:
    required:
    - version
    - protocolversion
    - walletversion
    - balance
    - blocks
    - timeoffset
    - connections
    - proxy
    - difficulty
    - testnet
    - keypoololdest
    - keypoolsize
    - unlocked_until
    - paytxfee
    - relayfee
    - errors
    properties:
      version:
        description: the server version
        type: number
      protocolversion:
        description: the protocol version
        type: number
      walletversion:
        description: the wallet version
        type: number
      balance:
        description: the total syscoin balance of the wallet
        type: number
      blocks:
        description: the current number of blocks processed in the server
        type: number
      timeoffset:
        description: the time offset
        type: number
      connections:
        description: the number of connections
        type: number
      proxy:
        description: the proxy used by the server
        type: string
      difficulty:
        description: the current difficulty
        type: number
      testnet:
        description: if the server is using testnet or not
        type: boolean
      keypoololdest:
        description: the timestamp (seconds since GMT epoch) of the oldest pre-generated key in the key pool
        type: number
      keypoolsize:
        description: how many new keys are pre-generated
        type: number
      unlocked_until:
        description: the timestamp in seconds since epoch (midnight Jan 1 1970 GMT) that the wallet is unlocked for transfers, or 0 if the wallet is locked
        type: number
      paytxfee:
        description: the transaction fee set in SYS/kB
        type: number
      relayfee:
        description: minimum relay fee for non-free transactions in SYS/kB
        type: number
      errors:
        description: any error messages
        type: string
  MiningInfo:
    required:
    - blocks
    - currentblocksize
    - currentblocktx
    - difficulty
    - errors
    - genproclimit
    - pooledtx
    - testnet
    - chain
    - generate
    properties:
      blocks:
        description: The current block
        type: number
      currentblocksize:
        description: The last block size
        type: number
      currentblocktx:
        description: The last block transaction
        type: number
      difficulty:
        description: The current difficulty
        type: number
      errors:
        description: Current errors
        type: string
      genproclimit:
        description: The processor limit for generation. -1 if no generation.
        type: number
      networkhashps:
        description: Current network hashrate in kbs
        type: number
      pooledtx:
        description: The size of the mem pool
        type: number
      testnet:
        description: If using testnet or not
        type: boolean
      chain:
        description: current network name as defined in BIP70 (main, test, regtest)
        type: string
      generate:
        description: If the generation is on or off (see getgenerate or setgenerate calls)
        type: boolean
  PeerInfoResponse:
    type: array
    items:
      $ref: "#/definitions/PeerInfo"
  PeerInfo:
    required:
    - id
    - addr
    - addrlocal
    - services
    - relaytxes
    - lastsend
    - lastrecv
    - bytessent
    - bytesrecv
    - conntime
    - timeoffset
    - pingtime
    - minping
    - version
    - subver
    - inbound
    - startingheight
    - banscore
    - synced_headers
    - synced_blocks
    - inflight
    - whitelisted
    - bytessent_per_msg
    - bytesrecv_per_msg
    properties:
      id:
        description: Peer index
        type: number
      addr:
        description: The ip address and port of the peer
        type: string
      addrlocal:
        description: local address
        type: string
      services:
        description: The services offered
        type: string
      relaytxes:
        description: Whether peer has asked us to relay transactions to it
        type: boolean
      lastsend:
        description: The time in seconds since epoch (Jan 1 1970 GMT) of the last send
        type: number
      lastrecv:
        description: The time in seconds since epoch (Jan 1 1970 GMT) of the last receive
        type: number
      bytessent:
        description: The total bytes sent
        type: number
      bytesrecv:
        description: The total bytes received
        type: number
      conntime:
        description: The connection time in seconds since epoch (Jan 1 1970 GMT)
        type: number
      timeoffset:
        description: The time offset in seconds
        type: number
      pingtime:
        description: ping time
        type: number
      minping:
        description: minimum observed ping time
        type: number
      version:
        description: The peer version, such as 7001
        type: number
      subver:
        description: The string version
        type: string
      inbound:
        description: Inbound (true) or Outbound (false)
        type: boolean
      startingheight:
        description: The starting height (block) of the peer
        type: number
      banscore:
        description: The ban score
        type: number
      synced_headers:
        description: The last header we have in common with this peer
        type: number
      synced_blocks:
        description: The last block we have in common with this peer
        type: number
      inflight:
        description: The heights of blocks we're currently asking from this peer
        type: array
        items:
          type: number
      whitelisted:
        description: If this peer is whitelisted
        type: boolean
      bytessent_per_msg:
        $ref: "#/definitions/ByteMessageInfo"
      bytesrecv_per_msg:
        $ref: "#/definitions/ByteMessageInfo"
  ByteMessageInfo:
    required:
    - addr
    - getheaders
    - headers
    - inv
    - ping
    - pong
    - sendheaders
    - verack
    - version
    properties:
      addr:
        type: number
      block:
        type: number
      getaddr:
        type: number
      getdata:
        type: number
      getheaders:
        type: number
      headers:
        type: number
      inv:
        type: number
      ping:
        type: number
      pong:
        type: number
      sendheaders:
        type: number
      tx:
        type: number
      verack:
        type: number
      version:
        type: number
  ValidateAddressResponse:
    properties:
      isvalid:
        description: If the address is valid or not. If not, this is the only property returned.
        type: boolean
      address:
        description: The syscoin address validated
        type: string
      ismine:
        description: If the address is yours or not
        type: boolean
      iswatchonly:
        description: If the address is watchonly
        type: boolean
      isscript:
        description: If the key is a script
        type: boolean
      pubkey:
        description: The hex value of the raw public key
        type: string
      iscompressed:
        description: If the address is compressed
        type: boolean
      account:
        description: DEPRECATED. The account associated with the address, "" is the default account
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  Alias:
    properties:
      name:
        type: string
      value:
        type: string
      privatevalue:
        type: string
      txid:
        type: string
      address:
        type: string
      ismine:
        type: boolean
      lastupdate_height:
        type: number
      expires_in:
        type: number
      expires_on:
        type: number
      expired:
        type: boolean #returns 0/1
  AliasListEntry:
    required:
    - name
    - value
    - privatevalue
    - expires_in
    - expires_on
    - expired
    - pending
    properties:
      name:
        type: string
      value:
        type: string
      privatevalue:
        type: string
      expires_in:
        type: number
      expires_on:
        type: number
      expired:
        type: boolean #return 0/1
      pending:
        type: boolean #return 0/1
      txid:
        type: string #only returned with filter
  AliasHistoryEntry:
    properties:
      name:
        type: string
      aliastype:
        type: string
      value:
        type: string
      privatevalue:
        type: string
      txid:
        type: string
      address:
        type: string
      lastupdate_height:
        type: number
      expires_in:
        type: number
      expires_on:
        type: number
      expired:
        type: boolean #returns 0/1
  CertListEntry:
    properties:
      cert:
        type: string
      title:
        type: string
      data:
        type: string
      private:
        type: boolean #returns string Yes/No
      expires_in:
        type: number
      expires_on:
        type: number
      expired:
        type: boolean #returns 0/1
      address:
        type: string
      alias:
        type: string
  Cert:
    properties:
      cert:
        type: string
      txid:
        type: string
      height:
        type: number #returns string wrapped num
      title:
        type: string
      data:
        type: string
      private:
        type: boolean #returns string Yes/No
      ismine:
        type: boolean #returns string wrapped boolean
      address:
        type: string
      alias:
        type: string
      expires_in:
        type: number
      expires_on:
        type: number
      expired:
        type: boolean #returns 0/1
  CertHistoryEntry:
    properties:
      cert:
        type: string
      certtype:
        type: string
      private:
        type: boolean #returns string Yes/No
      data:
        type: string
      txid:
        type: string
      address:
        type: string
      alias:
        type: string
      expires_in:
        type: number
      expires_on:
        type: number
      expired:
        type: boolean #returns 0/1
  EscrowHistoryEntry:
    properties:
      escrow:
        type: string
      escrowtype:
        type: string
      txid:
        type: string
      seller:
        type: string
      arbiter:
        type: string
      buyer:
        type: string
      offer:
        type: string
      offertitle:
        type: string
      offeracceptlink:
        type: string #TODO: clarify what this is used for
      total:
        type: number #returns string "1 SYS"
      expired:
        type: boolean #returns 0/1
      height:
        type: number #returns string wrapped number
  EscrowListEntry:
    properties:
      escrow:
        type: string
      time:
        type: number #returns string wrapped number
      seller:
        type: string
      arbiter:
        type: string
      buyer:
        type: string
      offer:
        type: string
      offertitle:
        type: string
      offeracceptlink:
        type: string #TODO: clarify what this is used for
      total:
        type: number #returns string "1 SYS"
      status:
        type: string #returns "escrow released" maybe create enum
      expired:
        type: boolean #returns 0/1
  Escrow:
    properties:
      escrow:
        type: string
      time:
        type: string
      seller:
        type: string
      arbiter:
        type: string
      buyer:
        type: string
      offer:
        type: string
      offertitle:
        type: string
      offeracceptlink:
        type: string #TODO: clarify what this is used for
      systotal:
        type: number
      sysfee:
        type: number
      total:
        type: number #returns string "1 SYS"
      txid:
        type: string
      height:
        type: number #returns string wrapped number
      pay_message:
        type: string
  Transaction:
    properties:
      amount:
        description: The transaction amount in SYS
        type: string
      confirmations:
        description: The number of confirmations
        type: number
      blockhash:
        description: The block hash
        type: string
      blockindex:
        description: The block index
        type: number
      blocktime:
        description: The time in seconds since epoch (1 Jan 1970 GMT)
        type: number
      txid:
        description: The transaction id.
        type: string
      time:
        description: The transaction time in seconds since epoch (1 Jan 1970 GMT)
        type: number
      timereceived:
        description: The time received in seconds since epoch (1 Jan 1970 GMT)
        type: number
      details:
        type: array
        items:
          $ref: "#/definitions/TransactionDetailEntry"
      hex:
        description: Raw data for transaction
        type: string
  TransactionDetailEntry:
    properties:
      account:
        description: DEPRECATED. The account name involved in the transaction, can be "" for the default account.
        type: string
      address:
        description: The syscoin address involved in the transaction
        type: string
      category:
        description: The category, either 'send' or 'receive'
        type: string
      amount:
        description: The amount in SYS
        type: number
      label:
        description: A comment for the address/transaction, if any
        type: string
      vout:
        description: the vout value
        type: number
  WalletInfo:
    properties:
      walletversion:
        description: the wallet version
        type: number
      balance:
        description: the total confirmed balance of the wallet in SYS
        type: number
      unconfirmed_balance:
        description: the total unconfirmed balance of the wallet in SYS
        type: number
      immature_balance:
        description: the total immature balance of the wallet in SYS
        type: number
      txcount:
        description: the total number of transactions in the wallet
        type: number
      keypoololdest:
        description: the timestamp (seconds since GMT epoch) of the oldest pre-generated key in the key pool
        type: number
      keypoolsize:
        description: how many new keys are pre-generated
        type: number
      unlocked_until:
        description: the timestamp in seconds since epoch (midnight Jan 1 1970 GMT) that the wallet is unlocked for transfers, or 0 if the wallet is locked
        type: number
      paytxfee:
        description: the transaction fee configuration, set in SYS/kB
        type: number
  AddressGrouping:
    properties:
      syscoinaddress:
        description: The syscoin address
        type: string
      amount:
        description: The amount in SYS
        type: number
      account:
        description: (optional) The account (DEPRECATED)
        type: string
  Account:
    properties:
      involvesWatchonly:
        description: Only returned if imported addresses were involved in transaction
        type: boolean
      account:
        description: The account name of the receiving account
        type: string
      amount:
        description: The total amount received by addresses with this account
        type: number
      confirmations:
        description: The number of confirmations of the most recent transaction included
        type: number
      label:
        description: A comment for the address/transaction, if any
        type: string
  ListSinceBlockResponse:
    properties:
      transactions:
        type: array
        items:
          $ref: "#/definitions/SinceBlockTransactionEntry"
      lastblock:
        description: The hash of the last block
        type: string
  SinceBlockTransactionEntry:
    properties:
      account:
        description: DEPRECATED. The account name associated with the transaction. Will be "" for the default account.
        type: string
      address:
        description: The syscoin address of the transaction. Not present for move transactions (category = move).
        type: string
      category:
        description: The transaction category. 'send' has negative amounts, 'receive' has positive amounts.
        type: string
      amount:
        description: The amount in SYS. This is negative for the 'send' category, and for the 'move' category for moves outbound. It is positive for the 'receive' category, and for the 'move' category for inbound funds.
        type: number
      vout:
        description: the vout value
        type: number
      fee:
        description: The amount of the fee in SYS. This is negative and only available for the 'send' category of transactions.
        type: number
      confirmations:
        description: The number of confirmations for the transaction. Available for 'send' and 'receive' category of transactions.
        type: number
      blockhash:
        description: The block hash containing the transaction. Available for 'send' and 'receive' category of transactions.
        type: string
      blockindex:
        description: The block index containing the transaction. Available for 'send' and 'receive' category of transactions.
        type: number
      blocktime:
        description: The block time in seconds since epoch (1 Jan 1970 GMT).
        type: number
      txid:
        description: The transaction id. Available for 'send' and 'receive' category of transactions.
        type: string
      time:
        description: The transaction time in seconds since epoch (Jan 1 1970 GMT).
        type: number
      timereceived:
        description: The time received in seconds since epoch (Jan 1 1970 GMT). Available for 'send' and 'receive' category of transactions.
        type: number
      comment:
        description: If a comment is associated with the transaction.
        type: string
      label:
        description: A comment for the address/transaction, if any
        type: string
      to:
        description: If a comment to is associated with the transaction.
        type: string
  TransactionListEntry:
    properties:
      account:
        description: DEPRECATED. The account name associated with the transaction. It will be "" for the default account.
        type: string
      address:
        description: The syscoin address of the transaction. Not present for move transactions (category = move).
        type: string
      category:
        description: The transaction category. 'move' is a local (off blockchain) transaction between accounts, and not associated with an address, transaction id or block. 'send' and 'receive' transactions are associated with an address, transaction id and block details
        type: string
      amount:
        description: The amount in SYS. This is negative for the 'send' category, and for the 'move' category for moves outbound. It is positive for the 'receive' category, and for the 'move' category for inbound funds.
        type: number
      vout:
        description: the vout value
        type: number
      fee:
        description: The amount of the fee in SYS. This is negative and only available for the 'send' category of transactions.
        type: number
      confirmations:
        description: The number of confirmations for the transaction. Available for 'send' and'receive' category of transactions. Negative confirmations indicate the transation conflicts with the block chain
        type: number
      trusted:
        description: Whether we consider the outputs of this unconfirmed transaction safe to spend.
        type: boolean
      blockhash:
        description: The block hash containing the transaction. Available for 'send' and 'receive' category of transactions.
        type: string
      blockindex:
        description: The block index containing the transaction. Available for 'send' and 'receive' category of transactions.
        type: string
      blocktime:
        description: The block time in seconds since epoch (1 Jan 1970 GMT).
        type: number
      txid:
        description: The transaction id. Available for 'send' and 'receive' category of transactions.
        type: string
      time:
        description: The transaction time in seconds since epoch (midnight Jan 1 1970 GMT).
        type: number
      timereceived:
        description: The time received in seconds since epoch (midnight Jan 1 1970 GMT). Available for 'send' and 'receive' category of transactions.
        type: number
      comment:
        description: If a comment is associated with the transaction.
        type: string
      label:
        description:  A comment for the address/transaction, if any
        type: string
      otheraccount:
        description: For the 'move' category of transactions, the account the funds came from (for receiving funds, positive amounts), or went to (for sending funds, negative amounts).
        type: string
  MessageHistoryEntry:
    properties:
      GUID:
        type: string
      messagetype:
        type: string
      time:
        type: number #returns string wrapped number
      from:
        type: string
      to:
        type: string
      subject:
        type: string
      message:
        type: string
  Message:
    properties:
      GUID:
        type: string
      time:
        type: number #returns string wrapped number
      from:
        type: string
      to:
        type: string
      subject:
        type: string
      message:
        type: string
      txid:
        type: string
      height:
        type: number #returns string wrapped number
  MessageListEntry:
    properties:
      GUID:
        type: string
      time:
        type: number #returns string wrapped number
      from:
        type: string
      to:
        type: string
      subject:
        type: string
      message:
        type: string
  OfferAccept:
    properties:
      offer:
        type: string
      title:
        type: string
      id:
        type: string
      btctxid:
        type: string
      alias:
        type: string
      buyer:
        type: string
      height:
        type: number #returns string wrapped number
      quantity:
        type: number #returns string wrapped number
      currency:
        type: string
      linkofferaccept:
        type: string #TODO: clarify
      offer_discount_percentage:
        type: number #returns string "0%"
      escrowlink:
        type: string #TODO: clarify
      systotal:
        type: number
      price:
        type: number #returns string wrapped number
      total:
        type: number #returns string wrapped number
      ismine:
        type: boolean #return string wrapper boolean
      status:
        type: string
      pay_message:
        type: string
  OfferWhitelistEntry:
    properties:
      alias:
        type: string
      expiresin:
        type: number
      offer_discount_percentage:
        type: number #returns string "5%"
  OfferListEntry:
    properties:
      offer:
        type: string
      cert:
        type: string
      title:
        type: string
      category:
        type: string
      description:
        type: string
      price:
        type: number #returns string wrapped number
      currency:
        type: string
      commission:
        type: number #returns string 0%
      quantity:
        type: number #returns string wrapped number
      address:
        type: string
      exclusive_resell:
        type: boolean #returns string ON/OFF
      btconly:
        type: boolean #returns string Yes/No
      alias_peg:
        type: string
      private:
        type: boolean #returns string Yes/No
      alias:
        type: string
      expires_in:
        type: number
      expires_on:
        type: number
      expired:
        type: boolean #returns 0/1
      pending:
        type: boolean #returns 0/1
  OfferHistoryEntry:
    properties:
      offer:
        type: string
      offertype:
        type: string
      cert:
        type: string
      title:
        type: string
      category:
        type: string
      description:
        type: string
      price:
        type: number #returns string wrapped number
      currency:
        type: string
      commission:
        type: number #retrusn string 0%
      quantity:
        type: number #returns string wrapped number
      txid:
        type: string
      alias:
        type: string
      expires_in:
        type: number
      expires_on:
        type: number
      expired:
        type: boolean #returns 0/1
      height:
        type: boolean #returns 0/1
  Offer:
    properties:
      offer:
        type: string
      cert:
        type: string
      txid:
        type: string
      expires_in:
        type: number
      expired_block:
        type: number
      expired:
        type: boolean #return 0/1
      height:
        type: number #return string wrapped number
      address:
        type: string
      category:
        type: string
      title:
        type: string
      quantity:
        type: string
      currency:
        type: string
      sysprice:
        type: number
      price:
        type: number #returns string wrapped number
      ismine:
        type: boolean #returns string wrapped boolean
      commission:
        type: number #returns string wrapped number
      offerlink:
        type: boolean #returns string wrapped boolean
      offerlink_guid: #what is this
        type: string
      exclusive_resell:
        type: boolean #returns string Yes/No
      private:
        type: boolean #returns string Yes/No
      btconly:
        type: boolean #retursn string Yes/No
      alias_peg:
        type: string
      description:
        type: string
      alias":
        type: string
      accepts:
          type: array
          items:
            $ref: "#/definitions/OfferAccept"
  AddMultisigAddressRequest:
    required:
    - nrequired
    - keysobject
    properties:
      nrequired:
        description: The number of required signatures out of the n keys or addresses.
        type: number
      keysobject:
        description: A json array of syscoin addresses or hex-encoded public keys. [ "address"  (string) syscoin address or hex-encoded public key ... ]
        type: string
      account:
        description: DEPRECATED. An account to assign the addresses to.
        type: string
  AliasNewRequest:
    required:
    - aliasname
    - aliaspeg
    - publicvalue
    properties:
      aliaspeg:
        description: Alias peg which will be used for conversion operations on all Syscoin services related to this Alias
        type: string
      aliasname:
        description: Alias name
        type: string
      publicvalue:
        description: Alias public profile data, 1023 chars max.
        type: string
      privatevalue:
        description: Alias private profile data, 1023 chars max. Will be private and readable by owner only.
        type: string
      password:
        description: "Used to generate your public/private key that controls this alias. Warning: Calling this function over a public network can lead to someone reading your password in plain text."
        type: string
      safesearch: #should be boolean
        description: set to No if this alias should only show in the search when safe search is not selected. Defaults to Yes (alias shows with or without safe search selected in search lists).
        type: string
      accepttransfers:
        description: set to No if this alias should not allow a certificate to be transferred to it. Defaults to Yes.
        type: string
      expire:
        description: Time in seconds. Future time when to expire alias. It is exponentially more expensive per year, calculation is FEERATE*(1.5^years). FEERATE is the dynamic satoshi per byte fee set in the rate peg alias used for this alias. Defaults to 1 year.
        type: string
      nrequired:
        description: For multisig aliases only. The number of required signatures out of the n aliases for a multisig alias update.
        type: number
      aliases:
        description: "For multisig aliases only. A json array of aliases which are used to sign on an update to this alias.
           [
             \"alias\"    Existing syscoin alias name
             ,...
           ]"
        type: array
        items:
          type: string
  AliasUpdateRequest:
    required:
    - aliaspeg
    - aliasname
    - publicvalue
    properties:
      aliaspeg:
        description: Alias peg which will be used for conversion operations on all Syscoin services related to this Alias
        type: string
      aliasname:
        description: Alias name
        type: string
      publicvalue:
        description: Alias public profile data, 1023 chars max.
        type: string
      privatevalue:
        description: Alias private profile data, 1023 chars max. Will be private and readable by owner only.
        type: string
      password:
        description: "Used to generate your public/private key that controls this alias. Warning: Calling this function over a public network can lead to someone reading your password in plain text."
        type: string
      safesearch: #should be boolean
        description: set to No if this alias should only show in the search when safe search is not selected. Defaults to Yes (alias shows with or without safe search selected in search lists).
        type: string
      toalias_pubkey:
        description: receiver syscoin alias pub key, if transferring alias.
        type: string
      accepttransfers:
        description: set to No if this alias should not allow a certificate to be transferred to it. Defaults to Yes.
        type: string
      expire:
        description: Time in seconds. Future time when to expire alias. It is exponentially more expensive per year, calculation is FEERATE*(1.5^years). FEERATE is the dynamic satoshi per byte fee set in the rate peg alias used for this alias. Defaults to 1 year.
        type: string
      nrequired:
        description: For multisig aliases only. The number of required signatures out of the n aliases for a multisig alias update.
        type: number
      aliases:
        description: "For multisig aliases only. A json array of aliases which are used to sign on an update to this alias.
           [
             \"alias\"    Existing syscoin alias name
             ,...
           ]"
        type: array
        items:
          type: string
  CertNewRequest:
    required:
    - alias
    - title
    - private
    - public
    properties:
      alias:
        description: An alias you own.
        type: string
      title:
        description: title, 255 bytes max.
        type: string
      private:
        description: private data, 1024 characters max.
        type: string
      public:
        description: public data, 1024 characters max.
        type: string
      safesearch: #should be boolean
        description: "set to No if this cert should only show in the search when safe search is not selected. Defaults to Yes (cert shows with or without safe search selected in search lists)."
        type: string
      category:
        description: category, 25 characters max. Defaults to certificates;
        type: string
  CertTransferRequest:
    required:
    - certkey
    - alias
    properties:
      certkey:
        description: Certificate guidkey.
        type: string
      alias:
        description: Alias to transfer this certificate to.
        type: string
      viewonly:
        description: Transfer the certificate as view-only. Recipient cannot edit, transfer or sell this certificate in the future.
        type: boolean
  CertUpdateRequest:
    required:
    - guid
    - alias
    - title
    - private
    - public
    properties:
      guid:
        description: certificate guidkey.
        type: string
      alias:
        description: an alias you own to associate with this certificate.
        type: string
      title:
        description: certificate title, 255 bytes max.
        type: string
      private:
        description: Private certificate data, 1024 characters max.
        type: string
      public:
        description: Public certificate data, 1024 characters max.
        type: string
      safesearch: #should be boolean
        description: "set to No if this cert should only show in the search when safe search is not selected. Defaults to Yes (cert shows with or without safe search selected in search lists)."
        type: string
      category:
        description: "category, 256 characters max. Defaults to certificates"
        type: string
  EscrowClaimRefundRequest:
    required:
    - guid
    properties:
      guid:
        type: string
  EscrowClaimReleaseRequest:
    required:
    - guid
    properties:
      guid:
        type: string
  EscrowCompleteRequest:
    required:
    - guid
    properties:
      guid:
        type: string
  EscrowNewRequest:
    required:
    - alias
    - offer
    - quantity
    - arbiter
    properties:
      alias:
        type: string
      offer:
        type: string
      quantity:
        type: number
      message:
        type: string
      arbiter:
        type: string
  GetNewAddressRequest:
    properties:
      account:
        description: DEPRECATED. The account name for the address to be linked to. If not provided, the default account "" is used. It can also be set to the empty string "" to represent the default account. The account does not need to exist, it will be created if there is no account by the given name.
        type: string
  ImportAddressRequest:
    required:
    - script
    properties:
      script:
        description: The hex-encoded script (or address)
        type: string
      label:
        description: An optional label
        type: string
      rescan:
        description: Rescan the wallet for transactions
        type: boolean
      p2sh:
        description: Add the P2SH version of the script as well
        type: boolean
  ImportPrivKeyRequest:
    required:
    - syscoinprivkey
    properties:
      syscoinprivkey:
        description: The private key (see dumpprivkey)
        type: string
      label:
        description: An optional label
        type: string
      rescan:
        description: Rescan the wallet for transactions
        type: boolean
  ImportPubKeyRequest:
    required:
    - pubkey
    properties:
      pubkey:
        description: The hex-encoded public key
        type: string
      label:
        description: An optional label
        type: string
      rescan:
        description: Rescan the wallet for transactions
        type: boolean
  ImportWalletRequest:
    required:
    - filename
    properties:
      filename:
        description: The wallet file
        type: string
  MessageNewRequest:
    required:
    - subject
    - message
    - fromalias
    - toalias
    properties:
      subject:
        description: Subject of message.
        type: string
      message:
        description: Message to send to alias.
        type: string
      fromalias:
        description: Alias to send message from.
        type: string
      toalias:
        description: Alias to send message to.
        type: string
  MoveRequest:
    required:
    - fromaccount
    - toaccount
    - amount
    properties:
      fromaccount:
        description: The name of the account to move funds from. May be the default account using "".
        type: string
      toaccount:
        description: The name of the account to move funds to. May be the default account using "".
        type: string
      amount:
        description: Quantity of SYS to move between accounts.
        type: number
      minconf:
        description: Only use funds with at least this many confirmations.
        type: string
      comment:
        description: An optional comment, stored in the wallet only.
        type: string
  OfferAcceptRequest:
    required:
    - alias
    - guid
    - quantity
    properties:
      alias:
        description: An alias of the buyer.
        type: string
      guid:
        description: guidkey from offer.
        type: string
      quantity:
        description: quantity to buy. Defaults to 1.
        type: number
      message:
        description: payment message to seller, 1KB max.
        type: string
      btcTxId: #TODO: review RPC, params weird
        description: If you have paid in Bitcoin and the offer is in Bitcoin, enter the transaction ID here. Default is empty.
        type: string
      linkedacceptguidtxhash:
        description: transaction id of the linking offer accept. For internal use only, leave blank
        type: string
      escrowTxHash:
        description: If this offer accept is done by an escrow release. For internal use only, leave blank
        type: string
  OfferAddWhitelistRequest:
    required:
    - offerguid
    - aliasguid
    - discountPercentage
    properties:
      offerguid:
        description: offer guid that you are adding to
        type: string
      aliasguid:
        description: alias guid representing an alias that you want to add to the affiliate list
        type: string
      discountPercentage:
        description: percentage of discount given to reseller for this offer. Negative discount adds on top of offer price, acts as an extra commission. -99 to 99.
        type: number
  OfferClearWhitelistRequest:
    required:
    - offerguid
    properties:
      offerguid:
        type: string
  OfferLinkRequest:
    required:
    - alias
    - guid
    - comission
    properties:
      alias:
        description: An alias you own.
        type: string
      guid:
        description: offer guid that you are linking to
        type: string
      comission:
        description: percentage of profit desired over original offer price, > 0, ie 5 for 5%
        type: string
      description:
        description: description, 1 KB max. Defaults to original description. Leave as '' to use default.
        type: string
  OfferNewRequest:
    required:
    - aliaspeg
    - alias
    - category
    - title
    - quantity
    - price
    - description
    - currency
    properties:
      aliaspeg:
        description: Alias peg you wish to use, leave blank to use SYS_RATES.
        type: string
      alias:
        description: An alias you own.
        type: string
      category:
        description: category, 255 chars max.
        type: string
      title:
        description: title, 255 chars max.
        type: string
      quantity:
        description: quantity, > 0 or -1 for infinite
        type: number
      price:
        description: price in <currency>, > 0
        type: number
      description:
        description: description, 1 KB max.
        type: string
      currency:
        description: The currency code that you want your offer to be in ie USD.
        type: string
      certguid: #TODO: check param name
        description: Set this to the guid of a certificate you wish to sell
        type: string
      excelusiveResell: #TODO: check param name
        description: set to 1 if you only want those who control the affiliate's who are able to resell this offer via offerlink. Defaults to 1.
        type: boolean
      acceptBTCOnly: #TODO: check param name
        description: set to 1 if you only want accept Bitcoins for payment and your currency is set to BTC, note you cannot resell or sell a cert in this mode. Defaults to 0.
        type: boolean
  OfferRemoveWhitelistRequest:
    required:
    - offerguid
    - aliasguid
    properties:
      offerguid:
        type: string
      aliasguid:
        type: string
  OfferUpdateRequest:
    required:
    - aliaspeg
    - alias
    - guid
    - category
    - title
    - description
    - quantity
    - price
    - private
    properties:
      aliaspeg:
        description: Alias peg you wish to use, leave blank to use SYS_RATES.
        type: string
      alias:
        description: An alias you own.
        type: string
      guid:
        description: Guid of offer to update
        type: string
      category:
        description: category, 255 chars max.
        type: string
      title:
        description: title, 255 chars max.
        type: string
      quantity:
        description: quantity, > 0 or -1 for infinite
        type: number
      price:
        description: price in <currency>, > 0
        type: number
      description:
        description: description, 1 KB max.
        type: string
      private: #TODO: rename, private is reserved word
        description: Can this offer be seen in public search
        type: boolean
      certguid: #TODO: check param name
        description: Set this to the guid of a certificate you wish to sell
        type: string
      excelusiveResell: #TODO: check param name
        description: set to 1 if you only want those who control the affiliate's who are able to resell this offer via offerlink. Defaults to 1.
        type: boolean
  SendFromRequest:
    required:
    - fromaccount
    - tosyscoinaddress
    - amount
    properties:
      fromaccount:
        description: The name of the account to send funds from. May be the default account using "".
        type: string
      tosyscoinaddress:
        description: The syscoin address to send funds to.
        type: string
      amount:
        description: he amount in SYS (transaction fee is added on top).
        type: number
      minconf:
        description: Only use funds with at least this many confirmations.
        type: number
      comment:
        description: A comment used to store what the transaction is for. This is not part of the transaction, just kept in your wallet.
        type: string
      commentto:
        description: An optional comment to store the name of the person or organization to which you're sending the transaction. This is not part of the transaction, it is just kept in your wallet.
        type: string
  SendManyRequest:
    required:
    - fromaccount
    - amounts
    properties:
      fromaccount:
        description: DEPRECATED. The account to send the funds from. Should be "" for the default account
        type: string
      amounts:
        description: A json object with addresses and amounts { "address":amount   (numeric) The syscoin address is the key, the numeric amount in SYS is the value,...}
        type: string
      minconf:
        description: Only use the balance confirmed at least this many times.
        type: number
      comment:
        description: A comment used to store what the transaction is for. This is not part of the transaction, just kept in your wallet.
        type: string
      subtractfeefromamount:
        description: A json array with addresses. The fee will be equally deducted from the amount of each selected address. Those recipients will receive less syscoins than you enter in their corresponding amount field. If no addresses are specified here, the sender pays the fee. [ "address" Subtract fee from this address,... ]
        type: string
  SendToAddressRequest:
    required:
    - syscoinaddress
    - amount
    properties:
      syscoinaddress:
        description: The syscoin address to send to.
        type: string
      amount:
        description: The amount in SYS to send. eg 0.1
        type: number
      comment:
        description: A comment used to store what the transaction is for. This is not part of the transaction, just kept in your wallet.
        type: string
      commentto:
        description: An optional comment to store the name of the person or organization to which you're sending the transaction. This is not part of the transaction, it is just kept in your wallet.
        type: string
      subtractfeefromamount:
        description: The fee will be deducted from the amount being sent. The recipient will receive less syscoins than you enter in the amount field.
        type: string
  SignMessageRequest:
    required:
    - syscoinaddress
    - message
    properties:
      syscoinaddress:
        description: The syscoin address to use for the private key.
        type: string
      message:
        description: The message to create a signature of.
        type: number
  WalletPassphraseRequest:
    required:
    - passphrase
    - timeout
    properties:
      passphrase:
        description: The wallet passphrase
        type: string
      timeout:
        description: The time to keep the decryption key in seconds.
        type: number
  WalletPassphraseChangeRequest:
    required:
    - oldpassphrase
    - newpassphrase
    properties:
      oldpassphrase:
        description: The current passphrase
        type: string
      newpassphrase:
        description: The new passphrase
        type: string