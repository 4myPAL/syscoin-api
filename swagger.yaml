swagger: "2.0"
info:
  version: "1.0.4"
  title: Syscoin API
host: localhost:8001
securityDefinitions:
  token:
    type: apiKey
    in: header
    name: token
schemes:
  # remove http to make production-grade
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
tags:
- name: General
  description: All general wallet operations.
- name: Aliases
  description: Operations related to aliases.
- name: Offers
  description: Operations related to offers and the decentralized marketplace functionality.
- name: Escrow
  description: Operations related to escrow.
- name: Certificates
  description: Operations related to digital certificates.
paths:
  /login:
    x-swagger-router-controller: blockmarket
    get:
      operationId: login
      description: Returns a session token for use with subsquent protected calls.
      tags:
      - Blockmarket
      parameters:
      - name: auth
        description: SHA1 hash of the user's authentication information- usernamepassword.
        in: query
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/LoginResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /storedata:
    x-swagger-router-controller: blockmarket
    post:
      operationId: storedata
      description: "Store an arbitrary piece of data on a decentralized network of data storage warehouses and return the client \
                    an array of URLs through which the data can be accessed."
      security:
      - token: []
      tags:
      - Blockmarket
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/StoreDataRequest"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/StoreDataResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getblock:
    x-swagger-router-controller: rpc
    get:
      operationId: getblock
      description: "If verbose is false, returns a string that is serialized, hex-encoded data for block 'hash'. \
                    If verbose is true, returns an Object with information about block <hash>."
      security:
      - token: []
      tags:
      - General
      parameters:
      - name: hash
        in: query
        required: true
        type: string
      - name: verbose
        in: query
        required: false
        type: boolean
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetBlockResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getblockchaininfo:
    x-swagger-router-controller: rpc
    get:
      operationId: getblockchaininfo
      description: Returns an object containing various state info regarding block chain processing.
      security:
      - token: []
      tags:
      - General
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetBlockchainInfoResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getblockcount:
    x-swagger-router-controller: rpc
    get:
      operationId: getblockcount
      description: Returns the number of blocks in the longest block chain.
      security:
      - token: []
      tags:
      - General
      responses:
        "200":
          description: Success
          schema:
            type: number
        default:
          description: Error
          schema:
            type: number

  /getinfo:
    x-swagger-router-controller: rpc
    get:
      operationId: getinfo
      description: Returns an object containing various state info.
      security:
      - token: []
      tags:
      - General
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Info"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getmininginfo:
    x-swagger-router-controller: rpc
    get:
      operationId: getmininginfo
      description: Returns a json object containing mining-related information.
      security:
      - token: []
      tags:
      - General
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/MiningInfo"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getnetworkinfo:
    x-swagger-router-controller: rpc
    get:
      operationId: getnetworkinfo
      description: Returns a json object containing network-related information.
      security:
      - token: []
      tags:
      - General
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/NetworkInfo"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getpeerinfo:
    x-swagger-router-controller: rpc
    get:
      operationId: getpeerinfo
      description: Returns data about each connected network node as a json array of objects.
      security:
      - token: []
      tags:
      - General
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/PeerInfoResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /validateaddress:
    x-swagger-router-controller: rpc
    post:
      operationId: validateaddress
      description: Return information about the given syscoin address.
      security:
      - token: []
      tags:
      - General
      parameters:
      - name: syscoinaddress
        in: query
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ValidateAddressResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /verifymessage:
    x-swagger-router-controller: rpc
    get:
      operationId: verifymessage
      description: Verify a signed message
      security:
      - token: []
      tags:
      - General
      parameters:
      - name: syscoinaddress
        description: The syscoin address to use for the signature.
        in: query
        required: true
        type: string
      - name: signature
        description: The signature provided by the signer in base 64 encoding (see signmessage).
        in: query
        required: true
        type: string
      - name: message
        description: The message that was signed.
        in: query
        required: true
        type: string
      responses:
        "200":
          description: If the signature is verified or not.
          schema:
            type: boolean
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /addmultisigaddress:
    x-swagger-router-controller: rpc
    post:
      operationId: addmultisigaddress
      description: Add a nrequired-to-sign multisignature address to the wallet. Each key is a Syscoin address or hex-encoded public key. If 'account' is specified (DEPRECATED), assign address to that account.
      security:
      - token: []
      tags:
      - General
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/AddMultisigAddressRequest"
      responses:
        "200":
          description: A syscoin address associated with the keys.
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /aliasaddscript:
    x-swagger-router-controller: rpc
    post:
      operationId: aliasaddscript
      description: Add redeemscript to local wallet for signing smart contract based alias transactions.
      security:
      - token: []
      tags:
      - Aliases
      parameters:
      - name: redeemscript
        in: query
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            type: object
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /aliasfilter:
    x-swagger-router-controller: rpc
    get:
      operationId: aliasfilter
      description: scan and filter aliases
      security:
      - token: []
      tags:
      - Aliases
      parameters:
      - name: query
        in: query
        description: Generic filter query to pass into syscoinquery
        required: true
        type: string          
      - name: count
        in: query
        description: The number of results to return
        required: false
        type: string
      - name: from
        in: query
        description: Show results from this GUID [from], empty means first
        required: false
        type: string         
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/AliasIndex"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /aliashistory:
    x-swagger-router-controller: rpc
    get:
      operationId: aliashistory
      description: List all stored values of an alias.
      security:
      - token: []
      tags:
      - Aliases
      parameters:
      - name: query
        in: query
        description: Generic filter query to pass into syscoinquery
        required: true
        type: string
      - name: count
        in: query
        description: The number of results to return
        required: false
        type: number
      - name: from
        in: query
        description: Show results from this GUID [from], empty means first
        required: false
        type: string        
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/AliasHistoryIndex"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /aliastxhistory:
    x-swagger-router-controller: rpc
    get:
      operationId: aliastxhistory
      description: List all stored transactions related to an alias.
      security:
      - token: []
      tags:
      - Aliases
      parameters:
      - name: query
        in: query
        required: true
        type: string
        description: Generic filter query to pass into syscoinquery
      - name: count
        in: query
        description: The number of results to return
        required: false
        type: number
      - name: from
        in: query
        description: Show results from this GUID [from], empty means first
        required: false
        type: string        
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/AliasTxHistoryIndex"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"            
            
  /aliasupdatewhitelist:
    x-swagger-router-controller: rpc
    post:
      operationId: aliasupdatewhitelist
      description: "Update to the whitelist(controls who can resell). Array of whitelist entries in parameter 1."
      security:
      - token: []
      tags:
      - Aliases
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/AliasUpdateWhitelistRequest"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /aliasclearwhitelist:
    x-swagger-router-controller: rpc
    post:
      operationId: aliasclearwhitelist
      description: "Clear your whitelist(controls who can resell)."
      security:
      - token: []
      tags:
      - Aliases
      parameters:
      - name: owneralias
        in: query
        required: true
        type: string
      - name: witness
        in: query
        required: false
        type: string
      responses:
        "200":
          description: Success
          schema:
            type: object
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
         
  /aliaswhitelist:
    x-swagger-router-controller: rpc
    get:
      operationId: aliaswhitelist
      description: "List all affiliates for this alias."
      security:
      - token: []
      tags:
      - Aliases
      parameters:
      - name: alias
        in: query
        required: true
        type: string
      - name: witness
        in: query
        required: false
        type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/WhitelistEntry"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /aliasbalance:
    x-swagger-router-controller: rpc
    get:
      operationId: aliasbalance
      description: Returns the total amount received by the given alias in transactions with at least 1 confirmation.
      security:
      - token: []
      tags:
      - Aliases
      parameters:
       - name: alias
         description: The syscoin alias to get balance for
         in: query
         required: true
         type: string
      responses:
        "200":
          description: Success
          schema:
            type: object
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /aliasinfo:
    x-swagger-router-controller: rpc
    get:
      operationId: aliasinfo
      description: Show values of an alias.
      security:
      - token: []
      tags:
      - Aliases
      parameters:
      - name: aliasname
        in: query
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Alias"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /aliasnew:
    x-swagger-router-controller: rpc
    post:
      operationId: aliasnew
      description: Creates a new Syscoin Alias. Requires wallet passphrase to be set with walletpassphrase call.
      security:
      - token: []
      tags:
      - Aliases
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/AliasNewRequest"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /aliaspay:
    x-swagger-router-controller: rpc
    post:
      operationId: aliaspay
      description: Send multiple times from an alias. Amounts are double-precision floating point numbers.
      security:
      - token: []
      tags:
      - Aliases
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/AliasPayRequest"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /aliasupdate:
    x-swagger-router-controller: rpc
    post:
      operationId: aliasupdate
      description: Update and possibly transfer an alias. Requires wallet passphrase to be set with walletpassphrase call.
      security:
      - token: []
      tags:
      - Aliases
      parameters:
      - name: request
        in: body
        required: true
        schema:
            $ref: "#/definitions/AliasUpdateRequest"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /syscoinsendrawtransaction:
    x-swagger-router-controller: rpc
    post:
      operationId: syscoinsendrawtransaction
      description: Signed raw transaction (serialized, hex-encoded) sent out to the network.
      security:
      - token: []
      tags:
      - General
      parameters:
      - name: hexstring
        in: body
        required: true
        schema:
          $ref: "#/definitions/SendRawTransactionRequest"      
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /syscoindecoderawtransaction:
    x-swagger-router-controller: rpc
    post:
      operationId: syscoindecoderawtransaction
      description: Decode raw syscoin transaction (serialized, hex-encoded) and display information pertaining to the service that is included in the transactiion data output(OP_RETURN).
      security:
      - token: []
      tags:
      - General
      parameters:
      - name: hexstring
        in: body
        required: true
        schema:
         type: string
      responses:
        "200":
          description: Success
          schema:
            type: object
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /syscoinquery:
    x-swagger-router-controller: rpc
    get:
      operationId: syscoinquery
      description: Query the indexer for information in a collection.
      security:
      - token: []
      tags:
      - Aliases
      parameters:
      - name: collection
        in: query
        required: true
        type: string
        description: Collection name, either \"alias\", \"aliashistory\", \"aliastxhistory\", \"cert\",  \"certhistory\", \"offer\", \"offerhistory\", \"feedback\", \"escrow\", \"escrowbid\"
      - name: query
        in: query
        required: true
        type: string
        description: JSON query on the collection to retrieve a set of documents
      - name: options
        description: JSON option arguments into the query. Based on mongoc_collection_find_with_opts.
        in: query
        required: false
        type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /prunesyscoinservices:
    x-swagger-router-controller: rpc
    post:
      operationId: prunesyscoinservices
      description: Clean expired Syscoin services from indexer and internal database.
      security:
      - token: []
      tags:
      - Aliases
      responses:
        "200":
          description: Success
          schema:
            type: object
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /certinfo:
    x-swagger-router-controller: rpc
    get:
      operationId: certinfo
      description: Show stored values of a single certificate.
      security:
      - token: []
      tags:
      - Certificates
      parameters:
      - name: guid
        in: query
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Cert"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /certfilter:
    x-swagger-router-controller: rpc
    get:
      operationId: certfilter
      description: scan and filter certs
      security:
      - token: []
      tags:
      - Certificates
      parameters:
      - name: query
        in: query
        description: Generic filter query to pass into syscoinquery
        required: true
        type: string
      - name: count
        in: query
        description: The number of results to return
        required: false
        type: string
      - name: from
        in: query
        description: Show results from this GUID [from], empty means first
        required: false
        type: string         
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/CertIndex"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
         
  /certhistory:
    x-swagger-router-controller: rpc
    get:
      operationId: certhistory
      description: List all stored values of an cert.
      security:
      - token: []
      tags:
      - Certificates
      parameters:
      - name: query
        in: query
        description: Generic filter query to pass into syscoinquery
        required: true
        type: string
      - name: count
        in: query
        description: The number of results to return
        required: false
        type: number
      - name: from
        in: query
        description: Show results from this GUID [from], empty means first
        required: false
        type: string          
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/CertHistoryIndex"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /certnew:
    x-swagger-router-controller: rpc
    post:
      operationId: certnew
      description: Create a new Syscoin Certificate. Requires wallet passphrase to be set with walletpassphrase call.
      security:
      - token: []
      tags:
      - Certificates
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/CertNewRequest"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /certtransfer:
    x-swagger-router-controller: rpc
    post:
      operationId: certtransfer
      description: Transfer certificate from one user to another. Requires wallet passphrase to be set with walletpassphrase call.
      security:
      - token: []
      tags:
      - Certificates
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/CertTransferRequest"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /certupdate:
    x-swagger-router-controller: rpc
    post:
      operationId: certupdate
      description: Perform an update on an certificate you control. Requires wallet passphrase to be set with walletpassphrase call.
      security:
      - token: []
      tags:
      - Certificates
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/CertUpdateRequest"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /dumpprivkey:
    x-swagger-router-controller: rpc
    get:
      operationId: dumpprivkey
      description: Reveals the private key corresponding to 'syscoinaddress'. Then the importprivkey can be used with this output.
      security:
      - token: []
      tags:
      - General
      parameters:
      - name: address
        description: The syscoin address for the private key
        in: query
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /dumpwallet:
    x-swagger-router-controller: rpc
    get:
      operationId: dumpwallet
      description: Dumps all wallet keys in a human-readable format.
      security:
      - token: []
      tags:
      - General
      parameters:
      - name: filename
        description: The filename
        in: query
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /encryptwallet:
    x-swagger-router-controller: rpc
    post:
      operationId: encryptwallet
      description: "Encrypts the wallet with 'passphrase'. This is for first time encryption. \
                   After this, any calls that interact with private keys such as sending or signing \
                   will require the passphrase to be set prior the making these calls. \
                   Use the walletpassphrase call for this, and then walletlock call. \
                   If the wallet is already encrypted, use the walletpassphrasechange call. \
                   Note that this will shutdown the server."
      security:
      - token: []
      tags:
      - General
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/EncryptWalletRequest"
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /escrowacknowledge:
    x-swagger-router-controller: rpc
    post:
      operationId: escrowacknowledge
      description: Acknowledge escrow payment as seller of offer. Deducts qty of offer and increases number of sold inventory.
      security:
      - token: []
      tags:
      - Escrow
      parameters:
      - name: escrowguid
        in: query
        required: true
        type: string
      - name: witness
        in: query
        required: false
        type: string        
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string #TODO: double check
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /escrowcreaterawtransaction:
    x-swagger-router-controller: rpc
    post:
      operationId: escrowcreaterawtransaction
      description: Creates raw transaction for escrow refund or release, sign the output raw transaction and pass it via the rawtx parameter to escrowrelease. Type is 'refund' or 'release'. Third parameter is array of input (txid, vout, amount) pairs to be used to fund escrow payment. User role represents either 'seller', 'buyer' or 'arbiter', represents who signed for the payment of the escrow. 'seller' or 'arbiter' is valid for type 'refund', while 'buyer' or 'arbiter' is valid for type 'release'. You only need to provide this parameter when calling escrowrelease or escrowrefund.
      security:
      - token: []
      tags:
      - Escrow
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/EscrowCreateRawTransactionRequest"      
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string #TODO: double check
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /escrowcompleterefund:
    x-swagger-router-controller: rpc
    post:
      operationId: escrowcompleterefund
      description: Completes an escrow refund by creating the escrow complete refund transaction on syscoin blockchain.
      security:
      - token: []
      tags:
      - Escrow
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/EscrowCompleteRefundRequest"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string #TODO: double check
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"


  /escrowcompleterelease:
    x-swagger-router-controller: rpc
    post:
      operationId: escrowcompleterelease
      description: Completes an escrow release by creating the escrow complete release transaction on syscoin blockchain.
      security:
      - token: []
      tags:
      - Escrow
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/EscrowCompleteReleaseRequest"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string #TODO: double check
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /escrowfeedback:
    x-swagger-router-controller: rpc
    post:
      operationId: escrowfeedback
      description: "Send feedback for primary and secondary users in escrow, depending on who you are. Ratings are numbers from 1 to 5. User From and User To is either 'buyer', 'seller', 'reseller', or 'arbiter'."
      security:
      - token: []
      tags:
      - Escrow
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/EscrowFeedbackRequest"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /escrowfilter:
    x-swagger-router-controller: rpc
    get:
      operationId: escrowfilter
      description: scan and filter escrows
      security:
      - token: []
      tags:
      - Escrow
      parameters:
      - name: query
        in: query
        description: Generic filter query to pass into syscoinquery
        required: true
        type: string   
      - name: count
        in: query
        description: The number of results to return
        required: false
        type: string
      - name: from
        in: query
        description: Show results from this GUID [from], empty means first
        required: false
        type: string  
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/EscrowIndex"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /escrowbidhistory:
    x-swagger-router-controller: rpc
    get:
      operationId: escrowbidhistory
      description: scan and filter bids on escrow contracts
      security:
      - token: []
      tags:
      - Escrow
      parameters:
      - name: query
        in: query
        description: Generic filter query to pass into syscoinquery
        required: true
        type: string 
      - name: count
        in: query
        description: The number of results to return
        required: false
        type: string
      - name: from
        in: query
        description: Show results from this GUID [from], empty means first
        required: false
        type: string         
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/EscrowBidIndex"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /escrowfeedbackhistory:
    x-swagger-router-controller: rpc
    get:
      operationId: escrowfeedbackhistory
      description: scan and filter feedbacks and ratings
      security:
      - token: []
      tags:
      - Escrow
      parameters:
      - name: query
        in: query
        description: Generic filter query to pass into syscoinquery
        required: true
        type: string 
      - name: count
        in: query
        description: The number of results to return
        required: false
        type: string
      - name: from
        in: query
        description: Show results from this GUID [from], empty means first
        required: false
        type: string         
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/EscrowFeedbackIndex"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"            

  /escrowinfo:
    x-swagger-router-controller: rpc
    get:
      operationId: escrowinfo
      description: Show stored values of a single escrow
      security:
      - token: []
      tags:
      - Escrow
      parameters:
      - name: escrow
        description: GUID of escrow
        in: query
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Escrow"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /escrowbid:
    x-swagger-router-controller: rpc
    post:
      operationId: escrowbid
      description: Bid on an auction.
      security:
      - token: []
      tags:
      - Escrow
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/EscrowBidRequest"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /escrowaddshipping:
    x-swagger-router-controller: rpc
    post:
      operationId: escrowaddshipping
      description: Add shipping to an escrow.
      security:
      - token: []
      tags:
      - Escrow
      parameters:
      - name: escrow
        description: GUID of escrow
        in: query
        required: true
        type: string
      - name: shipping
        description: Amount to add to shipping for merchant. Amount is in payment option currency. Example, If merchant requests 0.1 BTC for shipping and escrow is paid in BTC, enter 0.1 here.
        in: query
        required: true
        type: string
      - name: witness
        description: Witness alias name that will sign for web-of-trust notarization of this transaction.
        in: query
        required: false
        type: string        
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /escrownew:
    x-swagger-router-controller: rpc
    post:
      operationId: escrownew
      description: Create new arbitrated Syscoin escrow.
      security:
      - token: []
      tags:
      - Escrow
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/EscrowNewRequest"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /escrowrefund:
    x-swagger-router-controller: rpc
    post:
      operationId: escrowrefund
      description: Refunds escrow funds back to buyer, buyer needs to sign the output transaction and send to the network. User role represents either 'seller' or 'arbiter'. Enter in rawTx if this is an external payment refund.
      security:
      - token: []
      tags:
      - Escrow
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/EscrowRefundRequest"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /escrowrelease:
    x-swagger-router-controller: rpc
    post:
      operationId: escrowrelease
      description: Releases escrow funds to seller, seller needs to sign the output transaction and send to the network. User role represents either 'buyer' or 'arbiter'. Enter in rawTx if this is an external payment release.
      security:
      - token: []
      tags:
      - Escrow
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/EscrowReleaseRequest"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"


  /getaccount: #deprecated- what is the replacement?
    x-swagger-router-controller: rpc
    get:
      operationId: getaccount
      description: DEPRECATED. Returns the account associated with the given address.
      security:
      - token: []
      tags:
      - General
      parameters:
      - name: syscoinaddress
        description: The syscoin address for account lookup.
        in: query
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getaccountaddress: #deprecated- what is the replacement?
    x-swagger-router-controller: rpc
    get:
      operationId: getaccountaddress
      description: DEPRECATED. Returns the current Syscoin address for receiving payments to this account.
      security:
      - token: []
      tags:
      - General
      parameters:
      - name: account
        description: The account name for the address. It can also be set to the empty string "" to represent the default account. The account does not need to exist, it will be created and a new address created  if there is no account by the given name.
        in: query
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getaddressbalance:
    x-swagger-router-controller: rpc
    get:
      operationId: getaddressbalance
      description: Returns the balance for addresses or aliases
      security:
      - token: []
      tags:
      - General
      parameters:
      - name: addresses
        in: query
        required: true
        type: array
        items:
          type: string
      responses:
        "200":
          description: Success
          schema:
            type: object
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /getaddressutxos:
    x-swagger-router-controller: rpc
    get:
      operationId: getaddressutxos
      description: Returns all unspent outputs for addresses or aliases
      security:
      - token: []
      tags:
      - General
      parameters:
      - name: addresses
        in: query
        required: true
        type: array
        items:
          type: string
      responses:
        "200":
          description: Success
          schema:
           type: array
           items:
            $ref: "#/definitions/GetAddressUTXOsEntry"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /getbalance:
    x-swagger-router-controller: rpc
    get:
      operationId: getbalance
      description: If account is not specified, returns the server's total available balance. If account is specified (DEPRECATED), returns the balance in the account. Note that the account "" is not the same as leaving the parameter out. The server total may be different to the balance in the default "" account.
      security:
      - token: []
      tags:
      - General
      parameters:
      - name: account
        in: query
        description: DEPRECATED. The selected account, or "*" for entire wallet. It may be the default account using "".
        required: false
        type: string
      - name: minconf
        in: query
        description: Only include transactions confirmed at least this many times.
        required: false
        type: number
      - name: addlockconf
        in: query
        description: Whether to add 5 confirmations to transactions locked via InstantSend
        required: false
        type: boolean          
      - name: includeWatchonly
        in: query
        description: Also include balance in watchonly addresses (see 'importaddress')
        required: false
        type: boolean
      responses:
        "200":
          description: Success
          schema:
            type: number
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getwalletbalance:
    x-swagger-router-controller: rpc
    get:
      operationId: getwalletbalance
      description: Returns wallet balance for all accounts. Does not include watch only accounts.
      security:
      - token: []
      tags:
      - General
      responses:
        "200":
          description: Success
          schema:
            type: number
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getnewaddress:
    x-swagger-router-controller: rpc
    post:
      operationId: getnewaddress
      description: Returns a new Syscoin address for receiving payments. If 'account' is specified (DEPRECATED), it is added to the address book so payments received with the address will be credited to 'account'.
      security:
      - token: []
      tags:
      - General
      parameters:
      - name: request
        in: body
        required: false
        schema:
          $ref: "#/definitions/GetNewAddressRequest"
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getreceivedbyaccount: #deprecated- what is the replacement?
    x-swagger-router-controller: rpc
    get:
      operationId: getreceivedbyaccount
      description: DEPRECATED. Returns the total amount received by addresses with <account> in transactions with at least [minconf] confirmations.
      security:
      - token: []
      tags:
      - General
      parameters:
      - name: account
        in: query
        description: The selected account, may be the default account using "".
        required: true
        type: string
      - name: minconf
        in: query
        description: Only include transactions confirmed at least this many times.
        required: false
        type: number
      - name: addlockconf
        in: query
        description: Whether to add 5 confirmations to transactions locked via InstantSend
        required: false
        type: boolean          
      responses:
        "200":
          description: Success
          schema:
            type: number
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getreceivedbyaddress:
    x-swagger-router-controller: rpc
    get:
      operationId: getreceivedbyaddress
      description: Returns the total amount received by the given syscoinaddress in transactions with at least minconf confirmations.
      security:
      - token: []
      tags:
      - General
      parameters:
      - name: syscoinaddress
        in: query
        description: The syscoin address for transactions.
        required: true
        type: string
      - name: minconf
        in: query
        description: Only include transactions confirmed at least this many times.
        required: false
        type: number
      - name: addlockconf
        in: query
        description: Whether to add 5 confirmations to transactions locked via InstantSend
        required: false
        type: boolean          
      responses:
        "200":
          description: Success
          schema:
            type: number
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /gettransaction:
    x-swagger-router-controller: rpc
    get:
      operationId: gettransaction
      description: Get detailed information about in-wallet transaction <txid>
      security:
      - token: []
      tags:
      - General
      parameters:
      - name: txid
        in: query
        description: The transaction id
        required: true
        type: string
      - name: includeWatchonly
        in: query
        description: Whether to include watchonly addresses in balance calculation and details[]
        required: false
        type: boolean
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Transaction"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getunconfirmedbalance:
    x-swagger-router-controller: rpc
    get:
      operationId: getunconfirmedbalance
      description: Returns the server's total unconfirmed balance
      security:
      - token: []
      tags:
      - General
      responses:
        "200":
          description: Success
          schema:
            type: number
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"


  /getwalletinfo:
    x-swagger-router-controller: rpc
    get:
      operationId: getwalletinfo
      description: Returns an object containing various wallet state info.
      security:
      - token: []
      tags:
      - General
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/WalletInfo"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"


  /importaddress:
    x-swagger-router-controller: rpc
    get:
      operationId: importaddress
      description: Adds a script (in hex) or address that can be watched as if it were in your wallet but cannot be used to spend.
      security:
      - token: []
      tags:
      - General
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/ImportAddressRequest"
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /importprivkey:
    x-swagger-router-controller: rpc
    get:
      operationId: importprivkey
      description: Adds a private key (as returned by dumpprivkey) to your wallet.
      security:
      - token: []
      tags:
      - General
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/ImportPrivKeyRequest"
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"


  /importpubkey:
    x-swagger-router-controller: rpc
    get:
      operationId: importpubkey
      description: Adds a public key (in hex) that can be watched as if it were in your wallet but cannot be used to spend.
      security:
      - token: []
      tags:
      - General
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/ImportPubKeyRequest"
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /importwallet:
    x-swagger-router-controller: rpc
    get:
      operationId: importwallet
      description: Imports keys from a wallet dump file (see dumpwallet).
      security:
      - token: []
      tags:
      - General
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/ImportWalletRequest"
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /listaccounts:
    x-swagger-router-controller: rpc
    get:
      operationId: listaccounts
      description: DEPRECATED. Returns Object that has account names as keys, account balances as values.
      security:
      - token: []
      tags:
      - General
      parameters:
      - name: minconf
        in: query
        description: Only include transactions with at least this many confirmations
        required: false
        type: number
      - name: addlockconf
        in: query
        description: Whether to add 5 confirmations to transactions locked via InstantSend
        required: false
        type: boolean          
      - name: includeWatchonly
        in: query
        description: Include balances in watchonly addresses (see 'importaddress')
        required: false
        type: boolean
      responses:
        "200":
          description: Success
          schema:
            type: object #object with accounts as keys and totals as values
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /listaddressgroupings:
    x-swagger-router-controller: rpc
    get:
      operationId: listaddressgroupings
      description: Lists groups of addresses which have had their common ownership made public by common use as inputs or as the resulting change in past transactions
      security:
      - token: []
      tags:
      - General
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: array
              items:
                $ref: "#/definitions/AddressGrouping"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /listreceivedbyaccount: #deprecated- what is the replacement?
    x-swagger-router-controller: rpc
    get:
      operationId: listreceivedbyaccount
      description: DEPRECATED. List balances by account.
      security:
      - token: []
      tags:
      - General
      parameters:
      - name: minconf
        in: query
        description: Only include transactions confirmed at least this many times.
        required: false
        type: number
      - name: addlockconf
        in: query
        description: Whether to add 5 confirmations to transactions locked via InstantSend
        required: false
        type: boolean          
      - name: includeempty
        in: query
        description: Whether to include accounts that haven't received any payments.
        required: false
        type: boolean
      - name: includeWatchonly
        in: query
        description: Whether to include watchonly addresses (see 'importaddress').
        required: false
        type: boolean
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Account"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /listreceivedbyaddress:
    x-swagger-router-controller: rpc
    get:
      operationId: listreceivedbyaddress
      description: List balances by receiving address.
      security:
      - token: []
      tags:
      - General
      parameters:
      - name: minconf
        in: query
        description: Only include transactions confirmed at least this many times.
        required: false
        type: number
      - name: addlockconf
        in: query
        description: Whether to add 5 confirmations to transactions locked via InstantSend
        required: false
        type: boolean          
      - name: includeempty
        in: query
        description: Whether to include accounts that haven't received any payments.
        required: false
        type: boolean
      - name: includeWatchonly
        in: query
        description: Whether to include watchonly addresses (see 'importaddress').
        required: false
        type: boolean
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Account"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /listsinceblock:
    x-swagger-router-controller: rpc
    get:
      operationId: listsinceblock
      description: Get all transactions in blocks since block [blockhash], or all transactions if omitted
      security:
      - token: []
      tags:
      - General
      parameters:
      - name: blockhash
        in: query
        description: The block hash to list transactions since
        required: false
        type: string
      - name: includeWatchonly
        in: query
        description: Whether to include watchonly addresses (see 'importaddress').
        required: false
        type: boolean
      - name: target-confirmations
        in: query
        required: false
        type: number
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/ListSinceBlockResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /listtransactions:
    x-swagger-router-controller: rpc
    get:
      operationId: listtransactions
      description: Returns up to 'count' most recent transactions skipping the first 'from' transactions for account 'account'.
      security:
      - token: []
      tags:
      - General
      parameters:
      - name: account
        in: query
        description: DEPRECATED. The account name. Should be "*".
        required: false
        type: string
      - name: count
        in: query
        description: The number of transactions to return
        required: false
        type: number
      - name: from
        in: query
        description: The number of transactions to skip
        required: false
        type: number
      - name: includeWatchonly
        in: query
        description: Include transactions to watchonly addresses (see 'importaddress')
        type: boolean
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/TransactionListEntry"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /offerinfo:
    x-swagger-router-controller: rpc
    get:
      operationId: offerinfo
      description: Show values of an offer.
      security:
      - token: []
      tags:
      - Offers
      parameters:
      - name: guid
        in: query
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Offer"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /offerhistory:
    x-swagger-router-controller: rpc
    get:
      operationId: offerhistory
      description: List all stored values of an offer.
      security:
      - token: []
      tags:
      - Offers
      parameters:
      - name: query
        in: query
        description: Generic filter query to pass into syscoinquery
        required: true
        type: string
      - name: count
        in: query
        description: The number of results to return
        required: false
        type: string
      - name: from
        in: query
        description: Show results from this GUID [from], empty means first
        required: false
        type: string        
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/OfferHistoryIndex"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
       
  /offerfilter:
    x-swagger-router-controller: rpc
    get:
      operationId: offerfilter
      description: scan and filter offers
      security:
      - token: []
      tags:
      - Offers
      parameters:
      - name: query
        in: query
        description: Generic filter query to pass into syscoinquery
        required: true
        type: string
      - name: count
        in: query
        description: The number of results to return
        required: false
        type: string
      - name: from
        in: query
        description: Show results from this GUID [from], empty means first
        required: false
        type: string         
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/OfferIndex"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      
  /offerlink:
    x-swagger-router-controller: rpc
    post:
      operationId: offerlink
      description: Requires wallet passphrase to be set with walletpassphrase call.
      security:
      - token: []
      tags:
      - Offers
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/OfferLinkRequest"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /offernew:
    x-swagger-router-controller: rpc
    post:
      operationId: offernew
      description: Create a new offer on the Syscoin decentralized marketplace. Requires wallet passphrase to be set with walletpassphrase call.
      security:
      - token: []
      tags:
      - Offers
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/OfferNewRequest"
      responses:
        "200":
          description: Success; Returns an array of 2 elements- tx id and offer GUID.
          schema:
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /offerupdate:
    x-swagger-router-controller: rpc
    post:
      operationId: offerupdate
      description: Perform an update on an offer you control. Requires wallet passphrase to be set with walletpassphrase call.
      security:
      - token: []
      tags:
      - Offers
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/OfferUpdateRequest"
      responses:
        "200":
          description: Success; Returns an array with 1 element- tx id.
          schema:
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /sendfrom:
    x-swagger-router-controller: rpc
    post:
      operationId: sendfrom
      description: DEPRECATED (use sendtoaddress). Sent an amount from an account to a syscoin address. The amount is a real and is rounded to the nearest 0.00000001. Requires wallet passphrase to be set with walletpassphrase call.
      security:
      - token: []
      tags:
      - General
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/SendFromRequest"
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /sendmany:
    x-swagger-router-controller: rpc
    post:
      operationId: sendmany
      description: Send multiple times. Amounts are double-precision floating point numbers. Requires wallet passphrase to be set with walletpassphrase call.
      security:
      - token: []
      tags:
      - General
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/SendManyRequest"
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /sendtoaddress:
    x-swagger-router-controller: rpc
    post:
      operationId: sendtoaddress
      description: Send an amount to a given address. The amount is a real and is rounded to the nearest 0.00000001. Requires wallet passphrase to be set with walletpassphrase call.
      security:
      - token: []
      tags:
      - General
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/SendToAddressRequest"
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /signmessage:
    x-swagger-router-controller: rpc
    post:
      operationId: signmessage
      description: Sign a message with the private key of an address. Requires wallet passphrase to be set with walletpassphrase call.
      security:
      - token: []
      tags:
      - General
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/SignMessageRequest"
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /walletlock:
    x-swagger-router-controller: rpc
    post:
      operationId: walletlock
      description: Removes the wallet encryption key from memory, locking the wallet. After calling this method, you will need to call walletpassphrase again before being able to call any methods which require the wallet to be unlocked.
      consumes:
        - application/json
        - application/octet-stream
      security:
      - token: []
      tags:
      - General
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /walletpassphrase:
    x-swagger-router-controller: rpc
    post:
      operationId: walletpassphrase
      description: Stores the wallet decryption key in memory for 'timeout' seconds. This is needed prior to performing transactions related to private keys such as sending syscoins
      security:
      - token: []
      tags:
      - General
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/WalletPassphraseRequest"
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /walletpassphrasechange:
    x-swagger-router-controller: rpc
    post:
      operationId: walletpassphrasechange
      description: Changes the wallet passphrase from 'oldpassphrase' to 'newpassphrase'.
      security:
      - token: []
      tags:
      - General
      parameters:
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/WalletPassphraseChangeRequest"
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

# complex objects have schema definitions
definitions:
  Info:
    required:
    - version
    - protocolversion
    - walletversion
    - balance
    - blocks
    - timeoffset
    - connections
    - proxy
    - difficulty
    - testnet
    - keypoololdest
    - keypoolsize
    - unlocked_until
    - paytxfee
    - relayfee
    - errors
    properties:
      version:
        description: the server version
        type: number
      protocolversion:
        description: the protocol version
        type: number
      walletversion:
        description: the wallet version
        type: number
      balance:
        description: the total syscoin balance of the wallet
        type: number
      blocks:
        description: the current number of blocks processed in the server
        type: number
      timeoffset:
        description: the time offset
        type: number
      connections:
        description: the number of connections
        type: number
      proxy:
        description: the proxy used by the server
        type: string
      difficulty:
        description: the current difficulty
        type: number
      testnet:
        description: if the server is using testnet or not
        type: boolean
      keypoololdest:
        description: the timestamp (seconds since GMT epoch) of the oldest pre-generated key in the key pool
        type: number
      keypoolsize:
        description: how many new keys are pre-generated
        type: number
      unlocked_until:
        description: the timestamp in seconds since epoch (midnight Jan 1 1970 GMT) that the wallet is unlocked for transfers, or 0 if the wallet is locked
        type: number
      paytxfee:
        description: the transaction fee set in SYS/kB
        type: number
      relayfee:
        description: minimum relay fee for non-free transactions in SYS/kB
        type: number
      errors:
        description: any error messages
        type: string
  MiningInfo:
    required:
    - blocks
    - currentblocksize
    - currentblocktx
    - difficulty
    - errors
    - genproclimit
    - pooledtx
    - testnet
    - chain
    - generate
    properties:
      blocks:
        description: The current block
        type: number
      currentblocksize:
        description: The last block size
        type: number
      currentblocktx:
        description: The last block transaction
        type: number
      difficulty:
        description: The current difficulty
        type: number
      errors:
        description: Current errors
        type: string
      genproclimit:
        description: The processor limit for generation. -1 if no generation.
        type: number
      networkhashps:
        description: Current network hashrate in kbs
        type: number
      pooledtx:
        description: The size of the mem pool
        type: number
      testnet:
        description: If using testnet or not
        type: boolean
      chain:
        description: current network name as defined in BIP70 (main, test, regtest)
        type: string
      generate:
        description: If the generation is on or off (see getgenerate or setgenerate calls)
        type: boolean
  PeerInfoResponse:
    type: array
    items:
      $ref: "#/definitions/PeerInfo"
  PeerInfo:
    required:
    - id
    - addr
    - addrlocal
    - services
    - relaytxes
    - lastsend
    - lastrecv
    - bytessent
    - bytesrecv
    - conntime
    - timeoffset
    - pingtime
    - minping
    - version
    - subver
    - inbound
    - startingheight
    - banscore
    - synced_headers
    - synced_blocks
    - inflight
    - whitelisted
    - bytessent_per_msg
    - bytesrecv_per_msg
    properties:
      id:
        description: Peer index
        type: number
      addr:
        description: The ip address and port of the peer
        type: string
      addrlocal:
        description: local address
        type: string
      services:
        description: The services offered
        type: string
      relaytxes:
        description: Whether peer has asked us to relay transactions to it
        type: boolean
      lastsend:
        description: The time in seconds since epoch (Jan 1 1970 GMT) of the last send
        type: number
      lastrecv:
        description: The time in seconds since epoch (Jan 1 1970 GMT) of the last receive
        type: number
      bytessent:
        description: The total bytes sent
        type: number
      bytesrecv:
        description: The total bytes received
        type: number
      conntime:
        description: The connection time in seconds since epoch (Jan 1 1970 GMT)
        type: number
      timeoffset:
        description: The time offset in seconds
        type: number
      pingtime:
        description: ping time
        type: number
      minping:
        description: minimum observed ping time
        type: number
      version:
        description: The peer version, such as 7001
        type: number
      subver:
        description: The string version
        type: string
      inbound:
        description: Inbound (true) or Outbound (false)
        type: boolean
      startingheight:
        description: The starting height (block) of the peer
        type: number
      banscore:
        description: The ban score
        type: number
      synced_headers:
        description: The last header we have in common with this peer
        type: number
      synced_blocks:
        description: The last block we have in common with this peer
        type: number
      inflight:
        description: The heights of blocks we're currently asking from this peer
        type: array
        items:
          type: number
      whitelisted:
        description: If this peer is whitelisted
        type: boolean
      bytessent_per_msg:
        $ref: "#/definitions/ByteMessageInfo"
      bytesrecv_per_msg:
        $ref: "#/definitions/ByteMessageInfo"
  ByteMessageInfo:
    required:
    - addr
    - getheaders
    - headers
    - inv
    - ping
    - pong
    - sendheaders
    - verack
    - version
    properties:
      addr:
        type: number
      block:
        type: number
      getaddr:
        type: number
      getdata:
        type: number
      getheaders:
        type: number
      headers:
        type: number
      inv:
        type: number
      ping:
        type: number
      pong:
        type: number
      sendheaders:
        type: number
      tx:
        type: number
      verack:
        type: number
      version:
        type: number
  ValidateAddressResponse:
    properties:
      isvalid:
        description: If the address is valid or not. If not, this is the only property returned.
        type: boolean
      address:
        description: The syscoin address validated
        type: string
      zaddress:
        description: The zcash t-addr associated with this syscoin address validated
        type: string    
      btcaddress:
        description: The bitcoin address associated with this syscoin address validated
        type: string  
      alias:
        description: The syscoin alias associated with this syscoin address validated
        type: string         
      ismine:
        description: If the address is yours or not
        type: boolean
      iswatchonly:
        description: If the address is watchonly
        type: boolean
      isscript:
        description: If the key is a script
        type: boolean
      pubkey:
        description: The hex value of the raw public key
        type: string
      iscompressed:
        description: If the address is compressed
        type: boolean
      account:
        description: DEPRECATED. The account associated with the address, "" is the default account
        type: string
  ErrorResponse:
    required:
    - message
    properties:
      message:
        type: string
  Alias:
    discriminator: _id
    required:
      - _id
    properties:
      _id:
        type: string
      encryption_privatekey:
        type: string
      encryption_publickey:
        type: string
      publicvalue:
        type: string
      txid:
        type: string
      address:
        type: string
      time:
        type: number
      acceptcerttransfers:
        type: boolean
      expires_on:
        type: number
      expired:
        type: boolean        
  AliasIndex:
    discriminator: _id
    required:
      - _id
    properties:
      _id:
        type: string
      address:
        type: string
  AliasHistoryIndex:
    discriminator: _id
    required:
      - _id
    properties:
      _id:
        type: string
      encryption_privatekey:
        type: string
      encryption_publickey:
        type: string
      publicvalue:
        type: string     
      alias:
        type: string
      time:
        type: number        
      address:
        type: string
      acceptcerttransfers:
        type: boolean
      op:
        type: string
  AliasTxHistoryIndex:
    discriminator: _id
    required:
      - _id
    properties:
      _id:
        type: string
      alias:
        type: string
      type:
        type: string
      guid:
        type: string     
      value:
        type: string
      time:
        type: number        
  Cert:
    properties:
      _id:
        type: string
      txid:
        type: string
      height:
        type: number
      title:
        type: string
      time:
        type: number
      publicvalue:
        type: string
      category:
        type: string
      alias:
        type: string
      access_flags:
        type: number
      expires_on:
        type: number
      expired:
        type: boolean
  CertIndex:
    properties:
      _id:
        type: string
      title:
        type: string
      height:
        type: number
      category:
        type: string
      alias:
        type: string
  CertHistoryIndex:
    properties:
      _id:
        type: string
      cert:
        type: string 
      height:
        type: number
      time:
        type: number
      title:
        type: string
      publicvalue:
        type: string        
      category:
        type: string
      alias:
        type: string
      access_flags:
        type: number        
      op:
        type: string        
  Escrow:
    properties:
      _id:
        type: string
      time:
        type: number
      seller:
        type: string
      arbiter:
        type: string
      buyer:
        type: string
      witness:
        type: string
      offer:
        type: string
      offer_price:
        type: string
      reseller:
        type: string
      quantity:
        type: number
      total_with_fee:
        type: number
      total_without_fee:
        type: number
      bid_in_offer_currency_per_unit:
        type: number
      total_or_bid_in_payment_option_per_unit:
        type: number
      buynow:
        type: boolean
      commission:
        type: number
      arbiterfee:
        type: number
      networkfee:
        type: number
      witnessfee:
        type: number
      shipping:
        type: number
      deposit:
        type: number
      currency:
        type: string
      exttxid:
        type: string
      escrowaddress:
        type: string
      paymentoption:
        type: string
      redeem_txid:
        type: string
      redeem_script:
        type: string
      txid:
        type: string
      height:
        type: number
      role:
        type: string
      expired:
        type: boolean        
      status:
        type: string
  EscrowIndex:
    properties:
      _id:
        type: string
      offer:
        type: string        
      escrow:
        type: string
      height:
        type: number        
      seller:
        type: string
      arbiter:
        type: string
      buyer:
        type: string
  EscrowBidIndex:
    properties:
      _id:
        type: string
      offer:
        type: string        
      escrow:
        type: string
      height:
        type: number        
      bidder:
        type: string
      bid_in_offer_currency_per_unit:
        type: string
      bid_in_payment_option_per_unit:
        type: string        
      witness:
        type: string 
      status:
        type: string
  EscrowFeedbackIndex:
    properties:
      _id:
        type: string
      offer:
        type: string        
      escrow:
        type: string
      txid:
        type: string
      time:
        type: number         
      rating:
        type: number
      feedbackuserfrom:
        type: string
      feedbackuserto:
        type: string        
      feedback:
        type: string 
  EscrowRefundRequest:
    required:
    - escrowguid
    - userrole
    - rawtx
    properties:
      escrowguid:
        type: string
      userrole:
        type: string
      rawtx:
        type: string
      witness:
        type: string
  EscrowReleaseRequest:
    required:
    - escrowguid
    - userrole
    - rawtx
    properties:
      escrowguid:
        type: string
      userrole:
        type: string
      rawtx:
        type: string
      witness:
        type: string        
  Transaction:
    properties:
      amount:
        description: The transaction amount in SYS
        type: string
      instantlock:
        description:  Current transaction lock state
        type: boolean        
      confirmations:
        description: The number of confirmations
        type: number
      blockhash:
        description: The block hash
        type: string
      blockindex:
        description: The block index
        type: number
      blocktime:
        description: The time in seconds since epoch (1 Jan 1970 GMT)
        type: number
      txid:
        description: The transaction id.
        type: string
      time:
        description: The transaction time in seconds since epoch (1 Jan 1970 GMT)
        type: number
      timereceived:
        description: The time received in seconds since epoch (1 Jan 1970 GMT)
        type: number
      bip125-replaceable:
        description: Whether this transaction could be replaced due to BIP125 (replace-by-fee)
        type: string        
      details:
        type: array
        items:
          $ref: "#/definitions/TransactionDetailEntry"
      hex:
        description: Raw data for transaction
        type: string
  TransactionDetailEntry:
    properties:
      account:
        description: DEPRECATED. The account name involved in the transaction, can be "" for the default account.
        type: string
      address:
        description: The syscoin address involved in the transaction
        type: string
      category:
        description: The category, either 'send' or 'receive'
        type: string
      amount:
        description: The amount in SYS
        type: number
      label:
        description: A comment for the address/transaction, if any
        type: string
      vout:
        description: the vout value
        type: number
  WalletInfo:
    properties:
      walletversion:
        description: the wallet version
        type: number
      balance:
        description: the total confirmed balance of the wallet in SYS
        type: number
      unconfirmed_balance:
        description: the total unconfirmed balance of the wallet in SYS
        type: number
      immature_balance:
        description: the total immature balance of the wallet in SYS
        type: number
      txcount:
        description: the total number of transactions in the wallet
        type: number
      keypoololdest:
        description: the timestamp (seconds since GMT epoch) of the oldest pre-generated key in the key pool
        type: number
      keypoolsize:
        description: how many new keys are pre-generated
        type: number
      keypoolsize_hd_internal:
        description: how many new keys are pre-generated for internal use (used for change outputs, only appears if the wallet is using this feature, otherwise external keys are used)
        type: number        
      unlocked_until:
        description: the timestamp in seconds since epoch (midnight Jan 1 1970 GMT) that the wallet is unlocked for transfers, or 0 if the wallet is locked
        type: number
      paytxfee:
        description: the transaction fee configuration, set in SYS/kB
        type: number
      hdchainid:
        description: the ID of the HD chain
        type: string  
  AddressGrouping:
    properties:
      syscoinaddress:
        description: The syscoin address
        type: string
      amount:
        description: The amount in SYS
        type: number
      account:
        description: (optional) The account (DEPRECATED)
        type: string
  Account:
    properties:
      involvesWatchonly:
        description: Only returned if imported addresses were involved in transaction
        type: boolean
      account:
        description: The account name of the receiving account
        type: string
      amount:
        description: The total amount received by addresses with this account
        type: number
      confirmations:
        description: The number of confirmations of the most recent transaction included
        type: number
      label:
        description: A comment for the address/transaction, if any
        type: string
  ListSinceBlockResponse:
    properties:
      transactions:
        type: array
        items:
          $ref: "#/definitions/SinceBlockTransactionEntry"
      lastblock:
        description: The hash of the last block
        type: string
  SinceBlockTransactionEntry:
    properties:
      account:
        description: DEPRECATED. The account name associated with the transaction. Will be "" for the default account.
        type: string
      address:
        description: The syscoin address of the transaction. Not present for move transactions (category = move).
        type: string
      category:
        description: The transaction category. 'send' has negative amounts, 'receive' has positive amounts.
        type: string
      amount:
        description: The amount in SYS. This is negative for the 'send' category, and for the 'move' category for moves outbound. It is positive for the 'receive' category, and for the 'move' category for inbound funds.
        type: number
      vout:
        description: the vout value
        type: number
      fee:
        description: The amount of the fee in SYS. This is negative and only available for the 'send' category of transactions.
        type: number
      instantlock:
        description: Current transaction lock state. Available for 'send' and 'receive' category of transactions.
        type: boolean           
      confirmations:
        description: The number of confirmations for the transaction. Available for 'send' and 'receive' category of transactions.
        type: number
      blockhash:
        description: The block hash containing the transaction. Available for 'send' and 'receive' category of transactions.
        type: string
      blockindex:
        description: The block index containing the transaction. Available for 'send' and 'receive' category of transactions.
        type: number
      blocktime:
        description: The block time in seconds since epoch (1 Jan 1970 GMT).
        type: number
      txid:
        description: The transaction id. Available for 'send' and 'receive' category of transactions.
        type: string
      time:
        description: The transaction time in seconds since epoch (Jan 1 1970 GMT).
        type: number
      timereceived:
        description: The time received in seconds since epoch (Jan 1 1970 GMT). Available for 'send' and 'receive' category of transactions.
        type: number
      comment:
        description: If a comment is associated with the transaction.
        type: string
      label:
        description: A comment for the address/transaction, if any
        type: string
      to:
        description: If a comment to is associated with the transaction.
        type: string
  TransactionListEntry:
    properties:
      account:
        description: DEPRECATED. The account name associated with the transaction. It will be "" for the default account.
        type: string
      address:
        description: The syscoin address of the transaction. Not present for move transactions (category = move).
        type: string
      category:
        description: The transaction category. 'move' is a local (off blockchain) transaction between accounts, and not associated with an address, transaction id or block. 'send' and 'receive' transactions are associated with an address, transaction id and block details
        type: string
      amount:
        description: The amount in SYS. This is negative for the 'send' category, and for the 'move' category for moves outbound. It is positive for the 'receive' category, and for the 'move' category for inbound funds.
        type: number
      vout:
        description: the vout value
        type: number
      fee:
        description: The amount of the fee in SYS. This is negative and only available for the 'send' category of transactions.
        type: number
      instantlock:
        description: Current transaction lock state. Available for 'send' and 'receive' category of transactions.
        type: boolean        
      confirmations:
        description: The number of confirmations for the transaction. Available for 'send' and'receive' category of transactions. Negative confirmations indicate the transation conflicts with the block chain
        type: number
      trusted:
        description: Whether we consider the outputs of this unconfirmed transaction safe to spend.
        type: boolean
      blockhash:
        description: The block hash containing the transaction. Available for 'send' and 'receive' category of transactions.
        type: string
      blockindex:
        description: The block index containing the transaction. Available for 'send' and 'receive' category of transactions.
        type: string
      blocktime:
        description: The block time in seconds since epoch (1 Jan 1970 GMT).
        type: number
      txid:
        description: The transaction id. Available for 'send' and 'receive' category of transactions.
        type: string
      time:
        description: The transaction time in seconds since epoch (midnight Jan 1 1970 GMT).
        type: number
      timereceived:
        description: The time received in seconds since epoch (midnight Jan 1 1970 GMT). Available for 'send' and 'receive' category of transactions.
        type: number
      comment:
        description: If a comment is associated with the transaction.
        type: string
      label:
        description:  A comment for the address/transaction, if any
        type: string
      otheraccount:
        description: For the 'move' category of transactions, the account the funds came from (for receiving funds, positive amounts), or went to (for sending funds, negative amounts).
        type: string
      bip125-replaceable:
        description: Whether this transaction could be replaced due to BIP125 (replace-by-fee)
        type: string        
  Offer:
    discriminator: _id
    required:
    - _id
    properties:
      _id:
        type: string
      cert:
        type: string
      txid:
        type: string
      expires_on:
        type: number
      expired:
        type: boolean
      height:
        type: number
      category:
        type: string
      title:
        type: string
      currency:
        type: string
      price:
        type: number
      commission:
        type: number
      offerlink_guid:
        type: string
      offerlink_seller:
        type: string
      paymentoptions:
        type: number  
      offer_units:
        type: number        
      quantity:
        type: number
      offers_sold:
        type: number        
      private:
        type: boolean        
      description:
        type: string
      alias:
        type: string
      address:
        type: string
      offertype:
        type: string
      auction_expires_on:
        type: number
      auction_reserve_price:
        type: number
      auction_require_witness:
        type: boolean
      auction_deposit:
        type: number
  OfferIndex:
    discriminator: _id
    required:
    - _id
    properties:
      _id:
        type: string
      cert:
        type: string
      height:
        type: number
      category:
        type: string
      title:
        type: string
      currency:
        type: string
      price:
        type: number
      paymentoptions:
        type: number 
      offer_units:
        type: number        
      quantity:
        type: number        
      private:
        type: boolean
      alias:
        type: string
      offertype:
        type: string
      auction_expires_on:
        type: number
      auction_reserve_price:
        type: number
  OfferHistoryIndex:
    discriminator: _id
    required:
    - _id
    properties:
      _id:
        type: string
      offer:
        type: string        
      cert:
        type: string
      height:
        type: number
      category:
        type: string
      title:
        type: string
      currency:
        type: string
      price:
        type: number
      commission:
        type: number
      paymentoptions:
        type: number  
      offer_units:
        type: number        
      quantity:
        type: number
      private:
        type: boolean        
      description:
        type: string
      alias:
        type: string
      offertype:
        type: string
      auction_expires_on:
        type: number
      auction_reserve_price:
        type: number
      auction_require_witness:
        type: boolean
      auction_deposit:
        type: number  
      op:
        type: string          
  AddMultisigAddressRequest:
    required:
    - nrequired
    - keysobject
    properties:
      nrequired:
        description: The number of required signatures out of the n keys or addresses.
        type: number
      keysobject:
        description: A json array of syscoin addresses or hex-encoded public keys. [ "address"  (string) syscoin address or hex-encoded public key ... ]
        type: string
      account:
        description: DEPRECATED. An account to assign the addresses to.
        type: string
  AliasNewRequest:
    required:
    - aliasname
    properties:
      aliasname:
        description: Alias name
        type: string
      publicvalue:
        description: Alias public profile data, 512 characters max.
        type: string
      accepttransfers:
        description: set to No if this alias should not allow a certificate to be transferred to it. Defaults to Yes.
        type: string
      expire_timestamp:
        description: Time in seconds. Future time when to expire alias. It is exponentially more expensive per year, calculation is FEERATE*(2.88^years). FEERATE is the dynamic satoshi per byte fee set in the rate peg alias used for this alias. Defaults to 1 year.
        type: string
      address:
        description: Address for this alias.
        type: string
      encryption_privatekey:
        description: Encrypted private key used for encryption/decryption of private data related to this alias. Should be encrypted to publickey.
        type: string  
      encryption_publickey:
        description: Public key used for encryption/decryption of private data related to this alias.
        type: string 
      witness:
        description: Witness alias name that will sign for web-of-trust notarization of this transaction.
        type: string        
  AliasUpdateWhitelistRequest:
    required:
    - owneralias
    - entries
    properties:
      owneralias:
        type: string
        description: owner alias controlling this whitelist.
      entries:
        description: "
           \"entries\"       (string) A json array of whitelist entries to add/remove/update
           [
             \"alias\"     (string) Alias that you want to add to the affiliate whitelist. Can be * to represent that the offers owned by owner alias can be resold by anybody
             \"discount_percentage\"     (number) A discount percentage associated with this alias. The reseller can sell your offer at this discount, not accounting for any commissions he/she may set in his own reselling offer. 0 to 99.
             ,...
           ]"
        type: array
        items:
          $ref: "#/definitions/WhitelistEntry"
      witness:
        description: Witness alias name that will sign for web-of-trust notarization of this transaction.
        type: string
  AliasUpdateRequest:
    required:
    - aliasname
    properties:
      aliasname:
        description: Alias name
        type: string
      publicvalue:
        description: Alias public profile data, 512 characters max.
        type: string
      address:
        description: Address of alias.
        type: string  
      accepttransfers:
        description: set to false if this alias should not allow a certificate to be transferred to it. Defaults to true.
        type: string
      expire_timestamp:
        description: Time in seconds. Future time when to expire alias. It is exponentially more expensive per year, calculation is 2.88^years. FEERATE is the dynamic satoshi per byte fee set in the rate peg alias used for this alias. Defaults to 1 year.
        type: string
      encryption_privatekey:
        description: Encrypted private key used for encryption/decryption of private data related to this alias. If transferring, the key should be encrypted to alias_pubkey.
        type: string
      encryption_publickey:
        description: Public key used for encryption/decryption of private data related to this alias. Useful if you are changing pub/priv keypair for encryption on this alias.
        type: string
      witness:
        description: Witness alias name that will sign for web-of-trust notarization of this transaction.
        type: string   
  CertNewRequest:
    required:
    - alias
    - title
    - public
    properties:
      alias:
        description: An alias you own.
        type: string
      title:
        description: title, 256 characters max.
        type: string
      public:
        description: public data, 512 characters max.
        type: string
      category:
        description: category, 256 characters max. Defaults to certificates;
        type: string
      witness:
        description: Witness alias name that will sign for web-of-trust notarization of this transaction.
        type: string        
  CertTransferRequest:
    required:
    - certkey
    - alias
    properties:
      certkey:
        description: Certificate guidkey.
        type: string
      alias:
        description: Alias to transfer this certificate to.
        type: string
      public:
        description: Public certificate data, 512 characters max.
        type: string       
      accessflags:
        description: Set new access flags for new owner for this certificate, 0 for read-only, 1 for edit, 2 for edit and transfer access.
        type: string
      witness:
        description: Witness alias name that will sign for web-of-trust notarization of this transaction.
        type: string         
  CertUpdateRequest:
    required:
    - guid
    properties:
      guid:
        description: Certificate guidkey.
        type: string
      title:
        description: Certificate title, 256 characters max.
        type: string
      public:
        description: Public certificate data, 512 characters max.
        type: string
      category:
        description: Category, 256 characters max. Defaults to certificates.
        type: string
      witness:
        description: Witness alias name that will sign for web-of-trust notarization of this transaction.
        type: string
  SendRawTransactionRequest:        
    required:
    - hexstring
    properties:
      hexstring:
        type: string
      allowhighfees:
        type: boolean
      instantsend:
        type: boolean
  EscrowCreateRawTransactionRequest:
    required:
    - type
    - escrowguid
    - inputs
    properties:
      type:
        type: string
      escrowguid:
        type: string
      inputs:
        type: array
        items:
          $ref: "#/definitions/GetAddressUTXOsEntry"      
      role:
        type: string
  EscrowCompleteRefundRequest:
    required:
    - escrowguid
    - rawtx
    properties:
      escrowguid:
        type: string
      rawtx:
        type: string
      witness:
        type: string
  EscrowCompleteReleaseRequest:
    required:
    - escrowguid
    - rawtx
    properties:
      escrowguid:
        type: string
      rawtx:
        type: string
      witness:
        type: string
  EscrowBidRequest:
    required:
    - alias
    - escrow
    - bid_in_payment_option
    - bid_in_offer_currency
    properties:
      alias:
        description: An alias you own.
        type: string  
      escrow:
        description: Escrow GUID to place bid on.
        type: string
      bid_in_payment_option:
        description: Amount to bid on offer through escrow. Bid is in payment option currency. Example, If offer is paid in SYS and you have deposited 10 SYS in escrow and would like to increase your total bid to 14 SYS enter 14 here. It is per unit of purchase.
        type: string
      bid_in_offer_currency:
        description: Converted value of bid_in_payment_option from paymentOption currency to offer currency. For example, offer is priced in USD and purchased in BTC, this field will be the BTC/USD value. It is per unit of purchase.
        type: string
      witness:
        description: Witness alias name that will sign for web-of-trust notarization of this transaction.
        type: string
  EscrowNewRequest:
    required:
    - getamountandaddress
    - alias
    - arbiter
    - offer
    - quantity
    - buynow
    - total_in_payment_option
    properties:
      getamountandaddress:
        description: True or False. Get deposit and total escrow amount aswell as escrow address for funding. If buynow is false pass bid amount in bid_in_payment_option to get total needed to complete escrow. If buynow is true amount is calculated based on offer price and quantity.
        type: string
      alias:
        description: An alias you own.
        type: string  
      arbiter:
        description: Alias of arbiter.
        type: string        
      offer:
        description: GUID of offer that this escrow is managing.
        type: string
      quantity:
        description: Quantity of items to buy of offer.
        type: string
      buynow:
        description: Specify whether the escrow involves purchasing offer for the full offer price if set to true, or through a bidding auction if set to false. If buynow is false, an initial deposit may be used to secure a bid if required by the seller.
        type: string
      total_in_payment_option:
        description: Total amount of the offer price. Amount is in paymentOption currency. It is per unit of purchase.
        type: string
      shipping:
        description: Amount to add to shipping for merchant. Amount is in paymentOption currency. Example, If merchant requests 0.1 BTC for shipping and escrow is paid in BTC, enter 0.1 here. Default is 0. Buyer can also add shipping using escrowaddshipping upon merchant request.
        type: string
      networkfee:
        description: Network fee in satoshi per byte for the transaction. Generally the escrow transaction is about 400 bytes. Default is 25 for SYS or ZEC and 250 for BTC payments.
        type: string
      arbiterfee:
        description: Arbiter fee in fractional amount of the amount_in_payment_option value. For example 0.75% is 0.0075 and represents 0.0075*amount_in_payment_option satoshis paid to arbiter in the event arbiter is used to resolve a dispute. Default and minimum is 0.005.
        type: string
      witnessfee:
        description: Witness fee in fractional amount of the amount_in_payment_option value. For example 0.3% is 0.003 and represents 0.003*amount_in_payment_option satoshis paid to witness in the event witness signs off on an escrow through any of the following calls escrownew/escrowbid/escrowrelease/escrowrefund. Default is 0.
        type: string 
      exttx:
        description: External transaction ID if paid with another blockchain.
        type: string  
      paymentoption:
        description: If extTx is defined, specify a valid payment option used to make payment. Default is SYS.
        type: string
      bid_in_payment_option:
        description: Initial bid amount you are willing to pay escrow for this offer. Amount is in paymentOption currency. It is per unit of purchase. If buynow is set to true, this value is disregarded.
        type: string    
      bid_in_offer_currency:
        description: Converted value of bid_in_payment_option from paymentOption currency to offer currency. For example, offer is priced in USD and purchased in BTC, this field will be the BTC/USD value. If buynow is set to true, this value is disregarded.
        type: string    
      witness:
        description: Witness alias name that will sign for web-of-trust notarization of this transaction.
        type: string            
  AliasPayRequest:
    required:
    - alias
    - currency
    - amounts
    properties:
      alias:
        description: Alias you own to pay from
        type: string
      currency:
        description: Currency to pay from
        type: string        
      amounts:
        description: "A json object with aliases and amounts
    {
      \"address\":amount   (numeric or string) The syscoin alias is the key, the numeric amount (can be string) in SYS is the value
      ,...
    }"
        type: string
      minconf:
        description: Only use the balance confirmed at least this many times.
        type: number
      comment:
        description: A comment
        type: string
  GetNewAddressRequest:
    properties:
      account:
        description: DEPRECATED. The account name for the address to be linked to. If not provided, the default account "" is used. It can also be set to the empty string "" to represent the default account. The account does not need to exist, it will be created if there is no account by the given name.
        type: string
  ImportAddressRequest:
    required:
    - script
    properties:
      script:
        description: The hex-encoded script (or address)
        type: string
      label:
        description: An optional label
        type: string
      rescan:
        description: Rescan the wallet for transactions
        type: boolean
      p2sh:
        description: Add the P2SH version of the script as well
        type: boolean
  ImportPrivKeyRequest:
    required:
    - syscoinprivkey
    properties:
      syscoinprivkey:
        description: The private key (see dumpprivkey)
        type: string
      label:
        description: An optional label
        type: string
      rescan:
        description: Rescan the wallet for transactions
        type: boolean
  ImportPubKeyRequest:
    required:
    - pubkey
    properties:
      pubkey:
        description: The hex-encoded public key
        type: string
      label:
        description: An optional label
        type: string
      rescan:
        description: Rescan the wallet for transactions
        type: boolean
  ImportWalletRequest:
    required:
    - filename
    properties:
      filename:
        description: The wallet file
        type: string
  MoveRequest:
    required:
    - fromaccount
    - toaccount
    - amount
    properties:
      fromaccount:
        description: The name of the account to move funds from. May be the default account using "".
        type: string
      toaccount:
        description: The name of the account to move funds to. May be the default account using "".
        type: string
      amount:
        description: Quantity of SYS to move between accounts.
        type: number
      minconf:
        description: Only use funds with at least this many confirmations.
        type: string
      comment:
        description: An optional comment, stored in the wallet only.
        type: string
  OfferLinkRequest:
    required:
    - alias
    - guid
    - commission
    properties:
      alias:
        description: An alias you own.
        type: string
      guid:
        description: offer guid that you are linking to
        type: string
      commission:
        description: percentage of profit desired over original offer price, > 0, ie 5 for 5%
        type: string
      description:
        description: description, 512 characters max. Defaults to original description.
        type: string
  OfferNewRequest:
    required:
    - alias
    - category
    - title
    - quantity
    - price
    - description
    - currency
    properties:
      alias:
        description: An alias you own.
        type: string
      category:
        description: category, 256 characters max.
        type: string
      title:
        description: title, 256 characters max.
        type: string
      quantity:
        description: quantity, > 0 or -1 for infinite
        type: string
      price:
        description: price in <currency>, > 0
        type: string
      description:
        description: description, 512 characters max.
        type: string
      currency:
        description: The currency code that you want your offer to be in ie USD.
        type: string
      certguid:
        description: Set this to the guid of a certificate you wish to sell
        type: string
      paymentoptions:
        description: "'SYS' to accept SYS only, 'BTC' for BTC only, 'ZEC' for zcash only, or a |-delimited string to accept multiple currencies (e.g. 'BTC|SYS' to accept BTC or SYS). Leave empty for default. Defaults to 'SYS'."
        type: string
      private:
        description: set to true if this offer should be private not be searchable. Defaults to false.
        type: string
      units:
        description: Units that 1 qty represents. For example if selling 1 BTC.
        type: string 
      offertype:
        description: Options of how an offer is sold. 'BUYNOW' for regular Buy It Now offer, 'AUCTION' to auction this offer while providing auction_expires/auction_reserve/auction_require_witness parameters, 'COIN' for offers selling cryptocurrency, or a | -delimited string to create an offer with multiple options(e.g. 'BUYNOW|AUCTION' to create an offer that is sold through an auction but has Buy It Now enabled as well).Leave empty for default. Defaults to 'BUYNOW'.
        type: string
      auction_expires:
        description: If offerType is AUCTION, Datetime of expiration of an auction. Once merchant creates an offer as an auction, the expiry must be non-zero. The auction parameters will not be updateable until an auction expires.
        type: string 
      auction_reserve:
        description: If offerType is AUCTION, Reserve price of an offer publicly. Bids must be of higher price than the reserve price. Any bid below the reserve price will be rejected by consensus checks in escrow. Default is 0.
        type: string 
      auction_require_witness:
        description: If offerType is AUCTION, Require a witness signature for bids of an offer, or release/refund of an escrow funds in an auction for the offer. Set to true if you wish to require witness signature. Default is false.
        type: string 
      auction_deposit:
        description: If offerType is AUCTION. If you require a deposit for each bidder to ensure stake to bidders set this to a percentage of the offer price required to place deposit when doing an initial bid. For Example, 1% of the offer price would be 0.01. Default is 0.
        type: string 
      witness:
        description: Witness alias name that will sign for web-of-trust notarization of this transaction.
        type: string         
  OfferUpdateRequest:
    required:
    - alias
    - guid
    properties:
      alias:
        description: An alias you own.
        type: string
      guid:
        description: GUID of offer to update.
        type: string
      category:
        description: category, 256 characters max.
        type: string
      title:
        description: title, 256 characters max.
        type: string
      quantity:
        description: quantity, > 0 or -1 for infinite
        type: string
      price:
        description: price in <currency>, > 0
        type: string
      description:
        description: description, 512 characters max.
        type: string
      currency:
        description: The currency code that you want your offer to be in ie USD.
        type: string
      private:
        description: set to true if this offer should be private not be searchable. Defaults to false.
        type: string
      certguid:
        description: Set this to the guid of a certificate you wish to sell
        type: string
      commission:
        description: For resold offers.
        type: string
      paymentoptions:
        description: "'SYS' to accept SYS only, 'BTC' for BTC only, 'ZEC' for zcash only, or a |-delimited string to accept multiple currencies (e.g. 'BTC|SYS' to accept BTC or SYS). Leave empty for default. Defaults to 'SYS'."
        type: string
      offertype:
        description: Options of how an offer is sold. 'BUYNOW' for regular Buy It Now offer, 'AUCTION' to auction this offer while providing auction_expires/auction_reserve/auction_require_witness parameters, 'COIN' for offers selling cryptocurrency, or a | -delimited string to create an offer with multiple options(e.g. 'BUYNOW|AUCTION' to create an offer that is sold through an auction but has Buy It Now enabled as well).Leave empty for default. Defaults to 'BUYNOW'.
        type: string
      auction_expires:
        description: If offerType is AUCTION, Datetime of expiration of an auction. Once merchant creates an offer as an auction, the expiry must be non-zero. The auction parameters will not be updateable until an auction expires.
        type: string 
      auction_reserve:
        description: If offerType is AUCTION, Reserve price of an offer publicly. Bids must be of higher price than the reserve price. Any bid below the reserve price will be rejected by consensus checks in escrow. Default is 0.
        type: string 
      auction_require_witness:
        description: If offerType is AUCTION, Require a witness signature for bids of an offer, or release/refund of an escrow funds in an auction for the offer. Set to true if you wish to require witness signature. Default is false.
        type: string 
      auction_deposit:
        description: If offerType is AUCTION. If you require a deposit for each bidder to ensure stake to bidders set this to a percentage of the offer price required to place deposit when doing an initial bid. For Example, 1% of the offer price would be 0.01. Default is 0.
        type: string 
      witness:
        description: Witness alias name that will sign for web-of-trust notarization of this transaction.
        type: string          
  SendFromRequest:
    required:
    - fromaccount
    - tosyscoinaddress
    - amount
    properties:
      fromaccount:
        description: The name of the account to send funds from. May be the default account using "".
        type: string
      tosyscoinaddress:
        description: The syscoin address to send funds to.
        type: string
      amount:
        description: he amount in SYS (transaction fee is added on top).
        type: number
      minconf:
        description: Only use funds with at least this many confirmations.
        type: number
      addlockconf:
        description: Whether to add 5 confirmations to transactions locked via InstantSend
        type: boolean        
      comment:
        description: A comment used to store what the transaction is for. This is not part of the transaction, just kept in your wallet.
        type: string
      commentto:
        description: An optional comment to store the name of the person or organization to which you're sending the transaction. This is not part of the transaction, it is just kept in your wallet.
        type: string
  SendManyRequest:
    required:
    - fromaccount
    - amounts
    properties:
      fromaccount:
        description: DEPRECATED. The account to send the funds from. Should be "" for the default account
        type: string
      amounts:
        description: A json object with addresses and amounts { "address":amount   (numeric) The syscoin address is the key, the numeric amount in SYS is the value,...}
        type: string
      minconf:
        description: Only use the balance confirmed at least this many times.
        type: number
      addlockconf:
        description: Whether to add 5 confirmations to transactions locked via InstantSend
        type: boolean            
      comment:
        description: A comment used to store what the transaction is for. This is not part of the transaction, just kept in your wallet.
        type: string
      subtractfeefromamount:
        description: A json array with addresses. The fee will be equally deducted from the amount of each selected address. Those recipients will receive less syscoins than you enter in their corresponding amount field. If no addresses are specified here, the sender pays the fee. [ "address" Subtract fee from this address,... ]
        type: string
      use_is:
        description: Send this transaction as InstantSend (default, false).
        type: string
      use_ps:
        description: Use anonymized funds only (default, false).
        type: string
  SendToAddressRequest:
    required:
    - syscoinaddress
    - amount
    properties:
      syscoinaddress:
        description: The syscoin address to send to.
        type: string
      amount:
        description: The amount in SYS to send. eg 0.1
        type: number
      comment:
        description: A comment used to store what the transaction is for. This is not part of the transaction, just kept in your wallet.
        type: string
      commentto:
        description: An optional comment to store the name of the person or organization to which you're sending the transaction. This is not part of the transaction, it is just kept in your wallet.
        type: string
      subtractfeefromamount:
        description: The fee will be deducted from the amount being sent. The recipient will receive less syscoins than you enter in the amount field.
        type: string
      use_is:
        description: Send this transaction as InstantSend (default, false).
        type: string
      use_ps:
        description: Use anonymized funds only (default, false).
        type: string
  SignMessageRequest:
    required:
    - syscoinaddress
    - message
    properties:
      syscoinaddress:
        description: The syscoin address to use for the private key.
        type: string
      message:
        description: The message to create a signature of.
        type: string
  WalletPassphraseRequest:
    required:
    - passphrase
    - timeout
    properties:
      passphrase:
        description: The wallet passphrase
        type: string
      timeout:
        description: The time to keep the decryption key in seconds.
        type: number
  WalletPassphraseChangeRequest:
    required:
    - oldpassphrase
    - newpassphrase
    properties:
      oldpassphrase:
        description: The current passphrase
        type: string
      newpassphrase:
        description: The new passphrase
        type: string
  EscrowFeedbackRequest:
    required:
    - escrowguid
    - userfrom
    - feedback
    - rating
    - userto
    properties:
      escrowguid:
        type: string
      userfrom:
        type: string
      feedback:
        type: string
      rating:
        type: string
      userto:
        type: string
      witness:
        type: string
  LoginResponse:
    required:
    - success
    - message
    - token
    properties:
      success:
        type: boolean
      message:
        type: string
      token:
        type: string
  GetBlockResponse:
    properties:
      hash:
        type: string
        description: The block hash (same as provided)
      confirmations:
        type: number
        description: The number of confirmations, or -1 if the block is not on the main chain
      size:
        type: number
        description: The block size
      strippedsize:
        type: number
        description: The block size excluding witness data
      weight:
        type: number
        description: The block weight (BIP 141)
      height:
        type: number
        description: The block height or index
      version:
        type: number
        description: The block version
      versionHex:
        type: string
        description: The block version formatted in hexadecimal
      merkleroot:
        type: string
        description: The merkle root
      tx:
        type: array
        items:
          type: string
        description: The transaction ids
      time:
        type: number
        description: The block time in seconds since epoch (Jan 1 1970 GMT)
      mediantime:
        type: number
        description: The median block time in seconds since epoch (Jan 1 1970 GMT)
      nonce:
        type: number
        description: The nonce
      bits:
        type: string
        description: The bits
      difficulty:
        type: number
        description: The difficulty
      chainwork:
        type: string
        description: Expected number of hashes required to produce the chain up to this block (in hex)
      previousblockhash:
        type: string
        description: The hash of the previous block
      nextblockhash:
        type: string
        description: The hash of the next block
      data:
        type: string
        description: (for verbose=false) A string that is serialized, hex-encoded data for block 'hash'.
  GetBlockchainInfoResponse:
    properties:
      chain:
        type: string
        description: Current network name as defined in BIP70 (main, test, regtest)
      blocks:
        type: number
        description: the current number of blocks processed in the server
      headers:
        type: number
        description: the current number of headers we have validated
      bestblockhash:
        type: string
        description: the hash of the currently best block
      difficulty:
        type: number
        description: the current difficulty
      mediantime:
        type: number
        description: median time for the current best block
      verificationprogress:
        type: number
        description: estimate of verification progress [0..1]
      chainwork:
        type: string
        description: total amount of work in active chain, in hexadecimal
      pruned:
        type: boolean
        description: if the blocks are subject to pruning
      pruneheight:
        type: number
        description: lowest-height complete block stored
      softforks:
        type: array
        items:
          type: object #TODO: define type
        description: status of softforks in progress
      bip9_softforks:
        type: object #TODO: define type
        description: status of BIP9 softforks in progress
  EncryptWalletRequest:
    required:
    - passphrase
    properties:
      passphrase:
        type: string
        description: The pass phrase to encrypt the wallet with. It must be at least 1 character, but should be long.
  StoreDataRequest:
    required:
    - data
    properties:
      data:
        type: string
        description: The data to be stored on the decentralized storage facility. Max size 500kb.
      storeLocations:
        description: "Array of data warehousing facilities to use to store the data, valid values: BFAZURE"
        type: array
        items:
          type: string
  StoreDataResponse:
    required:
    - storeLocations
    properties:
      storeLocations:
        type: array
        items:
          $ref: "#/definitions/DataStoreLocation"
        description: Array of objects which describe where data is stored offchain
  DataStoreLocation:
    required:
    - dataUrl
    properties:
      dataUrl:
        type: string
        description: URL from which the data can be fetched
  NetworkInfo:
    properties:
      version:
        type: number
      subversion:
        type: string
      protocolversion:
        type: number
      localservices:
        type: string
      localrelay:
        type: boolean
      timeoffset:
        type: number
      connections:
        type: number
      networks:
        type: array
        items:
          $ref: "#/definitions/NetworkInfoDetails"
      relayfee:
        type: number
      localaddresses:
        type: array
        items:
          type: string
      warnings:
        type: string
  NetworkInfoDetails:
    properties:
      name:
        type: string
      limited:
        type: boolean
      reachable:
        type: boolean
      proxy:
        type: string
      proxy_randomize_credentials:
        type: boolean
  WhitelistEntry:
    properties:
      alias:
        type: string
      discount_percentage:
        type: number
  GetAddressUTXOsEntry:
      properties:
        address:
          type: string
        txid:
          type: string
        outputIndex:
          type: number
        script:
          type: string
        satoshis:
          type: number
        height:
          type: number